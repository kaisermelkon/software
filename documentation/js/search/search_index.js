var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.87,1,1.598]],["body/components/AppComponent.html",[0,1.464,1,3.032,2,2.42,3,0.21,4,0.179,5,1.989,6,1.989,7,1.989,8,1.989,9,0.179,10,3.43,11,0.355,12,2.42,13,2.881,14,1.989,15,3.418,16,2.844,17,2.42,18,2.59,19,5.841,20,2.59,21,5.251,22,0.21,23,0.682,24,6.417,25,0.682,26,3.052,27,1.146,28,2.501,29,2.891,30,0.395,31,5.251,32,0.842,33,0.024,34,1.146,35,0.313,36,0.842,37,0.63,38,1.573,39,0.728,40,3.952,41,4.031,42,5.251,43,1.293,44,1.483,45,3.258,46,4.656,47,0.523,48,1.36,49,1.298,50,0.742,51,1.073,52,2.691,53,1.573,54,1.573,55,2.59,56,0.789,57,5.251,58,0.646,59,1.011,60,3.43,61,0.241,62,0.241,63,0.842,64,4.031,65,1.444,66,4.031,67,4.031,68,4.031,69,4.031,70,4.031,71,2.881,72,3.43,73,3.43,74,3.033,75,3.952,76,2.136,77,3.165,78,3.566,79,4.031,80,2.501,81,3.566,82,2.136,83,3.43,84,4.031,85,1.989,86,3.033,87,1.74,88,2.59,89,1.989,90,3.052,91,1.989,92,2.501,93,1.633,94,2.501,95,1.633,96,2.501,97,1.633,98,2.501,99,1.74,100,2.501,101,1.858,102,2.501,103,1.74,104,2.501,105,1.74,106,2.501,107,2.501,108,2.501,109,0.093,110,0.121,111,0.093]],["title/modules/AppModule.html",[112,2.356,113,2.356]],["body/modules/AppModule.html",[1,3.192,3,0.192,4,0.164,9,0.164,16,1.492,29,2.768,33,0.024,58,0.802,59,0.924,60,3.134,61,0.22,62,0.22,87,1.59,93,2.598,95,2.598,97,2.598,99,2.768,101,2.956,103,2.768,105,2.768,109,0.085,110,0.114,111,0.085,112,2.502,113,4.974,114,2.286,115,2.502,116,4.753,117,4.204,118,4.753,119,2.772,120,3.134,121,3.134,122,3.134,123,3.134,124,3.134,125,3.98,126,3.164,127,2.956,128,2.956,129,3.164,130,3.164,131,2.442,132,4.209,133,3.134,134,2.502,135,3.684,136,4.209,137,4.948,138,3.134,139,2.772,140,4.209,141,3.134,142,2.106,143,2.286,144,3.134,145,2.772,146,3.684,147,3.684,148,4.948,149,1.952,150,3.684,151,3.684,152,3.684,153,3.134,154,3.134,155,3.134,156,3.134,157,3.134,158,3.684,159,4.753,160,3.684,161,3.684,162,3.684,163,3.684,164,3.684,165,4.948,166,1.952,167,4.209,168,3.134,169,3.684,170,3.134,171,3.134,172,3.684,173,3.684,174,3.134,175,3.684,176,3.684,177,3.684,178,3.684,179,3.684]],["title/modules/AppRoutingModule.html",[112,2.356,125,2.152]],["body/modules/AppRoutingModule.html",[0,1.736,3,0.257,4,0.22,9,0.22,33,0.024,58,0.787,59,1.238,61,0.295,62,0.295,93,2.416,95,2.416,97,2.416,99,2.574,103,2.574,105,2.574,109,0.114,110,0.138,111,0.114,114,3.064,119,3.716,125,3.701,136,4.201,140,5.075,141,5.075,142,3.664,143,3.064,153,4.201,154,4.201,155,4.201,156,4.201,157,4.201,174,4.201,180,4.938,181,4.938,182,3.353,183,4.938,184,4.938,185,1.394,186,5.892,187,4.201,188,1.769,189,3.064,190,3.716,191,2.616,192,4.938]],["title/guards/AuthGuardService.html",[182,2.356,193,2.61]],["body/guards/AuthGuardService.html",[3,0.23,4,0.197,9,0.197,11,0.377,12,2.037,17,2.037,22,0.23,25,0.723,27,1.197,28,2.743,29,2.987,30,0.377,32,1.164,33,0.024,34,1.093,35,0.333,36,1.164,37,0.769,38,1.669,40,4.193,43,1.164,47,0.574,58,0.708,59,1.109,61,0.264,62,0.264,63,1.338,65,1.583,109,0.102,110,0.129,111,0.102,143,3.457,182,3.784,194,4.421,195,5.19,196,3.762,197,5.572,198,5.572,199,6.405,200,3.446,201,4.421,202,2.035,203,4.193,204,3.159,205,5.572,206,5.572,207,6.602,208,6.405,209,6.602,210,4.421,211,3.457,212,3.394,213,2.121,214,4.74,215,4.193,216,1.238,217,4.74,218,4.74,219,5.572,220,3.002,221,1.669,222,4.421,223,2.181,224,2.181,225,4.421,226,1.315,227,3.002,228,4.421,229,2.527]],["title/injectables/AuthService.html",[29,1.497,221,1.039]],["body/injectables/AuthService.html",[3,0.16,4,0.137,9,0.137,11,0.374,17,1.422,22,0.16,23,0.568,25,0.568,27,0.605,29,1.889,30,0.431,32,1.063,33,0.024,34,0.998,35,0.349,36,1.063,37,0.807,38,1.311,39,0.672,40,4.57,43,1.375,46,4.7,47,0.759,49,1.494,56,0.959,58,0.706,59,0.774,61,0.184,62,0.184,63,1.333,65,1.105,109,0.071,110,0.101,111,0.071,131,2.471,143,1.914,144,4.974,145,2.322,167,4.974,168,2.625,185,0.871,189,2.716,200,3.247,202,2.028,204,2.159,211,2.716,212,2.319,213,2.107,216,1.599,220,3.455,221,1.311,223,1.522,224,2.51,226,1.034,230,1.522,231,2.625,232,4.974,233,6.583,234,4.71,235,2.031,236,4.71,237,4.377,238,4.377,239,5.537,240,3.085,241,5.537,242,5.537,243,3.085,244,4.377,245,6.073,246,1.097,247,3.294,248,5.537,249,1.391,250,1.819,251,3.76,252,3.085,253,2.973,254,4.377,255,3.085,256,3.724,257,3.724,258,4.377,259,5.523,260,3.085,261,3.294,262,3.724,263,4.71,264,2.973,265,4.71,266,5.537,267,4.377,268,3.085,269,3.724,270,4.71,271,3.085,272,4.377,273,1.034,274,3.085,275,3.085,276,3.085,277,2.625,278,2.319,279,3.085,280,3.085,281,4.377,282,3.085,283,3.294,284,1.972,285,3.085,286,3.085,287,1.635,288,3.085,289,3.085,290,4.377,291,3.085,292,3.085,293,4.377,294,3.085,295,3.085,296,3.085,297,2.095,298,3.085,299,3.085,300,3.085,301,3.085,302,3.085,303,3.085,304,3.085,305,3.085,306,1.635,307,3.085,308,0.924,309,1.635,310,1.635,311,1.635]],["title/classes/Carro.html",[62,0.207,312,1.838]],["body/classes/Carro.html",[3,0.24,4,0.205,9,0.205,11,0.311,22,0.24,23,0.742,30,0.452,33,0.023,35,0.399,39,0.788,49,1.609,53,2.121,54,2.121,61,0.275,62,0.275,109,0.107,110,0.132,111,0.107,250,1.38,312,3.294,313,1.024,314,3.921,315,2.939,316,1.706,317,6.683,318,3.297,319,1.485,320,3.82,321,4.608,322,4.608,323,3.206,324,4.608,325,4.608,326,4.608]],["title/classes/CarroController.html",[62,0.207,327,2.152]],["body/classes/CarroController.html",[3,0.171,4,0.146,9,0.146,11,0.222,22,0.171,25,0.593,30,0.419,32,1.294,33,0.024,34,1.215,35,0.37,36,1.294,37,0.778,39,0.662,43,0.955,47,0.804,49,1.264,50,0.604,56,0.855,58,0.505,61,0.196,62,0.196,63,1.294,109,0.076,110,0.106,111,0.076,185,1.83,226,1.079,235,2.104,246,0.822,249,1.042,250,1.997,284,1.774,287,3.722,312,3.801,313,0.729,316,1.659,319,1.54,320,3.252,327,3.529,328,2.019,329,2.468,330,1.883,331,3.006,332,3.006,333,4.474,334,3.006,335,3.006,336,1.875,337,4.03,338,1.976,339,3.28,340,1.369,341,3.885,342,3.532,343,1.875,344,3.28,345,1.541,346,1.875,347,3.28,348,1.968,349,1.637,350,1.541,351,4.877,352,2.791,353,3.28,354,1.875,355,3.28,356,1.875,357,3.28,358,1.637,359,1.106,360,1.618,361,1.875,362,5.259,363,3.006,364,3.28,365,1.042,366,3.006,367,4.57,368,3.28,369,2.612,370,2.835,371,1.248,372,1.042,373,1.875,374,2.612,375,2.612,376,1.875,377,2.227,378,1.106,379,1.875,380,2.612,381,2.227,382,1.637,383,1.875,384,1.875,385,2.227,386,3.28,387,3.28,388,1.175,389,3.28]],["title/classes/CarroRoutes.html",[62,0.207,390,2.152]],["body/classes/CarroRoutes.html",[3,0.238,4,0.204,9,0.204,11,0.309,22,0.238,23,0.739,25,0.739,27,1.216,30,0.419,33,0.023,35,0.273,37,0.778,44,1.607,47,0.594,48,1.92,50,1.048,51,1.218,53,1.705,54,1.705,56,0.975,58,0.63,61,0.273,62,0.273,109,0.106,110,0.132,111,0.106,185,1.292,200,3.525,202,1.809,204,2.809,273,1.344,308,1.371,312,3.017,313,1.017,316,1.463,327,2.84,328,2.061,330,2.322,359,1.544,388,1.639,390,3.845,391,3.444,392,1.969,393,3.29,394,3.603,395,5.694,396,3.707,397,3.255,398,4.577,399,3.255,400,3.255,401,4.577,402,2.425,403,2.616,404,4.577,405,2.84,406,4.577,407,2.616,408,4.577,409,2.616,410,4.577,411,2.616,412,4.577,413,4.577,414,4.577,415,3.444,416,4.577]],["title/injectables/CarroService.html",[126,1.711,221,1.039]],["body/injectables/CarroService.html",[3,0.162,4,0.138,9,0.138,11,0.423,17,1.432,22,0.162,23,0.571,25,0.571,27,1.002,30,0.446,32,1.272,33,0.024,34,1.194,35,0.388,36,1.272,37,0.838,38,1.318,39,0.614,43,1.458,44,1.242,47,0.79,48,1.048,49,1.544,50,0.572,51,0.827,56,1.063,58,0.614,59,0.779,61,0.186,62,0.186,63,1.307,65,1.113,109,0.072,110,0.102,111,0.072,126,2.171,149,1.647,221,1.318,223,1.533,226,1.574,230,1.533,246,1.103,249,1.398,250,1.975,273,1.039,312,3.868,319,1.551,320,3.175,338,0.878,340,1.318,345,1.484,348,1.934,349,1.576,350,1.873,351,3.311,358,1.576,365,1.398,371,1.675,372,1.398,378,1.484,382,1.989,417,2.644,418,3.844,419,2.92,420,4.4,421,4.4,422,4.4,423,4.4,424,5.555,425,4.4,426,1.777,427,3.351,428,4.4,429,2.92,430,2.515,431,2.943,432,4.4,433,3.108,434,3.567,435,3.102,436,4.4,437,3.108,438,4.4,439,3.108,440,4.4,441,3.108,442,3.108,443,4.4,444,3.108,445,3.108,446,3.108,447,4.4,448,1.398,449,2.331,450,2.515,451,2.515,452,3.108,453,1.777,454,1.647,455,3.108,456,1.777,457,2.111,458,2.644,459,2.069,460,2.069,461,1.777,462,4.4,463,2.515,464,1.777,465,2.111,466,3.108]],["title/classes/Direccion.html",[62,0.207,448,1.102]],["body/classes/Direccion.html",[3,0.248,4,0.213,9,0.213,11,0.323,22,0.248,23,0.759,30,0.445,33,0.023,35,0.393,39,0.783,49,1.597,53,2.104,54,2.104,61,0.285,62,0.285,109,0.11,110,0.135,111,0.11,313,1.062,315,2.062,316,1.697,319,1.5,323,3.247,448,2.008,467,4.065,468,3.331,469,3.578,470,3.578,471,4.778,472,4.778,473,4.778,474,4.778]],["title/classes/DireccionController.html",[62,0.207,475,2.152]],["body/classes/DireccionController.html",[3,0.165,4,0.141,9,0.141,11,0.214,22,0.165,25,0.579,30,0.414,32,1.28,33,0.024,34,1.202,35,0.366,36,1.28,37,0.756,39,0.723,43,1.365,47,0.795,49,1.362,50,0.584,58,0.494,61,0.189,62,0.19,63,1.343,109,0.073,110,0.103,111,0.073,185,1.869,213,1.966,226,1.054,235,2.096,246,0.795,249,1.008,284,1.742,287,3.707,313,0.705,316,1.652,319,1.533,328,2.001,330,1.85,331,2.953,332,2.953,333,4.395,334,2.953,335,2.953,336,1.813,337,4.015,338,1.967,340,1.337,341,3.863,342,3.508,343,1.813,345,1.506,346,1.813,348,1.947,352,2.699,354,1.813,356,1.813,358,1.599,359,1.07,360,1.565,361,1.813,363,2.953,365,1.008,366,2.953,369,2.552,370,2.77,371,1.207,372,1.008,373,1.813,374,2.552,375,2.552,376,1.813,377,2.154,378,1.07,379,1.813,380,2.552,381,2.154,382,1.599,383,1.813,384,1.813,385,2.154,388,1.136,392,1.419,448,2.273,449,2.365,468,2.765,469,2.97,470,2.97,475,3.478,476,2.387,477,3.172,478,3.785,479,3.172,480,3.172,481,2.77,482,3.798,483,3.172,484,3.172,485,3.172,486,5.165,487,6.128,488,3.172,489,4.464,490,3.172,491,3.798,492,3.172,493,3.172,494,3.172,495,3.172,496,3.172]],["title/classes/DireccionRoutes.html",[62,0.207,497,2.152]],["body/classes/DireccionRoutes.html",[3,0.238,4,0.204,9,0.204,11,0.309,22,0.238,23,0.739,25,0.739,27,1.216,30,0.419,33,0.023,35,0.273,37,0.778,39,0.63,44,1.607,47,0.594,48,1.92,50,1.048,51,1.218,53,1.705,54,1.705,56,0.856,58,0.63,61,0.273,62,0.273,109,0.106,110,0.132,111,0.106,185,1.292,200,3.525,202,1.809,204,2.809,273,1.344,308,1.371,313,1.017,316,1.463,328,2.061,330,2.322,359,1.544,388,1.639,392,1.969,393,3.29,394,3.603,396,3.707,397,3.255,399,3.255,400,3.255,402,2.425,403,2.616,405,2.84,407,2.616,409,2.616,411,2.616,448,1.809,475,2.84,497,3.845,498,3.444,499,5.694,500,4.577,501,4.577,502,4.577,503,4.577,504,4.577,505,4.577,506,4.577,507,4.577,508,4.577,509,3.444,510,4.577]],["title/injectables/DireccionService.html",[127,1.598,221,1.039]],["body/injectables/DireccionService.html",[3,0.155,4,0.132,9,0.132,11,0.418,17,1.372,22,0.155,23,0.554,25,0.554,27,0.979,30,0.441,32,1.254,33,0.024,34,1.177,35,0.384,36,1.254,37,0.802,38,1.278,39,0.76,43,1.506,44,1.205,47,0.779,48,1.439,49,1.577,50,0.548,51,0.792,56,1.004,58,0.603,59,0.746,61,0.178,62,0.178,63,1.345,65,1.066,109,0.069,110,0.099,111,0.069,127,1.966,149,1.577,213,2.073,221,1.278,223,1.468,226,1.542,230,1.468,246,1.07,249,1.356,273,1.007,319,1.542,338,0.84,340,1.278,345,1.439,348,1.907,350,1.439,358,1.528,365,1.356,371,1.624,372,1.356,378,1.439,382,1.951,392,1.356,419,2.851,426,1.702,427,3.296,429,2.851,430,2.439,431,2.886,434,3.539,435,3.078,448,2.318,449,3.18,450,2.439,451,2.439,453,1.702,454,1.577,456,1.702,457,2.021,459,2.02,460,2.02,461,1.702,463,2.439,464,1.702,465,2.021,468,2.96,469,2.886,470,3.18,478,3.734,481,2.647,482,3.63,491,4.635,511,2.533,512,3.094,513,4.267,514,4.267,515,4.267,516,5.447,517,4.267,518,4.267,519,4.267,520,4.267,521,2.977,522,4.267,523,2.977,524,4.267,525,2.977,526,2.977,527,4.267,528,2.977,529,4.267,530,2.977,531,2.977,532,2.977,533,4.267,534,2.977,535,2.977,536,2.24,537,4.267,538,2.977]],["title/classes/Grupo.html",[62,0.207,188,1.242]],["body/classes/Grupo.html",[3,0.24,4,0.205,9,0.205,11,0.312,22,0.24,23,0.743,30,0.452,33,0.023,35,0.399,39,0.788,49,1.445,53,2.122,54,2.122,55,3.298,61,0.275,62,0.276,109,0.107,110,0.132,111,0.107,188,2.228,313,1.025,315,1.991,316,1.706,319,1.486,323,3.574,512,4.148,539,3.926,540,5.688,541,4.54,542,4.615,543,4.615,544,4.615,545,4.615,546,4.615]],["title/components/GrupoComponent.html",[0,0.87,93,1.405]],["body/components/GrupoComponent.html",[0,1.143,2,0.815,3,0.092,4,0.079,5,0.872,6,0.872,7,0.872,8,0.872,9,0.079,11,0.244,12,1.32,13,1.781,14,0.872,15,1.413,16,1.16,18,1.413,20,1.413,22,0.092,23,0.372,25,0.372,26,2.047,27,0.708,30,0.384,32,1.02,33,0.024,34,0.958,35,0.33,36,1.02,37,0.792,38,1.774,39,0.54,43,1.118,44,0.809,45,1.777,47,0.633,50,0.527,51,0.762,52,1.32,55,1.781,56,0.94,58,0.666,59,0.443,61,0.106,62,0.106,63,1.074,65,0.633,71,1.413,76,2.586,77,3.171,78,1.201,80,1.777,81,1.945,82,2.199,85,1.781,87,0.763,88,1.413,89,0.872,90,0.872,91,0.872,93,1.16,126,2.727,127,2.548,128,2.466,129,2.727,130,2.727,131,2.104,166,0.937,188,2.216,191,1.518,202,1.988,211,2.575,212,2.199,214,2.437,216,1.523,220,2.818,224,2.249,226,1.213,227,2.818,229,2.606,235,1.804,253,1.201,273,0.98,278,2.416,283,2.155,284,1.865,306,0.937,308,1.081,309,0.937,310,0.937,311,1.913,315,1.236,318,2.97,319,0.802,320,1.637,338,1.019,345,0.966,349,1.293,350,2.031,365,1.551,372,1.551,378,1.646,392,0.91,448,1.449,459,1.462,460,1.462,468,2.047,469,1.518,470,1.518,478,1.637,547,1.504,548,3.61,549,2.864,550,3.096,551,2.835,552,3.138,553,2.437,554,2.864,555,2.864,556,1.777,557,1.504,558,2.864,559,2.575,560,2.199,561,2.155,562,2.864,563,2.864,564,1.768,565,2.437,566,2.437,567,5.351,568,3.531,569,2.864,570,1.768,571,2.864,572,3.123,573,2.864,574,1.768,575,2.864,576,1.768,577,2.864,578,1.768,579,2.437,580,2.155,581,1.777,582,2.829,583,1.768,584,2.864,585,2.575,586,2.864,587,2.575,588,2.864,589,1.768,590,2.24,591,1.768,592,1.331,593,1.011,594,1.331,595,1.331,596,1.331,597,1.331,598,1.331,599,1.504,600,1.518,601,1.504,602,1.504,603,1.504,604,1.504,605,1.768,606,1.768,607,1.768,608,1.504,609,2.864,610,3.634,611,2.864,612,3.123,613,2.864,614,1.768,615,2.864,616,1.768,617,2.864,618,1.504,619,1.201,620,1.768,621,1.768,622,1.768,623,1.768,624,1.768,625,3.61,626,1.768,627,1.768,628,1.768,629,1.768,630,1.768,631,1.768,632,1.768,633,1.768,634,1.504,635,1.768,636,1.768,637,1.768,638,1.768,639,1.768,640,1.504,641,1.768,642,1.768,643,1.768,644,2.437,645,1.777,646,1.413,647,2.437,648,2.864,649,2.864,650,2.864,651,3.531,652,1.201,653,2.437,654,2.437,655,2.437,656,2.437,657,2.155,658,2.437,659,2.437,660,2.155,661,2.437,662,2.437,663,2.864,664,2.155,665,1.637,666,3.078,667,2.372,668,1.913,669,3.009,670,1.768,671,3.078,672,3.138,673,1.201,674,1.945,675,1.201,676,1.201,677,1.504,678,1.504,679,2.79,680,2.24,681,3.314,682,1.201,683,1.777,684,2.155,685,1.331,686,1.201,687,2.937,688,2.063,689,2.063,690,1.331,691,2.606,692,2.416,693,1.331,694,1.201,695,1.331,696,1.331,697,1.331,698,1.945,699,2.79,700,1.331,701,2.79,702,1.331,703,2.372,704,2.437,705,3.495,706,2.199,707,2.372,708,2.586,709,2.586,710,2.586,711,2.586,712,2.372,713,3.059,714,1.201,715,1.201,716,2.723,717,2.451,718,2.586,719,2.372,720,2.372,721,2.372,722,2.372,723,2.063,724,3.19,725,1.637,726,1.637,727,1.504,728,2.24,729,1.768,730,1.201,731,1.945,732,1.504,733,1.945,734,1.201,735,3.096,736,2.575,737,1.777,738,1.777,739,2.451,740,1.504,741,1.945,742,1.201,743,1.331,744,1.777,745,1.504,746,1.768,747,1.777,748,1.945,749,1.504,750,1.097,751,1.504,752,2.24,753,1.201,754,1.097,755,1.201,756,1.777,757,1.097,758,1.777,759,1.777,760,1.777,761,2.818,762,1.201]],["title/injectables/GrupoService.html",[128,1.598,221,1.039]],["body/injectables/GrupoService.html",[3,0.141,4,0.121,9,0.121,11,0.432,17,1.249,22,0.141,23,0.517,25,0.517,27,0.927,30,0.443,32,1.314,33,0.024,34,1.234,35,0.387,36,1.314,37,0.836,38,1.194,39,0.707,43,1.456,44,1.125,47,0.816,48,0.914,49,1.577,50,0.499,51,0.721,56,1.072,58,0.577,59,0.679,61,0.162,62,0.162,63,1.336,65,0.97,109,0.063,110,0.092,111,0.063,128,1.836,149,1.436,188,2.599,216,0.885,221,1.194,223,1.337,226,1.61,230,1.337,246,0.999,249,1.266,250,2.001,273,1.231,319,1.548,338,0.765,340,1.194,345,1.344,348,2.084,349,2.206,350,2.156,358,1.427,365,1.656,371,1.517,372,1.266,378,1.344,382,1.867,419,2.702,426,1.549,427,3.175,429,2.702,430,2.278,431,2.762,434,3.631,435,3.158,448,1.266,449,2.112,450,2.278,451,2.278,453,2.702,454,1.436,456,1.549,459,1.914,460,1.914,461,1.549,463,2.278,464,1.549,465,1.84,541,4.341,550,3.539,560,3.264,763,2.305,764,3.985,765,3.985,766,3.985,767,3.391,768,3.391,769,4.434,770,3.391,771,3.985,772,3.985,773,3.985,774,3.985,775,2.71,776,3.985,777,2.71,778,3.985,779,2.71,780,3.985,781,2.71,782,3.985,783,2.71,784,2.71,785,3.985,786,2.71,787,3.985,788,2.71,789,3.985,790,2.71,791,3.985,792,2.71,793,2.71,794,2.71,795,2.71,796,2.71,797,2.71,798,2.71,799,2.71,800,2.305]],["title/classes/GruposController.html",[62,0.207,801,2.152]],["body/classes/GruposController.html",[3,0.141,4,0.121,9,0.121,11,0.184,22,0.141,25,0.518,30,0.425,32,1.314,33,0.024,34,1.234,35,0.375,36,1.314,37,0.768,39,0.696,43,0.567,47,0.817,49,1.335,50,0.5,56,0.903,58,0.442,61,0.162,62,0.162,63,1.314,109,0.063,110,0.092,111,0.063,185,1.887,188,2.519,213,1.034,216,0.887,226,1.313,227,1.844,229,1.553,235,2.117,246,0.681,249,0.863,250,2.002,273,0.943,284,1.596,287,3.736,313,0.603,316,1.669,319,1.53,328,2.033,330,1.695,331,2.706,332,2.706,334,2.706,335,2.706,336,1.553,337,4.049,338,1.985,340,1.196,341,3.85,342,3.389,343,1.553,345,1.346,346,1.553,348,2.085,349,2.208,350,2.079,354,1.553,356,1.553,358,1.43,359,0.916,360,1.34,361,1.553,363,3.323,365,0.863,366,3.178,369,2.706,370,1.685,371,1.034,372,0.863,373,1.553,374,2.282,375,2.282,376,1.553,378,0.916,379,1.553,380,2.282,382,1.43,383,2.282,384,1.553,388,0.973,540,2.311,541,4.344,550,3.215,560,3.613,634,2.311,715,3.775,767,3.397,768,4.027,770,3.397,801,3.238,802,2.044,803,3.992,804,2.716,805,2.716,806,2.716,807,3.992,808,2.716,809,3.992,810,2.716,811,2.716,812,2.716,813,3.992,814,2.716,815,2.716,816,2.716,817,5.56,818,3.992,819,4.734,820,3.992,821,3.992,822,2.716,823,2.716,824,2.716,825,3.992,826,2.716,827,2.716,828,2.716,829,2.716,830,2.716,831,2.716]],["title/components/InicioComponent.html",[0,0.87,95,1.405]],["body/components/InicioComponent.html",[0,1.441,2,1.361,3,0.154,4,0.131,5,1.457,6,1.457,7,1.457,8,1.457,9,0.131,11,0.336,12,1.955,13,2.449,14,1.457,15,2.093,16,1.718,18,2.093,20,2.093,22,0.154,23,0.551,25,0.551,26,1.457,27,0.974,30,0.388,32,1.037,33,0.024,34,0.974,35,0.324,36,1.037,37,0.824,38,1.793,39,0.469,44,1.198,47,0.644,50,0.544,51,0.786,52,1.955,56,0.899,58,0.636,59,0.74,61,0.176,62,0.176,63,1.134,65,1.058,71,2.093,74,2.222,77,2.952,82,2.248,85,1.457,87,1.275,88,2.093,89,1.457,90,1.457,91,1.457,95,1.718,128,2.907,130,3.169,131,2.445,188,2.41,189,3.368,202,1.902,211,2.632,212,3.171,213,2.066,216,1.33,224,2.093,226,1.172,227,2.006,229,1.688,235,1.977,246,1.064,273,1.002,278,2.876,284,1.831,297,2.006,306,1.565,308,0.885,309,1.565,310,1.565,311,1.565,318,2.449,319,1.33,323,2.677,338,1.198,348,1.725,349,1.058,350,2.167,459,1.718,460,1.718,550,2.881,552,2.248,557,2.513,559,3.368,560,3.592,561,3.193,580,4.504,592,2.222,593,1.688,594,2.222,610,2.006,618,2.513,619,2.006,665,1.688,666,2.876,667,2.425,668,2.876,669,2.248,671,2.248,672,2.248,679,2.839,684,3.193,685,2.222,686,2.881,687,3.103,688,1.688,689,1.688,690,2.222,691,2.839,692,2.631,693,2.222,694,2.006,695,2.222,696,2.222,697,2.222,698,3.372,699,2.425,700,2.222,701,1.688,702,2.222,703,1.688,705,3.046,706,2.248,707,2.425,708,2.248,709,2.248,710,2.248,711,2.248,713,2.839,714,2.006,715,2.006,716,1.565,718,1.565,719,2.425,720,2.425,721,2.425,722,2.425,723,1.688,724,1.565,725,1.688,726,2.425,769,4.618,832,2.513,833,4.966,834,4.243,835,4.243,836,2.953,837,4.243,838,2.953,839,3.61,840,4.243,841,2.953,842,3.61,843,2.881,844,4.243,845,2.953,846,3.61,847,2.953,848,3.193,849,2.513,850,2.513,851,2.953,852,2.513,853,2.953,854,2.953,855,4.243,856,2.953,857,2.222,858,2.953,859,2.953,860,2.953,861,2.953,862,2.953,863,2.953,864,2.513,865,2.953,866,2.953,867,2.953,868,2.953,869,2.953,870,2.222,871,4.243,872,4.243,873,4.243,874,3.61,875,2.953,876,2.513,877,2.953,878,2.953]],["title/classes/Invitacion.html",[62,0.207,551,1.838]],["body/classes/Invitacion.html",[3,0.232,4,0.199,9,0.199,11,0.302,22,0.232,23,0.727,30,0.457,33,0.023,35,0.403,39,0.791,49,1.541,53,2.133,54,2.168,61,0.266,62,0.267,109,0.103,110,0.13,111,0.103,313,0.991,315,1.926,316,1.713,319,1.471,323,3.562,468,3.266,551,3.246,879,3.796,880,4.108,881,4.982,882,4.496,883,4.462,884,4.462,885,4.462,886,4.462,887,4.462,888,4.462]],["title/classes/InvitacionController.html",[62,0.207,889,2.152]],["body/classes/InvitacionController.html",[3,0.167,4,0.143,9,0.143,11,0.216,22,0.167,25,0.583,30,0.415,32,1.284,33,0.024,34,1.206,35,0.367,36,1.284,37,0.712,39,0.713,43,1.284,47,0.798,49,1.251,50,0.589,56,0.481,58,0.497,61,0.191,62,0.191,63,1.284,109,0.074,110,0.104,111,0.074,185,1.849,191,3.614,213,1.219,216,1.154,226,1.061,235,2.098,246,0.803,249,1.018,250,1.346,284,1.751,287,3.712,313,0.712,316,1.654,319,1.526,328,2.006,330,1.859,331,2.968,332,2.968,334,2.968,335,2.968,336,1.831,337,4.019,338,1.97,340,1.346,341,3.869,342,3.515,343,1.831,345,1.516,346,1.831,348,1.953,349,2.016,354,1.831,356,1.831,358,1.609,359,1.08,360,1.58,361,1.831,363,2.968,365,1.018,366,2.968,369,2.569,371,1.219,372,1.018,373,1.831,374,2.569,375,2.569,376,1.831,378,1.08,379,1.831,380,2.569,382,1.609,383,1.831,384,1.831,388,1.147,392,1.789,478,3.683,551,3.769,590,2.788,857,2.41,881,3.907,889,3.492,890,2.41,891,4.417,892,3.202,893,3.202,894,3.202,895,3.202,896,3.202,897,3.202,898,3.202,899,5.192,900,3.202,901,4.494,902,3.202,903,3.202,904,3.202,905,3.202,906,3.202,907,3.202,908,3.202,909,3.202,910,3.202,911,3.202,912,3.823,913,2.725,914,3.202,915,3.202,916,3.202,917,3.202,918,3.202]],["title/classes/InvitacionRoutes.html",[62,0.207,919,2.152]],["body/classes/InvitacionRoutes.html",[3,0.237,4,0.203,9,0.203,11,0.308,22,0.237,23,0.738,25,0.738,27,1.215,30,0.418,33,0.023,35,0.272,37,0.778,39,0.629,44,1.605,47,0.592,48,1.917,50,1.046,51,1.215,53,1.702,54,1.702,56,0.854,58,0.629,61,0.272,62,0.273,109,0.106,110,0.131,111,0.106,185,1.289,191,3.012,200,3.524,202,1.806,204,2.804,273,1.342,308,1.367,313,1.014,316,1.462,328,2.059,330,2.32,359,1.54,388,1.635,392,2.118,393,3.288,394,3.6,396,3.703,397,3.249,399,3.249,400,3.249,402,2.419,403,2.609,405,2.832,407,2.609,409,2.609,411,2.609,889,2.832,919,3.841,920,3.435,921,5.684,922,4.565,923,4.565,924,4.565,925,4.565,926,4.565,927,4.565,928,4.565,929,4.565,930,4.565,931,3.435,932,4.565]],["title/injectables/InvitacionService.html",[129,1.711,221,1.039]],["body/injectables/InvitacionService.html",[3,0.159,4,0.136,9,0.136,11,0.421,17,1.411,22,0.159,23,0.565,25,0.565,27,0.994,30,0.444,32,1.266,33,0.024,34,1.189,35,0.387,36,1.266,37,0.789,38,1.304,39,0.754,43,1.49,44,1.229,47,0.786,48,1.469,49,1.541,50,0.564,51,0.815,56,1.025,58,0.61,59,0.768,61,0.183,62,0.183,63,1.302,65,1.097,109,0.071,110,0.101,111,0.071,129,2.148,149,1.623,191,2.924,216,1.226,221,1.304,223,1.511,226,1.552,230,1.511,246,1.092,249,1.384,250,1.304,273,1.028,319,1.548,338,0.865,340,1.304,345,1.469,348,1.925,349,1.976,350,1.469,358,1.56,365,1.384,371,1.658,372,1.384,378,1.469,382,1.976,392,1.754,419,2.897,426,1.751,427,3.333,429,2.897,430,2.489,431,2.924,434,3.558,435,3.094,448,1.384,449,2.307,450,2.489,451,2.489,453,1.751,454,1.623,456,1.751,457,2.08,459,2.235,460,2.235,461,1.751,463,2.897,464,1.751,478,3.838,551,3.853,608,2.606,881,3.277,891,3.705,933,2.606,934,3.813,935,4.355,936,4.355,937,4.355,938,5.519,939,4.355,940,4.355,941,4.355,942,3.063,943,4.355,944,3.063,945,4.355,946,3.063,947,3.063,948,4.355,949,3.063,950,4.355,951,3.063,952,3.063,953,3.063,954,4.355,955,3.063,956,3.063,957,4.355,958,2.606,959,3.063]],["title/components/InvitacionesComponent.html",[0,0.87,97,1.405]],["body/components/InvitacionesComponent.html",[0,1.067,2,1.049,3,0.118,4,0.101,5,1.123,6,1.123,7,1.123,8,1.123,9,0.101,11,0.323,12,1.611,13,2.1,14,1.123,15,1.725,16,1.416,18,1.725,20,1.725,22,0.118,23,0.454,25,0.454,26,2.356,27,0.835,30,0.368,32,0.889,33,0.024,34,0.835,35,0.285,36,0.889,37,0.758,38,1.833,39,0.699,43,1.32,45,2.963,47,0.62,50,0.419,51,0.606,52,1.611,54,1.047,55,2.356,56,0.949,58,0.677,59,0.571,61,0.136,62,0.136,63,1.183,65,0.815,71,1.725,76,1.206,77,2.883,81,1.546,82,1.206,85,1.123,87,0.983,88,1.725,89,1.123,90,1.123,91,1.123,97,1.416,126,2.957,127,2.762,128,2.762,129,2.883,131,2.281,188,1.71,191,3.389,202,2.007,213,1.331,216,1.437,224,2.356,226,0.538,235,1.916,246,0.877,250,1.047,273,0.826,278,2.882,284,2.064,306,1.206,308,1.543,309,1.206,310,1.206,311,1.206,315,1.509,318,2.356,320,1.999,338,1.348,345,1.179,348,1.111,350,1.611,351,2.631,365,1.857,372,1.111,378,1.971,392,1.728,448,1.518,459,1.934,460,1.934,468,2.356,469,1.853,470,1.853,478,1.999,481,2.963,551,2.73,553,2.975,559,2.963,560,1.853,565,2.975,566,2.975,568,2.975,572,2.631,580,3.594,585,4.278,592,1.713,593,1.302,595,1.713,596,1.713,597,1.713,598,1.713,599,1.937,603,1.937,644,2.975,645,2.963,646,2.356,647,2.975,651,2.975,652,1.546,653,2.975,654,2.975,655,2.975,656,2.975,657,2.631,658,2.975,659,2.975,660,2.631,661,2.975,662,2.975,665,1.302,666,2.73,667,1.999,668,1.853,669,2.255,671,2.255,672,2.255,673,1.546,674,2.374,675,1.546,676,1.546,677,1.937,678,1.937,679,2.433,684,2.631,685,1.713,686,1.546,687,2.73,688,1.999,689,1.302,690,1.713,691,2.433,692,2.255,693,1.713,694,1.546,695,1.713,696,1.713,697,1.713,698,2.374,699,1.999,700,1.713,701,1.999,702,1.713,703,1.302,704,2.975,705,3.001,706,2.255,707,2.433,708,2.255,709,2.255,710,2.255,711,2.255,712,1.999,713,2.433,714,1.546,715,1.546,716,1.853,717,2.374,718,1.853,719,1.999,720,1.999,721,1.999,722,1.999,723,1.302,724,1.206,725,1.302,726,1.302,727,1.937,728,1.413,730,1.546,731,2.374,843,2.374,874,2.975,934,1.713,960,1.937,961,2.975,962,4.257,963,3.497,964,5.439,965,2.277,966,2.277,967,2.277,968,3.497,969,3.497,970,3.497,971,2.277,972,3.497,973,3.497,974,2.975,975,3.497,976,2.277,977,2.277,978,3.497,979,2.277,980,2.277,981,3.622,982,2.277,983,2.277,984,2.277,985,2.277,986,3.497,987,4.776,988,2.277,989,2.277,990,2.277,991,3.497,992,6.119,993,2.277,994,3.497,995,3.497,996,2.277,997,1.937,998,3.497,999,3.497,1000,1.937,1001,4.776,1002,1.937,1003,4.776,1004,1.937,1005,4.776,1006,1.937,1007,2.277,1008,2.277,1009,2.277,1010,2.277,1011,2.277,1012,2.277,1013,2.277,1014,2.277,1015,3.497,1016,2.277,1017,2.277,1018,2.277,1019,2.277,1020,2.277,1021,2.277,1022,2.277,1023,2.277,1024,2.277,1025,2.277,1026,2.277,1027,2.277,1028,2.277,1029,2.277,1030,2.277,1031,2.277,1032,2.277,1033,3.497,1034,3.497,1035,3.497,1036,3.497,1037,3.497,1038,2.374,1039,3.497,1040,2.374,1041,3.497,1042,3.497]],["title/components/LoginComponent.html",[0,0.87,99,1.497]],["body/components/LoginComponent.html",[0,1.389,1,1.242,2,1.829,3,0.14,4,0.12,5,1.329,6,1.329,7,1.329,8,1.329,9,0.12,11,0.318,12,1.829,13,2.324,14,1.329,15,3.15,16,2.586,18,1.958,20,1.958,22,0.14,23,0.515,25,0.515,26,1.329,27,0.924,28,1.672,29,2.654,30,0.374,32,0.829,33,0.024,34,1.02,35,0.237,36,0.829,37,0.786,38,1.557,39,0.439,43,0.829,47,0.611,48,0.909,49,0.599,52,2.395,58,0.575,59,0.676,61,0.161,62,0.161,63,0.984,71,1.958,76,3.176,77,3.15,80,2.923,82,2.496,85,1.329,87,1.163,88,1.958,89,1.329,90,2.564,91,1.329,92,1.672,93,1.091,94,1.672,95,1.091,96,1.672,97,1.091,98,1.672,99,2.243,100,1.672,101,1.242,102,1.672,103,1.163,104,1.672,105,1.163,106,1.672,107,1.672,108,1.672,109,0.062,110,0.092,111,0.062,131,2.39,166,1.428,185,1.12,189,2.462,202,1.842,203,2.986,211,2.462,212,2.754,215,2.986,216,1.483,218,3.377,224,1.329,226,0.937,232,4.009,234,4.423,235,1.557,236,4.423,246,1.303,247,2.986,251,2.695,253,2.695,256,3.377,257,3.377,259,3.377,261,4.362,263,2.292,265,3.377,273,1.452,278,2.496,284,1.339,297,1.83,306,1.428,308,0.807,309,1.428,310,1.428,311,1.428,318,3.15,556,2.462,559,2.462,581,2.462,582,3.438,587,3.438,593,1.54,646,1.958,665,1.54,666,3.259,667,2.269,668,1.428,669,3.071,671,2.754,672,3.176,679,3.314,680,2.923,681,3.763,682,1.83,683,2.462,687,3.168,688,2.269,689,2.269,691,2.693,692,1.428,699,2.269,701,1.54,703,2.693,705,3.609,706,1.428,707,1.54,708,2.496,709,2.496,710,2.496,711,2.496,712,2.269,713,2.269,716,2.103,718,1.428,719,2.269,720,2.269,721,2.269,722,2.269,723,1.54,724,3.506,725,1.54,726,1.54,728,3.438,733,3.2,734,1.83,735,3.53,736,2.923,737,1.672,738,1.672,739,3.2,741,2.695,742,1.83,744,1.672,747,2.462,748,2.695,750,1.672,752,2.923,753,1.83,754,1.672,755,1.83,756,2.462,757,1.672,758,2.462,759,2.462,760,2.462,761,3.53,762,1.83,870,2.027,1043,2.292,1044,5.198,1045,4.712,1046,3.969,1047,3.969,1048,2.694,1049,2.694,1050,2.694,1051,3.377,1052,3.969,1053,2.986,1054,3.969,1055,3.969,1056,2.027,1057,2.694,1058,2.027,1059,2.694,1060,2.694,1061,2.694,1062,2.694,1063,2.694,1064,2.694,1065,4.423,1066,4.423,1067,3.969,1068,3.377,1069,3.377,1070,3.969,1071,2.986,1072,2.027,1073,2.027,1074,2.027,1075,2.027,1076,2.027]],["title/components/NavbarComponent.html",[0,0.87,101,1.598]],["body/components/NavbarComponent.html",[0,1.043,1,0.687,2,1.147,3,0.078,4,0.066,5,0.736,6,0.736,7,0.736,8,0.736,9,0.066,11,0.253,12,1.147,13,1.581,14,0.736,15,2.715,16,2.171,18,1.228,20,1.228,22,0.129,23,0.323,25,0.323,26,0.736,27,0.629,28,0.925,29,2.158,30,0.338,32,0.669,33,0.024,34,0.816,35,0.298,36,0.669,37,0.834,38,1.686,39,0.693,43,1.329,44,1.175,47,0.323,50,0.458,51,0.662,52,1.147,55,1.228,56,1.008,58,0.609,59,0.374,61,0.089,62,0.089,63,1.045,71,1.228,73,2.118,74,3.59,75,2.412,76,2.205,77,1.228,78,2.176,83,1.269,85,0.736,86,1.122,87,0.644,88,1.228,89,0.736,90,1.846,91,0.736,92,0.925,93,0.604,94,0.925,95,0.604,96,0.925,97,0.604,98,0.925,99,0.644,100,0.925,101,1.724,102,0.925,103,0.644,104,0.925,105,0.644,106,0.925,107,0.925,108,0.925,109,0.034,110,0.058,111,0.034,127,2.393,128,2.393,129,2.562,130,2.562,131,1.977,134,1.013,166,0.79,170,1.269,171,1.269,186,3.184,188,2.417,189,1.545,190,1.873,191,2.528,202,2.048,203,2.412,212,3.223,213,2.363,216,1.251,217,3.54,220,1.691,224,2.218,226,0.352,229,1.832,235,1.498,246,1.541,249,1.589,250,1.649,251,1.691,253,4.027,262,2.118,264,1.013,273,0.884,278,2.752,284,1.856,306,0.79,308,1.246,309,0.79,310,0.79,311,1.698,318,3,319,0.831,338,1.056,340,0.746,349,0.892,350,2.145,365,1.189,372,1.189,392,1.91,448,1.749,459,1.515,460,1.515,468,1.228,469,1.319,470,1.319,481,1.545,512,0.925,536,1.122,541,1.691,552,1.319,556,1.545,559,2.322,560,1.983,561,2.816,579,1.269,581,1.545,582,3.222,587,2.322,590,3.102,593,0.853,594,1.122,597,1.122,600,2.205,601,1.269,610,3.395,612,2.412,619,3.24,640,1.269,652,1.691,664,2.816,666,2.528,668,1.983,669,1.698,671,1.698,672,1.698,673,1.013,674,1.691,675,1.013,676,1.013,680,0.925,682,2.176,683,1.988,686,1.013,692,1.319,694,1.691,698,1.013,705,2.382,706,0.79,708,1.319,709,1.319,710,1.319,711,1.319,712,1.832,714,1.013,716,2.84,717,2.176,718,1.698,724,1.698,730,3.527,731,1.013,736,1.545,737,1.545,738,1.545,743,1.122,744,2.322,747,0.925,750,2.582,752,0.925,754,0.925,756,1.545,757,1.545,758,3.326,759,0.925,760,0.925,800,1.269,839,1.269,843,1.013,846,2.118,849,1.269,876,1.269,880,0.925,974,2.727,981,3.184,1051,1.269,1053,2.816,1056,1.122,1058,1.122,1071,2.816,1075,1.873,1076,2.412,1077,1.269,1078,3.742,1079,3.205,1080,2.49,1081,3.205,1082,3.205,1083,2.118,1084,1.491,1085,1.491,1086,2.118,1087,1.491,1088,2.49,1089,5.36,1090,1.491,1091,1.491,1092,2.49,1093,1.491,1094,2.118,1095,3.742,1096,1.491,1097,1.491,1098,3.131,1099,2.49,1100,2.49,1101,1.491,1102,1.491,1103,1.491,1104,1.491,1105,1.491,1106,1.491,1107,1.491,1108,1.269,1109,1.491,1110,1.491,1111,2.49,1112,1.491,1113,1.491,1114,2.49,1115,2.49,1116,1.269,1117,1.491,1118,1.269,1119,2.118,1120,1.491,1121,1.269,1122,1.269,1123,1.269,1124,2.118,1125,1.491,1126,1.491,1127,1.491,1128,1.491,1129,1.491,1130,1.491,1131,2.49,1132,1.491,1133,1.491,1134,1.491,1135,1.491,1136,1.491,1137,3.205,1138,1.491,1139,1.491,1140,1.491,1141,1.491,1142,2.49,1143,1.491,1144,1.491,1145,1.491,1146,1.491,1147,1.491,1148,1.491,1149,1.491,1150,1.491,1151,1.491,1152,2.49,1153,2.49,1154,2.118,1155,2.118,1156,2.118,1157,3.184,1158,2.49,1159,6.403,1160,3.205,1161,3.205,1162,3.205,1163,3.205,1164,5.631,1165,3.205,1166,3.205,1167,4.496,1168,3.205,1169,4.161,1170,3.205,1171,3.205,1172,3.205,1173,3.205,1174,3.205,1175,3.742,1176,4.771,1177,2.825,1178,3.742,1179,3.205,1180,3.205,1181,2.49,1182,2.49,1183,2.49,1184,2.49,1185,2.49,1186,3.742,1187,3.742,1188,5,1189,2.49,1190,2.49,1191,2.49,1192,2.49,1193,4.161,1194,2.49,1195,2.49,1196,3.742,1197,1.491,1198,5.631,1199,3.742,1200,3.742,1201,3.742,1202,1.491,1203,3.205,1204,2.49,1205,3.205,1206,4.496,1207,4.496,1208,3.205,1209,3.205,1210,3.205,1211,4.161,1212,2.49,1213,5.194,1214,1.491,1215,3.205,1216,1.491,1217,2.49,1218,2.49,1219,1.491,1220,1.491,1221,1.491,1222,2.727,1223,2.49,1224,1.491,1225,1.491,1226,1.491,1227,1.491,1228,1.491,1229,1.491,1230,1.491,1231,1.491,1232,1.491,1233,1.491,1234,1.491,1235,1.491,1236,1.122,1237,1.491,1238,1.491,1239,1.491,1240,1.491,1241,3.205,1242,2.49,1243,1.491,1244,2.49,1245,1.491,1246,1.491,1247,1.491,1248,1.491,1249,1.491,1250,2.49,1251,1.491,1252,5.194,1253,1.491,1254,1.491,1255,1.491,1256,1.491,1257,1.491,1258,1.491,1259,1.491,1260,1.491,1261,1.491,1262,1.491,1263,2.49,1264,3.742,1265,2.49,1266,2.49,1267,3.205,1268,2.49,1269,2.49,1270,2.49,1271,2.49,1272,3.205,1273,2.49,1274,1.491,1275,1.491,1276,1.491,1277,1.491,1278,1.491,1279,1.491,1280,1.491,1281,1.491,1282,1.491,1283,1.491,1284,1.491,1285,1.491,1286,2.49,1287,3.205,1288,3.742,1289,2.49,1290,2.49,1291,1.491,1292,1.491,1293,1.491,1294,2.49,1295,2.49,1296,2.49,1297,1.491,1298,2.49,1299,2.49,1300,1.491,1301,1.491,1302,1.491,1303,2.49,1304,1.491,1305,1.491,1306,1.491,1307,1.491,1308,1.491,1309,1.491,1310,1.491,1311,1.491,1312,1.491,1313,2.49,1314,1.491,1315,1.491,1316,1.491,1317,1.269]],["title/components/PerfilComponent.html",[0,0.87,103,1.497]],["body/components/PerfilComponent.html",[0,1.219,1,0.926,2,1.462,3,0.105,4,0.089,5,0.992,6,0.992,7,0.992,8,0.992,9,0.089,11,0.328,12,1.462,13,1.939,14,0.992,15,2.914,16,2.393,18,1.565,20,1.565,22,0.105,23,0.412,25,0.412,26,2.203,27,0.771,30,0.379,32,0.933,33,0.024,34,1.014,35,0.323,36,0.933,37,0.795,38,1.547,39,0.351,43,1.383,45,2.77,47,0.579,52,1.462,55,1.939,56,0.843,58,0.62,59,0.504,61,0.12,62,0.12,63,1.079,65,0.72,71,1.565,76,2.576,77,2.973,78,1.365,80,1.969,81,1.365,82,2.083,85,1.565,86,1.513,87,0.867,88,1.565,89,0.992,90,2.203,91,0.992,92,1.247,93,0.814,94,1.247,95,0.814,96,1.247,97,0.814,98,1.247,99,0.867,100,1.247,101,0.926,102,1.247,103,1.927,104,1.247,105,0.867,106,1.247,107,1.247,108,1.247,109,0.046,110,0.073,111,0.046,126,2.846,127,2.659,131,2.134,166,1.065,190,3.36,202,2.001,213,1.966,216,1.441,224,1.565,226,0.475,235,1.862,246,0.796,273,1.054,278,2.083,283,3.887,284,2.123,297,2.155,306,1.065,308,1.337,309,1.065,310,1.065,311,1.065,312,3.373,315,1.927,318,3.14,320,2.552,338,0.896,348,1.008,358,1.85,382,2.195,418,1.513,448,2.06,458,2.7,459,1.285,460,1.285,468,2.548,469,2.737,470,2.737,512,1.247,536,1.513,556,1.969,572,3.36,581,1.969,582,3.858,587,3.478,593,1.149,595,1.513,596,1.513,598,1.513,602,1.71,610,4.162,612,2.958,645,1.969,646,1.565,652,2.67,657,3.36,660,3.36,664,3.887,665,1.149,666,2.97,667,1.814,668,1.065,669,2.576,671,2.866,672,2.97,673,1.365,674,2.155,675,2.155,676,1.365,679,1.814,680,1.969,681,3.301,683,1.247,687,2.248,688,1.149,689,1.814,691,1.814,692,1.681,699,2.953,701,2.779,703,2.248,705,3.406,706,1.065,707,1.149,708,2.083,709,2.083,710,2.083,711,2.083,712,1.149,713,2.779,716,2.366,717,2.155,718,2.083,719,1.814,720,1.814,721,1.814,722,1.814,723,1.814,724,3.247,725,1.149,726,1.149,728,2.77,730,1.365,731,1.365,732,1.71,733,2.155,734,1.365,735,3.508,736,2.77,737,1.969,738,1.969,739,2.67,740,1.71,741,2.155,742,1.365,743,1.513,744,1.969,745,1.71,747,1.969,748,2.155,749,1.71,750,1.247,751,1.71,752,2.439,753,1.365,754,1.247,755,1.365,756,1.969,757,1.247,758,1.969,759,1.969,760,1.969,761,3.032,762,1.365,842,2.7,843,2.155,852,1.71,870,1.513,1038,2.155,1040,3.032,1053,3.887,1072,1.513,1073,1.513,1074,1.513,1083,2.7,1086,2.7,1116,2.7,1118,2.7,1119,3.345,1121,1.71,1122,1.71,1123,1.71,1124,1.71,1154,3.799,1155,3.799,1156,3.799,1157,4.395,1177,2.155,1318,1.71,1319,3.932,1320,3.173,1321,3.173,1322,2.01,1323,3.173,1324,2.01,1325,4.77,1326,2.01,1327,2.01,1328,3.173,1329,2.01,1330,2.01,1331,5.166,1332,2.01,1333,2.01,1334,4.136,1335,4.465,1336,2.01,1337,2.01,1338,2.01,1339,2.01,1340,2.01,1341,2.01,1342,3.932,1343,3.932,1344,3.932,1345,3.173,1346,2.01,1347,2.01,1348,3.173,1349,2.01,1350,2.01,1351,2.01,1352,2.01,1353,2.01,1354,2.01,1355,2.01,1356,3.173,1357,5.606,1358,4.465,1359,3.173,1360,3.173,1361,3.173,1362,3.173,1363,3.173,1364,3.173,1365,6.128,1366,3.173,1367,3.173,1368,3.173,1369,3.173,1370,4.465,1371,3.173]],["title/classes/Perteneces.html",[62,0.207,600,1.838]],["body/classes/Perteneces.html",[3,0.258,4,0.22,9,0.22,11,0.335,22,0.258,23,0.775,30,0.434,33,0.023,35,0.383,39,0.775,53,2.076,54,2.076,61,0.296,62,0.296,109,0.114,110,0.138,111,0.114,313,1.1,315,2.137,316,1.681,319,1.516,323,3.56,600,3.4,880,4.232,882,4.632,1372,4.214,1373,4.953,1374,4.953,1375,4.953]],["title/classes/PertenecesController.html",[62,0.207,1376,2.152]],["body/classes/PertenecesController.html",[3,0.13,4,0.111,9,0.111,11,0.169,22,0.13,25,0.486,30,0.416,32,1.285,33,0.024,34,1.207,35,0.367,36,1.285,37,0.79,39,0.68,43,0.94,47,0.798,49,1.367,50,0.459,56,0.956,58,0.414,61,0.149,62,0.149,63,1.329,109,0.058,110,0.087,111,0.058,185,1.912,188,2.203,216,1.299,226,1.33,235,2.099,246,1.128,249,0.792,250,2.049,284,1.518,287,3.712,313,0.554,316,1.654,319,1.52,328,1.991,330,1.612,331,2.573,332,2.573,334,2.573,335,2.573,336,1.425,337,4.015,338,1.973,340,1.122,341,3.871,342,3.543,343,1.425,345,1.264,346,1.425,348,1.991,349,2.018,350,1.9,354,1.425,356,1.425,358,1.342,359,0.841,360,1.23,361,1.425,363,3.221,365,0.792,366,2.573,369,3.066,370,3.328,371,0.949,372,0.792,373,1.425,374,2.142,375,2.142,376,1.425,377,1.693,378,0.841,379,1.425,380,2.142,381,1.693,382,1.342,383,1.425,384,1.425,385,1.693,388,0.893,434,1.985,435,1.726,552,2.385,560,1.321,590,3.496,600,3.815,604,2.122,848,2.819,850,2.122,857,2.819,880,3.816,882,4.177,912,4.793,913,4.257,1098,2.819,1376,3.105,1377,1.876,1378,3.829,1379,3.829,1380,3.829,1381,3.829,1382,2.494,1383,2.494,1384,2.494,1385,2.494,1386,2.494,1387,2.494,1388,2.494,1389,2.494,1390,2.494,1391,2.494,1392,3.188,1393,2.494,1394,2.494,1395,3.188,1396,3.188,1397,2.494,1398,5.634,1399,2.494,1400,5.364,1401,2.494,1402,4.501,1403,3.747,1404,3.747,1405,2.494,1406,2.494,1407,2.494,1408,4.501,1409,4.501,1410,2.494,1411,2.494,1412,2.494,1413,2.494,1414,2.494,1415,2.494]],["title/classes/PertenecesRoutes.html",[62,0.207,1416,2.152]],["body/classes/PertenecesRoutes.html",[3,0.236,4,0.202,9,0.202,11,0.307,22,0.236,23,0.735,25,0.735,27,1.212,30,0.417,33,0.023,35,0.271,37,0.776,44,1.599,47,0.589,48,1.911,50,1.043,51,1.208,53,1.697,54,1.697,56,0.972,58,0.627,61,0.271,62,0.271,109,0.105,110,0.131,111,0.105,185,1.282,200,3.522,202,1.8,204,2.794,273,1.338,308,1.36,313,1.009,316,1.458,328,2.055,330,2.316,359,1.531,388,1.626,392,1.962,393,3.282,394,3.595,396,3.696,397,3.238,399,3.238,400,3.238,402,2.406,403,2.595,405,2.817,407,2.595,409,2.595,411,2.595,1376,2.817,1416,3.831,1417,3.416,1418,5.665,1419,5.665,1420,4.54,1421,4.54,1422,4.54,1423,4.54,1424,4.54,1425,4.54,1426,4.54,1427,4.54,1428,4.54,1429,4.54,1430,4.54,1431,4.54,1432,4.54,1433,4.54,1434,4.54,1435,3.416,1436,4.54]],["title/injectables/PertenecesService.html",[130,1.711,221,1.039]],["body/injectables/PertenecesService.html",[3,0.135,4,0.116,9,0.116,11,0.428,17,1.2,22,0.135,23,0.502,25,0.502,27,0.906,30,0.44,32,1.3,33,0.024,34,1.221,35,0.384,36,1.3,37,0.843,38,1.159,39,0.674,43,1.449,44,1.093,47,0.808,49,1.592,50,0.479,51,0.693,56,1.075,58,0.566,59,0.653,61,0.155,62,0.156,63,1.359,65,0.933,109,0.06,110,0.089,111,0.06,130,1.91,149,1.38,188,2.33,216,1.407,221,1.159,223,1.285,226,1.6,230,1.285,235,1.715,246,1.282,249,1.23,250,2.077,273,0.914,319,1.56,338,0.735,340,1.159,345,1.306,348,2.013,349,2.051,350,2.054,358,1.386,365,1.23,371,1.473,372,1.23,378,1.306,382,1.831,419,2.641,426,1.489,427,3.124,429,2.641,430,2.213,431,2.709,434,3.611,435,3.14,448,1.23,449,2.051,450,2.213,451,2.213,453,2.641,454,1.38,456,1.489,457,1.769,459,1.871,460,1.871,461,1.489,463,2.213,464,1.489,552,2.051,600,3.822,848,2.913,880,3.553,882,4.301,958,2.216,1098,2.913,1108,2.216,1378,3.293,1379,3.293,1380,3.293,1381,3.293,1392,3.293,1395,3.293,1396,3.293,1437,2.216,1438,3.871,1439,3.871,1440,3.871,1441,4.351,1442,3.871,1443,3.871,1444,3.871,1445,2.605,1446,3.871,1447,2.605,1448,3.871,1449,2.605,1450,3.871,1451,2.605,1452,3.871,1453,2.605,1454,3.871,1455,2.605,1456,3.871,1457,2.605,1458,2.605,1459,3.871,1460,2.605,1461,2.605,1462,3.871,1463,2.605,1464,2.605,1465,2.605,1466,2.605,1467,2.605,1468,2.605]],["title/components/RegistroComponent.html",[0,0.87,105,1.497]],["body/components/RegistroComponent.html",[0,1.397,1,1.258,2,1.846,3,0.142,4,0.121,5,1.346,6,1.346,7,1.346,8,1.346,9,0.121,11,0.321,12,1.846,13,2.342,14,1.346,15,3.159,16,2.594,18,1.976,20,1.976,22,0.142,23,0.52,25,0.52,26,2.873,27,0.535,28,1.693,29,2.664,30,0.353,32,0.837,33,0.024,34,1.026,35,0.283,36,0.837,37,0.741,38,1.2,39,0.579,43,1.217,47,0.616,48,0.92,52,1.846,55,1.976,56,0.602,58,0.579,59,0.684,61,0.163,62,0.163,63,0.837,71,1.976,76,3.189,77,3.159,80,2.945,82,2.515,85,1.346,87,1.178,88,1.976,89,1.346,90,2.58,91,1.346,92,1.693,93,1.105,94,1.693,95,1.105,96,1.693,97,1.105,98,1.693,99,1.178,100,1.693,101,1.258,102,1.693,103,1.178,104,1.693,105,2.257,106,3.734,107,1.693,108,1.693,109,0.063,110,0.093,111,0.063,166,1.446,185,1.34,187,3.409,202,1.273,212,2.123,213,1.991,215,3.015,216,1.544,235,1.422,246,1.46,247,3.936,249,1.273,250,1.744,251,3.552,261,4.942,269,3.409,270,3.409,284,0.92,318,3.159,340,1.2,556,2.486,581,2.486,582,3.456,587,3.456,590,2.486,619,2.721,645,2.486,646,1.976,665,1.56,666,3.271,667,2.29,668,1.446,669,3.085,671,2.771,672,3.189,679,3.329,680,2.945,681,3.783,682,1.853,683,2.486,687,3.184,688,2.29,689,2.29,691,2.714,692,1.446,699,2.29,701,1.56,703,2.714,705,3.616,706,1.446,707,1.56,708,2.515,709,2.515,710,2.515,711,2.515,712,2.29,713,2.29,716,2.123,718,1.446,719,2.29,720,2.29,721,2.29,722,2.29,723,1.56,724,3.515,725,1.56,726,1.56,728,3.456,733,3.224,734,1.853,735,3.552,736,2.945,737,1.693,738,1.693,739,3.224,741,2.721,742,1.853,744,1.693,747,2.486,748,2.721,750,1.693,752,2.945,753,1.853,754,1.693,755,1.853,756,2.486,757,1.693,758,2.486,759,2.486,760,2.486,761,3.552,762,1.853,961,3.409,1038,2.721,1040,2.721,1056,2.054,1058,2.054,1065,3.409,1066,5.692,1068,4.45,1069,3.409,1071,3.015,1072,2.054,1073,2.054,1074,2.054,1075,2.054,1076,2.054,1094,3.409,1325,3.409,1469,2.322,1470,4.747,1471,4.006,1472,4.006,1473,4.006,1474,2.729,1475,2.729,1476,4.006,1477,2.729,1478,2.729,1479,2.729,1480,2.729,1481,2.729,1482,2.729,1483,2.729,1484,2.729,1485,2.729,1486,2.729,1487,4.006,1488,2.729,1489,2.729,1490,2.729,1491,2.729,1492,4.006,1493,4.006,1494,4.006,1495,3.015]],["title/classes/Server.html",[62,0.207,1496,2.152]],["body/classes/Server.html",[3,0.216,4,0.185,9,0.185,11,0.281,16,2.625,22,0.216,23,0.696,25,0.696,27,1.163,30,0.438,33,0.024,35,0.248,37,0.829,39,0.693,47,0.77,48,2.238,53,1.605,54,1.605,56,0.941,58,0.771,62,0.249,109,0.096,110,0.124,111,0.096,142,3.58,185,1.175,229,2.378,313,0.924,316,1.4,328,2.108,340,1.246,359,2,390,3.325,392,1.703,393,2.644,394,3.318,402,2.204,431,3.515,435,3.184,481,3.325,497,3.325,919,3.325,1177,2.825,1222,4.56,1236,3.13,1416,3.325,1495,4.462,1496,3.679,1497,3.13,1498,5.36,1499,6.262,1500,5.36,1501,5.36,1502,6.481,1503,4.16,1504,5.36,1505,4.16,1506,5.36,1507,5.36,1508,4.16,1509,5.36,1510,4.56,1511,3.325,1512,4.16,1513,3.325,1514,4.16,1515,4.16,1516,4.16,1517,4.16,1518,4.16,1519,4.16,1520,4.16,1521,4.16,1522,4.16,1523,4.16,1524,4.16,1525,4.16,1526,4.16,1527,4.16,1528,4.16,1529,4.16,1530,4.16,1531,4.16,1532,4.16,1533,4.16,1534,4.16,1535,4.16,1536,4.16,1537,4.16]],["title/classes/Solicitud.html",[62,0.207,585,2.152]],["body/classes/Solicitud.html",[3,0.232,4,0.199,9,0.199,11,0.302,22,0.232,23,0.727,30,0.457,33,0.023,35,0.403,39,0.791,49,1.604,53,2.133,54,2.133,61,0.266,62,0.267,109,0.103,110,0.13,111,0.103,313,0.991,315,1.926,316,1.713,323,3.421,585,3.801,934,4.982,997,5.632,1000,5.632,1002,5.632,1004,5.632,1006,5.632,1538,3.796,1539,4.462,1540,4.462,1541,4.462,1542,4.462,1543,4.462,1544,4.462]],["title/classes/Usuario.html",[62,0.207,216,0.771]],["body/classes/Usuario.html",[3,0.218,4,0.186,9,0.186,11,0.283,22,0.218,23,0.698,30,0.463,33,0.024,35,0.409,39,0.796,49,1.609,53,2.148,54,2.148,55,3.203,61,0.25,62,0.25,109,0.097,110,0.124,111,0.097,216,1.321,313,0.93,315,1.806,316,1.721,319,1.443,323,3.483,418,4.886,512,4.029,645,4.029,646,3.203,1038,4.409,1040,4.409,1545,3.561,1546,4.186,1547,4.186,1548,4.186,1549,4.186,1550,4.186,1551,4.186,1552,4.186,1553,4.186]],["title/injectables/UsuarioService.html",[131,1.32,221,1.039]],["body/injectables/UsuarioService.html",[3,0.165,4,0.141,9,0.141,11,0.425,17,1.46,22,0.165,23,0.579,25,0.579,27,1.013,30,0.441,32,1.28,33,0.024,34,1.202,35,0.383,36,1.28,37,0.823,38,1.336,39,0.493,43,1.449,44,1.26,47,0.795,49,1.548,50,0.583,51,0.843,56,1.051,58,0.62,59,0.795,61,0.189,62,0.189,63,1.315,65,1.135,109,0.073,110,0.103,111,0.073,131,1.698,149,1.679,216,1.619,221,1.336,223,1.563,226,1.58,230,1.563,235,1.835,246,1.118,249,1.418,250,2.024,264,3.029,273,1.053,277,2.696,319,1.524,338,0.895,340,1.336,345,1.505,348,1.947,349,1.598,350,1.89,358,1.598,365,1.418,371,1.698,372,1.418,378,1.505,382,2.007,419,2.951,426,1.812,427,3.376,429,2.951,430,2.55,431,2.969,434,3.58,435,3.113,448,1.418,449,2.364,450,2.55,451,2.55,453,1.812,454,1.679,456,1.812,459,2.091,460,2.091,461,1.812,463,2.55,464,1.812,465,2.152,552,2.364,646,2.764,1334,2.696,1441,4.767,1554,2.696,1555,4.461,1556,4.461,1557,4.461,1558,3.796,1559,4.461,1560,4.461,1561,4.461,1562,3.169,1563,4.461,1564,3.169,1565,4.461,1566,3.169,1567,4.461,1568,3.169,1569,3.169,1570,4.461,1571,3.169,1572,4.461,1573,3.169,1574,3.169,1575,2.696,1576,4.461,1577,3.169]],["title/classes/baseRoutes.html",[62,0.207,1511,2.152]],["body/classes/baseRoutes.html",[3,0.238,4,0.204,9,0.204,11,0.309,22,0.238,23,0.739,25,0.739,27,1.216,30,0.419,33,0.023,35,0.273,37,0.778,44,1.607,47,0.594,48,1.92,50,1.048,51,1.218,53,1.705,54,1.705,56,0.975,58,0.63,61,0.273,62,0.273,109,0.106,110,0.132,111,0.106,185,1.292,200,3.525,202,1.809,204,2.809,216,1.265,273,1.344,308,1.371,313,1.017,316,1.463,328,2.061,330,2.322,359,1.544,388,1.639,392,1.969,393,3.29,394,3.603,396,3.707,397,3.255,399,3.255,400,3.255,402,2.425,403,2.616,407,2.616,409,2.616,411,2.616,1511,3.845,1578,3.444,1579,5.694,1580,4.577,1581,3.108,1582,4.577,1583,4.577,1584,4.577,1585,4.577,1586,4.577,1587,4.577,1588,4.577,1589,3.894,1590,4.577,1591,3.444,1592,4.577]],["title/coverage.html",[1593,4.041]],["body/coverage.html",[0,1.666,1,1.681,9,0.162,10,3.104,29,1.574,33,0.024,35,0.218,53,2.096,62,0.427,75,5.549,93,1.477,95,1.477,97,1.477,99,1.574,101,1.681,103,1.574,105,1.574,109,0.084,110,0.114,111,0.084,126,1.8,127,1.681,128,1.681,129,1.8,130,1.8,131,1.389,182,2.477,188,1.307,193,2.745,195,3.104,196,3.104,216,0.811,221,1.958,231,3.104,308,1.093,312,1.933,314,3.104,327,3.05,328,2.302,329,3.699,360,1.8,390,2.264,391,3.699,415,2.745,417,3.104,448,1.159,467,3.104,475,3.05,476,3.699,497,2.264,498,3.699,509,2.745,511,3.104,539,3.104,547,3.104,551,1.933,585,2.264,600,1.933,763,3.104,801,3.05,802,3.699,832,3.104,879,3.104,889,3.05,890,3.699,919,2.264,920,3.699,931,2.745,933,3.104,960,3.104,1043,3.104,1077,3.104,1318,3.104,1372,3.104,1376,3.05,1377,3.699,1416,2.264,1417,3.699,1435,2.745,1437,3.104,1469,3.104,1496,3.05,1497,3.699,1511,2.264,1513,2.264,1538,3.104,1545,3.104,1554,3.104,1578,3.699,1581,2.477,1591,2.745,1593,3.104,1594,3.648,1595,3.648,1596,3.648,1597,6.647,1598,5.948,1599,6.209,1600,6.537,1601,5.948,1602,4.915,1603,3.648,1604,4.915,1605,5.559,1606,6.999,1607,3.699,1608,2.477,1609,3.104,1610,3.699,1611,2.745,1612,3.648,1613,3.648]],["title/dependencies.html",[115,2.836,1614,2.889]],["body/dependencies.html",[33,0.024,46,3.711,59,1.236,72,4.195,109,0.114,110,0.138,111,0.114,115,3.348,117,4.485,138,5.07,139,4.485,143,3.059,145,3.711,159,4.195,166,2.613,342,2.613,359,1.663,454,2.613,1510,4.195,1615,4.931,1616,7.065,1617,4.931,1618,4.931,1619,5.96,1620,4.931,1621,4.931,1622,4.931,1623,4.931,1624,5.96,1625,4.931,1626,4.931,1627,4.931,1628,4.931,1629,4.931,1630,4.931,1631,4.931,1632,4.931,1633,4.931,1634,4.931,1635,4.931,1636,4.931,1637,4.931,1638,4.931,1639,4.931,1640,4.931,1641,4.931,1642,4.931,1643,4.931,1644,4.931,1645,4.931,1646,5.96,1647,4.931,1648,4.195,1649,4.931,1650,4.931,1651,4.931,1652,4.931,1653,4.931]],["title/classes/groupRoutes.html",[62,0.207,1513,2.152]],["body/classes/groupRoutes.html",[3,0.236,4,0.202,9,0.202,11,0.307,22,0.236,23,0.735,25,0.735,27,1.212,30,0.417,33,0.023,35,0.271,37,0.776,44,1.599,47,0.589,48,1.911,50,1.043,51,1.208,53,1.697,54,1.697,56,0.972,58,0.627,61,0.271,62,0.271,109,0.105,110,0.131,111,0.105,185,1.282,188,2.029,200,3.522,202,1.8,204,2.794,273,1.338,308,1.36,313,1.009,316,1.458,328,2.055,330,2.316,359,1.531,388,1.626,392,1.962,393,3.282,394,3.595,396,3.696,397,3.238,399,3.238,400,3.238,402,2.406,403,2.595,405,2.817,407,2.595,409,2.595,411,2.595,801,2.817,1513,3.831,1589,3.863,1610,3.416,1611,3.416,1654,5.665,1655,4.54,1656,4.54,1657,4.54,1658,4.54,1659,4.54,1660,4.54,1661,4.54,1662,4.54,1663,4.54,1664,4.54,1665,4.54,1666,4.54,1667,4.54,1668,4.54,1669,4.54]],["title/index.html",[22,0.15,1670,2.889,1671,2.889]],["body/index.html",[0,1.61,4,0.221,16,2.009,33,0.019,34,0.973,52,2.285,109,0.115,110,0.138,111,0.115,134,3.368,308,1.486,1496,3.711,1648,5.463,1672,5.981,1673,4.96,1674,6.421,1675,4.96,1676,4.96,1677,4.96,1678,6.824,1679,7.012,1680,4.96,1681,4.96,1682,4.96,1683,4.96,1684,4.96,1685,4.96,1686,4.96,1687,4.96,1688,4.96,1689,4.96,1690,6.421,1691,6.421,1692,4.96,1693,6.824,1694,4.96,1695,4.96,1696,4.96,1697,4.96,1698,4.96,1699,4.96,1700,4.96,1701,5.981,1702,5.981,1703,6.667,1704,4.96,1705,5.981,1706,5.981,1707,4.96,1708,6.667,1709,4.96,1710,4.96,1711,4.96,1712,6.421,1713,4.96,1714,4.96,1715,4.96,1716,4.96]],["title/modules.html",[114,2.947]],["body/modules.html",[33,0.021,109,0.13,110,0.149,111,0.13,113,3.829,114,3.498,125,3.498,139,4.243,1717,5.638,1718,5.638,1719,6.449,1720,5.638,1721,5.638]],["title/overview.html",[1722,4.041]],["body/overview.html",[1,3.192,2,2.156,29,2.701,33,0.023,87,2.019,93,2.535,95,2.535,97,2.535,99,2.701,101,2.884,103,2.701,105,2.701,109,0.108,110,0.133,111,0.108,112,3.177,113,5.026,114,2.903,115,3.177,116,3.98,117,3.52,118,3.98,119,3.52,120,3.98,121,3.98,122,3.98,123,3.98,124,3.98,125,3.883,126,3.087,127,2.884,128,2.884,129,3.087,130,3.087,131,2.382,132,4.91,133,3.98,134,3.177,142,2.674,193,3.52,230,2.308,313,1.04,1317,3.98,1722,3.98,1723,4.678,1724,4.678,1725,4.678,1726,4.678,1727,4.678]],["title/routes.html",[142,2.715]],["body/routes.html",[33,0.021,109,0.132,110,0.15,111,0.132,142,3.272]],["title/classes/usuarioController.html",[62,0.207,1608,2.356]],["body/classes/usuarioController.html",[3,0.17,4,0.145,9,0.145,11,0.22,22,0.17,25,0.591,30,0.418,32,1.291,33,0.024,34,1.213,35,0.369,36,1.291,37,0.762,39,0.58,43,0.681,47,0.802,49,1.261,50,0.6,56,0.788,58,0.503,61,0.195,62,0.195,63,1.291,109,0.075,110,0.105,111,0.075,185,1.917,216,1.593,226,1.075,235,2.103,246,0.818,249,1.036,250,1.994,264,2.215,284,2.013,287,3.72,313,0.725,316,1.658,319,1.509,328,2.016,330,1.878,331,2.997,332,2.997,334,2.997,335,2.997,336,1.864,337,4.028,338,1.974,340,1.363,341,3.882,342,3.528,343,1.864,345,1.535,346,1.864,348,1.964,349,1.63,350,1.535,354,1.864,356,1.864,358,1.63,359,1.1,360,1.609,361,1.864,363,2.997,365,1.036,366,2.997,369,2.602,370,2.824,371,1.241,372,1.036,373,1.864,374,2.602,375,2.602,376,2.602,377,2.215,378,1.1,379,1.864,380,1.864,381,2.215,382,1.63,383,1.864,384,1.864,385,2.215,388,1.168,552,3.528,646,2.799,864,2.774,1558,4.46,1575,2.774,1581,2.215,1607,2.454,1608,3.56,1728,3.261,1729,3.261,1730,3.261,1731,3.261,1732,3.261,1733,3.261,1734,3.261,1735,3.261,1736,3.261,1737,3.261,1738,3.261,1739,4.551,1740,4.551,1741,3.261,1742,3.261,1743,3.261,1744,3.261,1745,3.261]],["title/miscellaneous/variables.html",[1746,2.458,1747,3.553]],["body/miscellaneous/variables.html",[22,0.224,33,0.023,37,0.817,43,0.9,44,1.216,45,2.673,50,1.316,51,1.902,56,0.648,109,0.1,110,0.127,111,0.1,213,2.294,250,1.291,308,2.133,327,3.74,328,2.272,329,3.242,330,2.398,340,1.642,360,2.974,388,2.539,390,2.673,391,3.242,392,2.128,393,3.303,415,4.125,435,2.526,475,3.74,476,3.242,497,2.673,498,3.242,509,4.125,801,3.74,802,3.242,889,3.74,890,3.242,919,2.673,920,3.242,931,4.125,1177,2.926,1236,3.242,1376,3.74,1377,3.242,1416,2.673,1417,3.242,1435,4.125,1495,3.242,1496,3.74,1497,3.242,1511,2.673,1513,2.673,1578,3.242,1581,3.722,1591,4.125,1607,3.242,1608,2.926,1609,3.666,1610,3.242,1611,4.125,1746,3.666,1747,3.666,1748,4.309,1749,4.309,1750,4.309,1751,4.309,1752,4.309,1753,4.309,1754,4.309,1755,4.309,1756,4.309,1757,4.309,1758,4.309,1759,4.309,1760,4.309,1761,4.309,1762,4.309]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"dependencies.html":{},"classes/groupRoutes.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":698,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["0.8.26",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":700,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["0px",{"_index":713,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["1",{"_index":1726,"title":{},"body":{"overview.html":{}}}],["1.19.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.6.5",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["1.7.35",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1299,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10/10",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["100vh",{"_index":1274,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10pt",{"_index":725,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["10px",{"_index":699,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["11/11",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":761,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["141px",{"_index":878,"title":{},"body":{"components/InicioComponent.html":{}}}],["14px",{"_index":1235,"title":{},"body":{"components/NavbarComponent.html":{}}}],["15",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["150px",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":741,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["17b0cf",{"_index":1185,"title":{},"body":{"components/NavbarComponent.html":{}}}],["17px",{"_index":733,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["1px",{"_index":688,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["1s",{"_index":1292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2",{"_index":1317,"title":{},"body":{"components/NavbarComponent.html":{},"overview.html":{}}}],["2.5.4",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1725,"title":{},"body":{"overview.html":{}}}],["20px",{"_index":736,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["226",{"_index":721,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["25px",{"_index":1254,"title":{},"body":{"components/NavbarComponent.html":{}}}],["266",{"_index":722,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["2b2b2a",{"_index":667,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["2be7c.firebaseapp.com",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["2px",{"_index":731,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["3.2.1",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1290,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3000",{"_index":1523,"title":{},"body":{"classes/Server.html":{}}}],["300px",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["30px",{"_index":726,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["333333",{"_index":685,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["3px",{"_index":692,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["4.16.1",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":754,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["40px",{"_index":675,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["4e4d4d",{"_index":690,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["5",{"_index":1303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5.1.3",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["5.8.7",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":753,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["50px",{"_index":702,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["512px",{"_index":762,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["5d4954",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["5px",{"_index":712,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["6",{"_index":1727,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1724,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["7.3.8",{"_index":1676,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":678,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["754px",{"_index":1276,"title":{},"body":{"components/NavbarComponent.html":{}}}],["768px",{"_index":757,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["8",{"_index":1723,"title":{},"body":{"overview.html":{}}}],["80px",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["8px",{"_index":681,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["8vh",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["9/9",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["90000000",{"_index":1115,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a:hover",{"_index":1184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abajo",{"_index":1271,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abra",{"_index":1294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":876,"title":{},"body":{"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["accion",{"_index":647,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["acepta",{"_index":968,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["aceptacion",{"_index":1028,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["aceptar",{"_index":964,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["activa",{"_index":565,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["activarmodal",{"_index":553,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["activarmodal(solicitud",{"_index":970,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["activarmodal(usuario",{"_index":563,"title":{},"body":{"components/GrupoComponent.html":{}}}],["activatedroutesnapshot",{"_index":207,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["actua",{"_index":1257,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual_component",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["actualiza",{"_index":358,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["actualizada",{"_index":906,"title":{},"body":{"classes/InvitacionController.html":{}}}],["actualizado",{"_index":385,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["actualizar",{"_index":382,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["addgrupocodigo",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["administrador",{"_index":550,"title":{},"body":{"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{}}}],["administradorid",{"_index":540,"title":{},"body":{"classes/Grupo.html":{},"classes/GruposController.html":{}}}],["afauth",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["afectados",{"_index":1225,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aizasyadk1fzcf1li9wkordriespvces4rl8q9k",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["al",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["alert(\"error",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["align",{"_index":672,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["altura",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":1674,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["angular/compiler",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["angularfire2/auth",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfireauth",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfiremodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfiremodule.initializeapp(environment.firebaseconfig",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["ano",{"_index":317,"title":{},"body":{"classes/Carro.html":{}}}],["antes",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["any=true",{"_index":1105,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aparte",{"_index":729,"title":{},"body":{"components/GrupoComponent.html":{}}}],["apikey",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["aplicacion",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"index.html":{}}}],["app.component",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1502,"title":{},"body":{"classes/Server.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":125,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["around",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["arriba",{"_index":1272,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifacts",{"_index":1694,"title":{},"body":{"index.html":{}}}],["asi",{"_index":1268,"title":{},"body":{"components/NavbarComponent.html":{}}}],["async",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/DireccionController.html":{},"components/GrupoComponent.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["aun",{"_index":1267,"title":{},"body":{"components/NavbarComponent.html":{}}}],["autenticado",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["autentificacion",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["autentificado",{"_index":218,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":222,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["authdomain",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["authguard",{"_index":197,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["authguardservice",{"_index":182,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authservice",{"_index":29,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":679,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["automatically",{"_index":1684,"title":{},"body":{"index.html":{}}}],["available",{"_index":1721,"title":{},"body":{"modules.html":{}}}],["await",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/DireccionController.html":{},"components/GrupoComponent.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"components/RegistroComponent.html":{},"classes/usuarioController.html":{}}}],["ayuda",{"_index":1214,"title":{},"body":{"components/NavbarComponent.html":{}}}],["azul",{"_index":1197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["año",{"_index":660,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["backend",{"_index":431,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{}}}],["background",{"_index":666,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["baruta",{"_index":1154,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["base",{"_index":371,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["baseroutes",{"_index":1511,"title":{"classes/baseRoutes.html":{}},"body":{"classes/Server.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bien",{"_index":1308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["black",{"_index":735,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["blanco",{"_index":1200,"title":{},"body":{"components/NavbarComponent.html":{}}}],["block",{"_index":718,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["blockquote",{"_index":734,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["body",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bold",{"_index":1234,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":220,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/NavbarComponent.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/dropdown",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/modal",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/tooltip",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":687,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["border:1px",{"_index":745,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["bottom",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["box",{"_index":695,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["browse",{"_index":1719,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1693,"title":{},"body":{"index.html":{}}}],["bullet",{"_index":1227,"title":{},"body":{"components/NavbarComponent.html":{}}}],["burger",{"_index":1244,"title":{},"body":{"components/NavbarComponent.html":{}}}],["button",{"_index":680,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["button:active",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["button:hover",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["cambios",{"_index":1157,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["canactivate",{"_index":199,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["canactivate(route",{"_index":206,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["cancelar",{"_index":664,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["carga",{"_index":1506,"title":{},"body":{"classes/Server.html":{}}}],["carro",{"_index":312,"title":{"classes/Carro.html":{}},"body":{"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["carro).subscribe(res",{"_index":462,"title":{},"body":{"injectables/CarroService.html":{}}}],["carrocontroller",{"_index":327,"title":{"classes/CarroController.html":{}},"body":{"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carrocontroller.create",{"_index":408,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller.delete",{"_index":410,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller.get",{"_index":404,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller.getid",{"_index":414,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller.getone",{"_index":406,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller.update",{"_index":412,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carrocontroller=new",{"_index":389,"title":{},"body":{"classes/CarroController.html":{}}}],["carroid",{"_index":418,"title":{},"body":{"injectables/CarroService.html":{},"components/PerfilComponent.html":{},"classes/Usuario.html":{}}}],["carroroute",{"_index":415,"title":{},"body":{"classes/CarroRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carroroute.router",{"_index":416,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["carroroutes",{"_index":390,"title":{"classes/CarroRoutes.html":{}},"body":{"classes/CarroRoutes.html":{},"classes/Server.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carros",{"_index":351,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"components/InvitacionesComponent.html":{}}}],["carros=await",{"_index":362,"title":{},"body":{"classes/CarroController.html":{}}}],["carroservice",{"_index":126,"title":{"injectables/CarroService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CarroService.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["casi",{"_index":1199,"title":{},"body":{"components/NavbarComponent.html":{}}}],["caso",{"_index":1211,"title":{},"body":{"components/NavbarComponent.html":{}}}],["catch",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["cedula",{"_index":1038,"title":{},"body":{"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{}}}],["cedula}=req.params",{"_index":1743,"title":{},"body":{"classes/usuarioController.html":{}}}],["center",{"_index":669,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["centra",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["centrado",{"_index":665,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["centro",{"_index":755,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["change",{"_index":1686,"title":{},"body":{"index.html":{}}}],["check",{"_index":1715,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["cierto",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{}}}],["circle(100px",{"_index":1289,"title":{},"body":{"components/NavbarComponent.html":{}}}],["circle(1200px",{"_index":1298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clase",{"_index":1498,"title":{},"body":{"classes/Server.html":{}}}],["class",{"_index":62,"title":{"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/Grupo.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["classes",{"_index":313,"title":{},"body":{"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/Grupo.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"overview.html":{},"classes/usuarioController.html":{}}}],["cli",{"_index":1648,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clickeable",{"_index":1194,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clip",{"_index":1288,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cluster_appmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1688,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":541,"title":{},"body":{"classes/Grupo.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/NavbarComponent.html":{}}}],["codigo}=req.params",{"_index":825,"title":{},"body":{"classes/GruposController.html":{}}}],["cola",{"_index":651,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["color",{"_index":318,"title":{},"body":{"classes/Carro.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["color:black",{"_index":704,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["color:darkgray",{"_index":751,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["column",{"_index":760,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["completa",{"_index":1260,"title":{},"body":{"components/NavbarComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["componente",{"_index":961,"title":{},"body":{"components/InvitacionesComponent.html":{},"components/RegistroComponent.html":{}}}],["componentes",{"_index":205,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"overview.html":{}}}],["components/grupo/grupo.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/inicio/inicio.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/invitaciones/invitaciones.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["components/perfil/perfil.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/registro/registro.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["con",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/NavbarComponent.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["conaltura",{"_index":877,"title":{},"body":{"components/InicioComponent.html":{}}}],["concarro",{"_index":554,"title":{},"body":{"components/GrupoComponent.html":{}}}],["concarro(usuario",{"_index":569,"title":{},"body":{"components/GrupoComponent.html":{}}}],["conectar",{"_index":430,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["config",{"_index":394,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["configura",{"_index":1504,"title":{},"body":{"classes/Server.html":{}}}],["console.log(\"es",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(\"false",{"_index":869,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(\"hello",{"_index":1487,"title":{},"body":{"components/RegistroComponent.html":{}}}],["console.log(\"hkjwhdhdwhd",{"_index":909,"title":{},"body":{"classes/InvitacionController.html":{}}}],["console.log(\"true",{"_index":868,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log('hello",{"_index":1535,"title":{},"body":{"classes/Server.html":{}}}],["console.log(correo",{"_index":1738,"title":{},"body":{"classes/usuarioController.html":{}}}],["console.log(err",{"_index":460,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["console.log(error",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(grupo",{"_index":858,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(grupoid+\"hiodhioqhdhwhda",{"_index":1409,"title":{},"body":{"classes/PertenecesController.html":{}}}],["console.log(gruposid",{"_index":1406,"title":{},"body":{"classes/PertenecesController.html":{}}}],["console.log(id",{"_index":864,"title":{},"body":{"components/InicioComponent.html":{},"classes/usuarioController.html":{}}}],["console.log(inv",{"_index":911,"title":{},"body":{"classes/InvitacionController.html":{}}}],["console.log(invita",{"_index":915,"title":{},"body":{"classes/InvitacionController.html":{}}}],["console.log(pert",{"_index":1404,"title":{},"body":{"classes/PertenecesController.html":{}}}],["console.log(perteneces",{"_index":1403,"title":{},"body":{"classes/PertenecesController.html":{}}}],["console.log(res",{"_index":463,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["console.log(this.addgrupocodigo",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.authservice.token",{"_index":1106,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.grupos",{"_index":863,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(this.gruposid",{"_index":856,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(this.invitaciones",{"_index":993,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["console.log(this.nuevoperteneces.usuarioid",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.perteneces.grupoid",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.perteneces.usuarioid",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.pertenecesexistente",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.pertenecesid",{"_index":629,"title":{},"body":{"components/GrupoComponent.html":{}}}],["console.log(this.solicitudes",{"_index":1015,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["console.log(this.solicitudtemporal",{"_index":1013,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["console.log(this.tempgrupos",{"_index":861,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(this.tempusuarios",{"_index":622,"title":{},"body":{"components/GrupoComponent.html":{}}}],["console.log(this.usuarioservice.usuario",{"_index":852,"title":{},"body":{"components/InicioComponent.html":{},"components/PerfilComponent.html":{}}}],["console.log(this.usuarioservice.usuario+\"cambio",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.usuarioservice.usuario.id+\"+\"+grupo.administradorid",{"_index":866,"title":{},"body":{"components/InicioComponent.html":{}}}],["console.log(this.usuariosid",{"_index":616,"title":{},"body":{"components/GrupoComponent.html":{}}}],["console.log(this.usuariotemporal",{"_index":1018,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["console.log(true",{"_index":634,"title":{},"body":{"components/GrupoComponent.html":{},"classes/GruposController.html":{}}}],["console.log(usuario",{"_index":617,"title":{},"body":{"components/GrupoComponent.html":{}}}],["console.log(usuariosid",{"_index":1411,"title":{},"body":{"classes/PertenecesController.html":{}}}],["const",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"components/LoginComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["constructor(authservice",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["constructor(gruposervice",{"_index":557,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{}}}],["constructor(http",{"_index":426,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["constructor(invitacionservice",{"_index":965,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["constructor(private",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["constructor(protected",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["constructor(router",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(usuarioservice",{"_index":1322,"title":{},"body":{"components/PerfilComponent.html":{}}}],["construye",{"_index":1501,"title":{},"body":{"classes/Server.html":{}}}],["container",{"_index":684,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["content",{"_index":683,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["contrasena",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["contraseña",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["controlador",{"_index":330,"title":{},"body":{"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["controllers/carrocontroller",{"_index":401,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["controllers/direccioncontroller",{"_index":501,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["controllers/gruposcontroller",{"_index":1656,"title":{},"body":{"classes/groupRoutes.html":{}}}],["controllers/invitacioncontroller",{"_index":923,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["controllers/pertenecescontroller",{"_index":1421,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["controllers/usuariocontroller",{"_index":1582,"title":{},"body":{"classes/baseRoutes.html":{}}}],["core",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["corre",{"_index":396,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["correcto",{"_index":1285,"title":{},"body":{"components/NavbarComponent.html":{}}}],["correo",{"_index":646,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["correo=form.value.email",{"_index":1482,"title":{},"body":{"components/RegistroComponent.html":{}}}],["correo}=req.params",{"_index":1737,"title":{},"body":{"classes/usuarioController.html":{}}}],["correspondiente",{"_index":1306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cors",{"_index":1510,"title":{},"body":{"classes/Server.html":{},"dependencies.html":{}}}],["cosas",{"_index":1163,"title":{},"body":{"components/NavbarComponent.html":{}}}],["coverage",{"_index":1593,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":340,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["creada",{"_index":904,"title":{},"body":{"classes/InvitacionController.html":{}}}],["creado",{"_index":377,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["crear",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["crearse",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["create",{"_index":331,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["create(req",{"_index":336,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["createcarro",{"_index":420,"title":{},"body":{"injectables/CarroService.html":{}}}],["createcarro(carro",{"_index":432,"title":{},"body":{"injectables/CarroService.html":{}}}],["created",{"_index":822,"title":{},"body":{"classes/GruposController.html":{}}}],["createdireccion",{"_index":513,"title":{},"body":{"injectables/DireccionService.html":{}}}],["createdireccion(direccion",{"_index":520,"title":{},"body":{"injectables/DireccionService.html":{}}}],["creategrupo",{"_index":764,"title":{},"body":{"injectables/GrupoService.html":{}}}],["creategrupo(grupo",{"_index":774,"title":{},"body":{"injectables/GrupoService.html":{}}}],["createinvitacion",{"_index":935,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["createinvitacion(invitacion",{"_index":941,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["createperteneces",{"_index":1438,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["createperteneces(perteneces",{"_index":1444,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["createusuario",{"_index":1555,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["createusuario(usuario",{"_index":1561,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["css",{"_index":1283,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cual",{"_index":972,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["cuando",{"_index":1188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cuanto",{"_index":1217,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cubriendo",{"_index":1315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cuenta",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["cursor",{"_index":1195,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cédula",{"_index":1360,"title":{},"body":{"components/PerfilComponent.html":{}}}],["código",{"_index":1158,"title":{},"body":{"components/NavbarComponent.html":{}}}],["darkgrey",{"_index":742,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["darkred",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["data",{"_index":1325,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["database",{"_index":361,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["datos",{"_index":372,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["de",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoraciones",{"_index":1233,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decoration",{"_index":743,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["del",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":332,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["delete(req",{"_index":343,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["deletecarro",{"_index":421,"title":{},"body":{"injectables/CarroService.html":{}}}],["deletecarro(id",{"_index":436,"title":{},"body":{"injectables/CarroService.html":{}}}],["deleted",{"_index":823,"title":{},"body":{"classes/GruposController.html":{}}}],["deletedireccion",{"_index":514,"title":{},"body":{"injectables/DireccionService.html":{}}}],["deletedireccion(id",{"_index":522,"title":{},"body":{"injectables/DireccionService.html":{}}}],["deletegrupo",{"_index":765,"title":{},"body":{"injectables/GrupoService.html":{}}}],["deletegrupo(id",{"_index":776,"title":{},"body":{"injectables/GrupoService.html":{}}}],["deleteinvitacion",{"_index":936,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["deleteinvitacion(id",{"_index":943,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["deleteperteneces",{"_index":1439,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["deleteperteneces(id",{"_index":1446,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["deleteusuario",{"_index":1556,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["deleteusuario(id",{"_index":1563,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["dentro",{"_index":1164,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descripcion",{"_index":468,"title":{},"body":{"classes/Direccion.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"classes/Invitacion.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["descripcion}=req.params",{"_index":494,"title":{},"body":{"classes/DireccionController.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["desea",{"_index":973,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["despues",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["detalles",{"_index":580,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["detalles(id",{"_index":837,"title":{},"body":{"components/InicioComponent.html":{}}}],["dev",{"_index":1681,"title":{},"body":{"index.html":{}}}],["development",{"_index":1677,"title":{},"body":{"index.html":{}}}],["deveria",{"_index":618,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{}}}],["diferentes",{"_index":1170,"title":{},"body":{"components/NavbarComponent.html":{}}}],["direccion",{"_index":448,"title":{"classes/Direccion.html":{}},"body":{"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["direccion).subscribe(res",{"_index":537,"title":{},"body":{"injectables/DireccionService.html":{}}}],["direccioncontroller",{"_index":475,"title":{"classes/DireccionController.html":{}},"body":{"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["direccioncontroller.create",{"_index":504,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller.delete",{"_index":505,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller.get",{"_index":502,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller.getid",{"_index":508,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller.getone",{"_index":503,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller.update",{"_index":506,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccioncontroller=new",{"_index":496,"title":{},"body":{"classes/DireccionController.html":{}}}],["direcciones",{"_index":482,"title":{},"body":{"classes/DireccionController.html":{},"injectables/DireccionService.html":{}}}],["direcciones=await",{"_index":486,"title":{},"body":{"classes/DireccionController.html":{}}}],["direccionid",{"_index":512,"title":{},"body":{"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Usuario.html":{}}}],["direccionroute",{"_index":509,"title":{},"body":{"classes/DireccionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["direccionroute.router",{"_index":510,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["direccionroutes",{"_index":497,"title":{"classes/DireccionRoutes.html":{}},"body":{"classes/DireccionRoutes.html":{},"classes/Server.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["direccions",{"_index":487,"title":{},"body":{"classes/DireccionController.html":{}}}],["direccionservice",{"_index":127,"title":{"injectables/DireccionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dirección",{"_index":1370,"title":{},"body":{"components/PerfilComponent.html":{}}}],["direction",{"_index":759,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["directive",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["directives",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1692,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1697,"title":{},"body":{"index.html":{}}}],["display",{"_index":716,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["dist",{"_index":1696,"title":{},"body":{"index.html":{}}}],["distancia",{"_index":1255,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dividar",{"_index":1168,"title":{},"body":{"components/NavbarComponent.html":{}}}],["divide",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dle",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["documentation",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["donde",{"_index":449,"title":{},"body":{"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["dynamic",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["e.message",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":1709,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1293,"title":{},"body":{"components/NavbarComponent.html":{}}}],["edad",{"_index":1040,"title":{},"body":{"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{}}}],["edad}=req.params",{"_index":1742,"title":{},"body":{"classes/usuarioController.html":{}}}],["editar",{"_index":1365,"title":{},"body":{"components/PerfilComponent.html":{}}}],["el",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["electronico",{"_index":1492,"title":{},"body":{"components/RegistroComponent.html":{}}}],["electrónico",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["elemento",{"_index":1264,"title":{},"body":{"components/NavbarComponent.html":{}}}],["elementos",{"_index":1169,"title":{},"body":{"components/NavbarComponent.html":{}}}],["elimina",{"_index":345,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["eliminada",{"_index":905,"title":{},"body":{"classes/InvitacionController.html":{}}}],["eliminado",{"_index":381,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["eliminar",{"_index":378,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["eliminar(solicitud",{"_index":975,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["eliminar(usuario",{"_index":573,"title":{},"body":{"components/GrupoComponent.html":{}}}],["eliminarenabled",{"_index":555,"title":{},"body":{"components/GrupoComponent.html":{}}}],["eliminarenabled(usuario",{"_index":575,"title":{},"body":{"components/GrupoComponent.html":{}}}],["ella",{"_index":1262,"title":{},"body":{"components/NavbarComponent.html":{}}}],["email",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["en",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["encima",{"_index":1192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["encontrada",{"_index":903,"title":{},"body":{"classes/InvitacionController.html":{}}}],["encontradas",{"_index":917,"title":{},"body":{"classes/InvitacionController.html":{}}}],["encontrado",{"_index":370,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["encuentra",{"_index":491,"title":{},"body":{"classes/DireccionController.html":{},"injectables/DireccionService.html":{}}}],["end",{"_index":1708,"title":{},"body":{"index.html":{}}}],["end/base.ts",{"_index":1497,"title":{},"body":{"classes/Server.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/base.ts:20",{"_index":1500,"title":{},"body":{"classes/Server.html":{}}}],["end/base.ts:34",{"_index":1503,"title":{},"body":{"classes/Server.html":{}}}],["end/base.ts:45",{"_index":1505,"title":{},"body":{"classes/Server.html":{}}}],["end/base.ts:59",{"_index":1508,"title":{},"body":{"classes/Server.html":{}}}],["end/controllers/carrocontroller.ts",{"_index":329,"title":{},"body":{"classes/CarroController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/carrocontroller.ts:12",{"_index":347,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/carrocontroller.ts:21",{"_index":355,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/carrocontroller.ts:34",{"_index":339,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/carrocontroller.ts:43",{"_index":344,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/carrocontroller.ts:54",{"_index":357,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/carrocontroller.ts:64",{"_index":353,"title":{},"body":{"classes/CarroController.html":{}}}],["end/controllers/direccioncontroller.ts",{"_index":476,"title":{},"body":{"classes/DireccionController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/direccioncontroller.ts:12",{"_index":480,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/direccioncontroller.ts:21",{"_index":484,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/direccioncontroller.ts:34",{"_index":477,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/direccioncontroller.ts:43",{"_index":479,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/direccioncontroller.ts:54",{"_index":485,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/direccioncontroller.ts:66",{"_index":483,"title":{},"body":{"classes/DireccionController.html":{}}}],["end/controllers/gruposcontroller.ts",{"_index":802,"title":{},"body":{"classes/GruposController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/gruposcontroller.ts:103",{"_index":812,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:12",{"_index":806,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:21",{"_index":815,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:34",{"_index":804,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:43",{"_index":805,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:54",{"_index":816,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:64",{"_index":808,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:80",{"_index":814,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/gruposcontroller.ts:90",{"_index":810,"title":{},"body":{"classes/GruposController.html":{}}}],["end/controllers/invitacioncontroller.ts",{"_index":890,"title":{},"body":{"classes/InvitacionController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/invitacioncontroller.ts:12",{"_index":894,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/invitacioncontroller.ts:21",{"_index":897,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/invitacioncontroller.ts:34",{"_index":892,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/invitacioncontroller.ts:43",{"_index":893,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/invitacioncontroller.ts:54",{"_index":898,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/invitacioncontroller.ts:64",{"_index":896,"title":{},"body":{"classes/InvitacionController.html":{}}}],["end/controllers/pertenecescontroller.ts",{"_index":1377,"title":{},"body":{"classes/PertenecesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/pertenecescontroller.ts:107",{"_index":1391,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:12",{"_index":1384,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:124",{"_index":1394,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:21",{"_index":1385,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:34",{"_index":1382,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:43",{"_index":1383,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:54",{"_index":1397,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:64",{"_index":1387,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/pertenecescontroller.ts:85",{"_index":1389,"title":{},"body":{"classes/PertenecesController.html":{}}}],["end/controllers/usuariocontroller.ts",{"_index":1607,"title":{},"body":{"coverage.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["end/controllers/usuariocontroller.ts:12",{"_index":1730,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/controllers/usuariocontroller.ts:21",{"_index":1731,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/controllers/usuariocontroller.ts:35",{"_index":1728,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/controllers/usuariocontroller.ts:44",{"_index":1729,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/controllers/usuariocontroller.ts:55",{"_index":1734,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/controllers/usuariocontroller.ts:69",{"_index":1733,"title":{},"body":{"classes/usuarioController.html":{}}}],["end/database.ts",{"_index":1609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/carroroutes.ts",{"_index":391,"title":{},"body":{"classes/CarroRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/carroroutes.ts:13",{"_index":395,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["end/routes/carroroutes.ts:25",{"_index":398,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["end/routes/direccionroutes.ts",{"_index":498,"title":{},"body":{"classes/DireccionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/direccionroutes.ts:13",{"_index":499,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["end/routes/direccionroutes.ts:25",{"_index":500,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["end/routes/grouproutes.ts",{"_index":1610,"title":{},"body":{"coverage.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["end/routes/grouproutes.ts:13",{"_index":1654,"title":{},"body":{"classes/groupRoutes.html":{}}}],["end/routes/grouproutes.ts:25",{"_index":1655,"title":{},"body":{"classes/groupRoutes.html":{}}}],["end/routes/invitacionroutes.ts",{"_index":920,"title":{},"body":{"classes/InvitacionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/invitacionroutes.ts:13",{"_index":921,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["end/routes/invitacionroutes.ts:25",{"_index":922,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["end/routes/pertenecesroutes.ts",{"_index":1417,"title":{},"body":{"classes/PertenecesRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/pertenecesroutes.ts:13",{"_index":1419,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["end/routes/pertenecesroutes.ts:25",{"_index":1420,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["end/routes/usuarioroutes.ts",{"_index":1578,"title":{},"body":{"classes/baseRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end/routes/usuarioroutes.ts:13",{"_index":1579,"title":{},"body":{"classes/baseRoutes.html":{}}}],["end/routes/usuarioroutes.ts:25",{"_index":1580,"title":{},"body":{"classes/baseRoutes.html":{}}}],["entre",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["envia",{"_index":584,"title":{},"body":{"components/GrupoComponent.html":{}}}],["environment",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["epara",{"_index":1190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["equitativamente",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["err",{"_index":459,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["error",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["errores",{"_index":1282,"title":{},"body":{"components/NavbarComponent.html":{}}}],["es",{"_index":590,"title":{},"body":{"components/GrupoComponent.html":{},"classes/InvitacionController.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"components/RegistroComponent.html":{}}}],["espacio",{"_index":730,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["esta",{"_index":217,"title":{},"body":{"guards/AuthGuardService.html":{},"components/NavbarComponent.html":{}}}],["este",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["esto",{"_index":912,"title":{},"body":{"classes/InvitacionController.html":{},"classes/PertenecesController.html":{}}}],["events",{"_index":1296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["evitar",{"_index":1245,"title":{},"body":{"components/NavbarComponent.html":{}}}],["excluyento",{"_index":1220,"title":{},"body":{"components/NavbarComponent.html":{}}}],["execute",{"_index":1705,"title":{},"body":{"index.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["exporta",{"_index":388,"title":{},"body":{"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":359,"title":{},"body":{"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"dependencies.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["facil",{"_index":1161,"title":{},"body":{"components/NavbarComponent.html":{}}}],["false",{"_index":229,"title":{},"body":{"guards/AuthGuardService.html":{},"components/GrupoComponent.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{},"classes/Server.html":{}}}],["family",{"_index":708,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["fb",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["fff",{"_index":875,"title":{},"body":{"components/InicioComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["files",{"_index":1687,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["firebase.auth().createuserwithemailandpassword(usuario.correo",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.initializeapp",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["fixed",{"_index":1273,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flag",{"_index":1699,"title":{},"body":{"index.html":{}}}],["flex",{"_index":758,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["fondo",{"_index":727,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["font",{"_index":705,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["footer",{"_index":719,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["for(let",{"_index":857,"title":{},"body":{"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{}}}],["form",{"_index":587,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["form.value.descripcion",{"_index":640,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{}}}],["form.value.email",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.value.municipio",{"_index":1117,"title":{},"body":{"components/NavbarComponent.html":{}}}],["form.value.nombre",{"_index":1111,"title":{},"body":{"components/NavbarComponent.html":{}}}],["form.value.password",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.value.urbanizacion",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forman",{"_index":1251,"title":{},"body":{"components/NavbarComponent.html":{}}}],["formsmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":749,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["found",{"_index":821,"title":{},"body":{"classes/GruposController.html":{}}}],["funcionen",{"_index":1295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["further",{"_index":1711,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1690,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1673,"title":{},"body":{"index.html":{}}}],["get(req",{"_index":346,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["getcarro",{"_index":422,"title":{},"body":{"injectables/CarroService.html":{}}}],["getcarro(id",{"_index":438,"title":{},"body":{"injectables/CarroService.html":{}}}],["getcarroid",{"_index":423,"title":{},"body":{"injectables/CarroService.html":{}}}],["getcarroid(placa",{"_index":440,"title":{},"body":{"injectables/CarroService.html":{}}}],["getcarros",{"_index":424,"title":{},"body":{"injectables/CarroService.html":{}}}],["getcodigos",{"_index":803,"title":{},"body":{"classes/GruposController.html":{}}}],["getcodigos(req",{"_index":807,"title":{},"body":{"classes/GruposController.html":{}}}],["getdireccion",{"_index":515,"title":{},"body":{"injectables/DireccionService.html":{}}}],["getdireccion(id",{"_index":524,"title":{},"body":{"injectables/DireccionService.html":{}}}],["getdirecciones",{"_index":516,"title":{},"body":{"injectables/DireccionService.html":{}}}],["getdireccionid",{"_index":517,"title":{},"body":{"injectables/DireccionService.html":{}}}],["getdireccionid(municipio",{"_index":527,"title":{},"body":{"injectables/DireccionService.html":{}}}],["getgrupo",{"_index":766,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgrupo(id",{"_index":778,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgrupocodigo",{"_index":767,"title":{},"body":{"injectables/GrupoService.html":{},"classes/GruposController.html":{}}}],["getgrupocodigo(codigo",{"_index":780,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgrupocodigo(req",{"_index":809,"title":{},"body":{"classes/GruposController.html":{}}}],["getgrupodetalle",{"_index":768,"title":{},"body":{"injectables/GrupoService.html":{},"classes/GruposController.html":{}}}],["getgrupodetalle(id",{"_index":782,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgrupodetalle(req",{"_index":811,"title":{},"body":{"classes/GruposController.html":{}}}],["getgrupos",{"_index":769,"title":{},"body":{"injectables/GrupoService.html":{},"components/InicioComponent.html":{}}}],["getgruposadministrador",{"_index":770,"title":{},"body":{"injectables/GrupoService.html":{},"classes/GruposController.html":{}}}],["getgruposadministrador(id",{"_index":785,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgruposadministrador(req",{"_index":813,"title":{},"body":{"classes/GruposController.html":{}}}],["getgruposcodigo",{"_index":771,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getgruposcodigo(codigo",{"_index":787,"title":{},"body":{"injectables/GrupoService.html":{}}}],["getid",{"_index":333,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{}}}],["getid(req",{"_index":352,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{}}}],["getinvitacion",{"_index":937,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["getinvitacion(id",{"_index":945,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["getinvitaciones",{"_index":938,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["getinvitacionesusuario",{"_index":891,"title":{},"body":{"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{}}}],["getinvitacionesusuario(req",{"_index":895,"title":{},"body":{"classes/InvitacionController.html":{}}}],["getinvitacionesusuario(usuarioexid",{"_index":948,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["getone",{"_index":334,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["getone(req",{"_index":354,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["getpergrupos",{"_index":1378,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["getpergrupos(req",{"_index":1386,"title":{},"body":{"classes/PertenecesController.html":{}}}],["getpergrupos(usuarioid",{"_index":1448,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperteneces",{"_index":1440,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperteneces(id",{"_index":1450,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperusuarios",{"_index":1379,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["getperusuarios(grupoid",{"_index":1452,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperusuarios(req",{"_index":1388,"title":{},"body":{"classes/PertenecesController.html":{}}}],["getperusuariosgrupos",{"_index":1380,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["getperusuariosgrupos(grupoid",{"_index":1454,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperusuariosgrupos(req",{"_index":1390,"title":{},"body":{"classes/PertenecesController.html":{}}}],["getperusuariosgruposboolean",{"_index":1381,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["getperusuariosgruposboolean(grupoid",{"_index":1456,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["getperusuariosgruposboolean(req",{"_index":1393,"title":{},"body":{"classes/PertenecesController.html":{}}}],["getting",{"_index":1670,"title":{"index.html":{}},"body":{}}],["getusuario",{"_index":1557,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["getusuario(correo",{"_index":1565,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["getusuariodetalle",{"_index":1558,"title":{},"body":{"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["getusuariodetalle(id",{"_index":1567,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["getusuariodetalle(req",{"_index":1732,"title":{},"body":{"classes/usuarioController.html":{}}}],["getusuarios",{"_index":1441,"title":{},"body":{"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["ghostwhite",{"_index":740,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["go",{"_index":1714,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1720,"title":{},"body":{"modules.html":{}}}],["group",{"_index":715,"title":{},"body":{"components/GrupoComponent.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["grouproute",{"_index":1611,"title":{},"body":{"coverage.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["grouproute.router",{"_index":1669,"title":{},"body":{"classes/groupRoutes.html":{}}}],["grouproutes",{"_index":1513,"title":{"classes/groupRoutes.html":{}},"body":{"classes/Server.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["grupo",{"_index":188,"title":{"classes/Grupo.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"coverage.html":{},"classes/groupRoutes.html":{}}}],["grupo'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["grupo).subscribe(res",{"_index":795,"title":{},"body":{"injectables/GrupoService.html":{}}}],["grupo.codigo",{"_index":873,"title":{},"body":{"components/InicioComponent.html":{}}}],["grupo.component.css",{"_index":548,"title":{},"body":{"components/GrupoComponent.html":{}}}],["grupo.component.html",{"_index":549,"title":{},"body":{"components/GrupoComponent.html":{}}}],["grupo.nombre",{"_index":872,"title":{},"body":{"components/InicioComponent.html":{}}}],["grupo=await",{"_index":828,"title":{},"body":{"classes/GruposController.html":{}}}],["grupocodigo",{"_index":835,"title":{},"body":{"components/InicioComponent.html":{}}}],["grupocodigo(grupo",{"_index":844,"title":{},"body":{"components/InicioComponent.html":{}}}],["grupocomponent",{"_index":93,"title":{"components/GrupoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grupoid",{"_index":880,"title":{},"body":{"classes/Invitacion.html":{},"components/NavbarComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["grupoid}=req.params",{"_index":1408,"title":{},"body":{"classes/PertenecesController.html":{}}}],["gruponombre",{"_index":1006,"title":{},"body":{"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["grupos",{"_index":560,"title":{},"body":{"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{}}}],["grupos=await",{"_index":817,"title":{},"body":{"classes/GruposController.html":{}}}],["gruposcontroller",{"_index":801,"title":{"classes/GruposController.html":{}},"body":{"classes/GruposController.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["gruposcontroller.create",{"_index":1659,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.delete",{"_index":1660,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.get",{"_index":1657,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.getcodigos",{"_index":1663,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.getgrupocodigo",{"_index":1667,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.getgrupodetalle",{"_index":1668,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.getgruposadministrador",{"_index":1665,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.getone",{"_index":1658,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller.update",{"_index":1661,"title":{},"body":{"classes/groupRoutes.html":{}}}],["gruposcontroller=new",{"_index":831,"title":{},"body":{"classes/GruposController.html":{}}}],["gruposervice",{"_index":128,"title":{"injectables/GrupoService.html":{}},"body":{"modules/AppModule.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gruposid",{"_index":850,"title":{},"body":{"components/InicioComponent.html":{},"classes/PertenecesController.html":{}}}],["gruposid.push(pert.grupoid",{"_index":1405,"title":{},"body":{"classes/PertenecesController.html":{}}}],["grupotemporal",{"_index":984,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["guard",{"_index":193,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":196,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":201,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:26",{"_index":210,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guarda",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["guardar",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["guards",{"_index":194,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h2",{"_index":703,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["h3",{"_index":723,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["h5",{"_index":670,"title":{},"body":{"components/GrupoComponent.html":{}}}],["hace",{"_index":1259,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hacer",{"_index":450,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["hacia",{"_index":1270,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hamburguesa",{"_index":1252,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hatillo",{"_index":1156,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["height",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["hello",{"_index":1107,"title":{},"body":{"components/NavbarComponent.html":{}}}],["help",{"_index":1712,"title":{},"body":{"index.html":{}}}],["html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["http",{"_index":429,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["http://localhost:3000/api/carros",{"_index":447,"title":{},"body":{"injectables/CarroService.html":{}}}],["http://localhost:3000/api/direcciones",{"_index":533,"title":{},"body":{"injectables/DireccionService.html":{}}}],["http://localhost:3000/api/grupos",{"_index":791,"title":{},"body":{"injectables/GrupoService.html":{}}}],["http://localhost:3000/api/invitaciones",{"_index":954,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["http://localhost:3000/api/perteneces",{"_index":1462,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["http://localhost:3000/api/usuarios",{"_index":1572,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["http://localhost:4200",{"_index":1683,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":427,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":319,"title":{},"body":{"classes/Carro.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/NavbarComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["identifier",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["id}=req.params",{"_index":366,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["if(carros.length>0",{"_index":367,"title":{},"body":{"classes/CarroController.html":{}}}],["if(direcciones.length>0",{"_index":489,"title":{},"body":{"classes/DireccionController.html":{}}}],["if(grupo.length>0",{"_index":829,"title":{},"body":{"classes/GruposController.html":{}}}],["if(grupos.length>0",{"_index":819,"title":{},"body":{"classes/GruposController.html":{}}}],["if(invitaciones.length>0",{"_index":901,"title":{},"body":{"classes/InvitacionController.html":{}}}],["if(password1",{"_index":1488,"title":{},"body":{"components/RegistroComponent.html":{}}}],["if(perteneces.length>0",{"_index":1400,"title":{},"body":{"classes/PertenecesController.html":{}}}],["if(this.authservice.isauthenticated",{"_index":225,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["if(this.direccion.municipio",{"_index":1351,"title":{},"body":{"components/PerfilComponent.html":{}}}],["if(this.usuario.direccionid",{"_index":1352,"title":{},"body":{"components/PerfilComponent.html":{}}}],["if(this.usuarioservice.usuario.direccionid",{"_index":1339,"title":{},"body":{"components/PerfilComponent.html":{}}}],["if(this.usuarioservice.usuario.id===grupo.administradorid",{"_index":867,"title":{},"body":{"components/InicioComponent.html":{}}}],["if(usuarios.length>0",{"_index":1739,"title":{},"body":{"classes/usuarioController.html":{}}}],["ignore",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["img",{"_index":732,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["import",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["important",{"_index":1275,"title":{},"body":{"components/NavbarComponent.html":{}}}],["imports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["informacion",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["información",{"_index":1357,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ingresa",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["ingresado",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["ingresar",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["ingrese",{"_index":663,"title":{},"body":{"components/GrupoComponent.html":{}}}],["ingreso",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicia",{"_index":1495,"title":{},"body":{"components/RegistroComponent.html":{},"classes/Server.html":{},"miscellaneous/variables.html":{}}}],["inicializa",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["iniciar",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/InicioComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["inicio'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["inicio.component.css",{"_index":833,"title":{},"body":{"components/InicioComponent.html":{}}}],["inicio.component.html",{"_index":834,"title":{},"body":{"components/InicioComponent.html":{}}}],["iniciocomponent",{"_index":95,"title":{"components/InicioComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InicioComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":221,"title":{"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["injectables",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"overview.html":{}}}],["inline",{"_index":717,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["input",{"_index":739,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["inset",{"_index":697,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["inv",{"_index":910,"title":{},"body":{"classes/InvitacionController.html":{}}}],["invita",{"_index":908,"title":{},"body":{"classes/InvitacionController.html":{}}}],["invita.push(inv",{"_index":914,"title":{},"body":{"classes/InvitacionController.html":{}}}],["invitacion",{"_index":551,"title":{"classes/Invitacion.html":{}},"body":{"components/GrupoComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"coverage.html":{}}}],["invitacion).subscribe(res",{"_index":957,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["invitacion.id",{"_index":999,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["invitacion.tipo",{"_index":998,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["invitacioncontroller",{"_index":889,"title":{"classes/InvitacionController.html":{}},"body":{"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invitacioncontroller.create",{"_index":926,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller.delete",{"_index":927,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller.get",{"_index":924,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller.getinvitacionesusuario",{"_index":930,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller.getone",{"_index":925,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller.update",{"_index":928,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacioncontroller=new",{"_index":918,"title":{},"body":{"classes/InvitacionController.html":{}}}],["invitaciones",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GrupoComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["invitaciones'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["invitaciones.component.css",{"_index":962,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["invitaciones.component.html",{"_index":963,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["invitaciones=await",{"_index":899,"title":{},"body":{"classes/InvitacionController.html":{}}}],["invitacionescomponent",{"_index":97,"title":{"components/InvitacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["invitacionid",{"_index":934,"title":{},"body":{"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["invitacionroute",{"_index":931,"title":{},"body":{"classes/InvitacionRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invitacionroute.router",{"_index":932,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["invitacionroutes",{"_index":919,"title":{"classes/InvitacionRoutes.html":{}},"body":{"classes/InvitacionRoutes.html":{},"classes/Server.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invitacionservice",{"_index":129,"title":{"injectables/InvitacionService.html":{}},"body":{"modules/AppModule.html":{},"components/GrupoComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["invitaciontemporal",{"_index":985,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["invitaciontipo",{"_index":997,"title":{},"body":{"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["isauthenticated",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["isopen",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":750,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["izquierda",{"_index":1301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["js",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(this.user",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":682,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["karma",{"_index":1707,"title":{},"body":{"index.html":{}}}],["la",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":392,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["legend",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"overview.html":{}}}],["letras",{"_index":1205,"title":{},"body":{"components/NavbarComponent.html":{}}}],["letter",{"_index":1208,"title":{},"body":{"components/NavbarComponent.html":{}}}],["li",{"_index":1187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":1253,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lineas",{"_index":1250,"title":{},"body":{"components/NavbarComponent.html":{}}}],["links",{"_index":1213,"title":{},"body":{"components/NavbarComponent.html":{}}}],["links.open",{"_index":1297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":714,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["lista",{"_index":871,"title":{},"body":{"components/InicioComponent.html":{}}}],["lo",{"_index":1236,"title":{},"body":{"components/NavbarComponent.html":{},"classes/Server.html":{},"miscellaneous/variables.html":{}}}],["localstorage.removeitem('user",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["login.component.css",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":99,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":1198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logoutuser",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["los",{"_index":350,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["lugar",{"_index":1266,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mandar",{"_index":588,"title":{},"body":{"components/GrupoComponent.html":{}}}],["manejar",{"_index":559,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["manera",{"_index":1279,"title":{},"body":{"components/NavbarComponent.html":{}}}],["maneras",{"_index":1171,"title":{},"body":{"components/NavbarComponent.html":{}}}],["marca",{"_index":657,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["margin",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["margin:auto",{"_index":674,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["mas",{"_index":974,"title":{},"body":{"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["matching",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"dependencies.html":{},"classes/groupRoutes.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["math.floor(10000000",{"_index":1113,"title":{},"body":{"components/NavbarComponent.html":{}}}],["math.random",{"_index":1114,"title":{},"body":{"components/NavbarComponent.html":{}}}],["max",{"_index":752,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["mayuscula",{"_index":1204,"title":{},"body":{"components/NavbarComponent.html":{}}}],["media",{"_index":756,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["menos",{"_index":1258,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["metodo",{"_index":397,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["metrouber",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["middle",{"_index":748,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["min",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["miscellaneous",{"_index":1746,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["misma",{"_index":1309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mismo",{"_index":1265,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mnatiene",{"_index":1263,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modal",{"_index":566,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["modalish",{"_index":746,"title":{},"body":{"components/GrupoComponent.html":{}}}],["modalmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["modelo",{"_index":315,"title":{},"body":{"classes/Carro.html":{},"classes/Direccion.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"classes/Invitacion.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{}}}],["models/carro",{"_index":452,"title":{},"body":{"injectables/CarroService.html":{}}}],["models/direccion",{"_index":534,"title":{},"body":{"injectables/DireccionService.html":{}}}],["models/grupos",{"_index":793,"title":{},"body":{"injectables/GrupoService.html":{}}}],["models/invitaciones",{"_index":955,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["models/perteneces",{"_index":1463,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["models/usuario",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsuarioService.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1713,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1509,"title":{},"body":{"classes/Server.html":{}}}],["mostrar",{"_index":842,"title":{},"body":{"components/InicioComponent.html":{},"components/PerfilComponent.html":{}}}],["mostrarlas",{"_index":978,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["mouse",{"_index":1191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mover",{"_index":1261,"title":{},"body":{"components/NavbarComponent.html":{}}}],["movil",{"_index":1241,"title":{},"body":{"components/NavbarComponent.html":{}}}],["moviles",{"_index":1249,"title":{},"body":{"components/NavbarComponent.html":{}}}],["moz",{"_index":693,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["ms",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["ms=ms",{"_index":870,"title":{},"body":{"components/InicioComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["ms=ms*2",{"_index":1032,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["ms=ms/2",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["mucho",{"_index":1160,"title":{},"body":{"components/NavbarComponent.html":{}}}],["muestre",{"_index":1246,"title":{},"body":{"components/NavbarComponent.html":{}}}],["municipio",{"_index":469,"title":{},"body":{"classes/Direccion.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["municipio}=req.params",{"_index":492,"title":{},"body":{"classes/DireccionController.html":{}}}],["mysql",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["mysql.createpool(keys.database",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"index.html":{},"classes/usuarioController.html":{}}}],["nav",{"_index":1159,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["navbar.component.css",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbaractive",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["navbarcomponent",{"_index":101,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1682,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1278,"title":{},"body":{"components/NavbarComponent.html":{}}}],["new",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1679,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":582,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["ngmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["ngx",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nombre",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{}}}],["nombre}=req.params",{"_index":1741,"title":{},"body":{"classes/usuarioController.html":{}}}],["none",{"_index":744,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["normal",{"_index":707,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["nuevo",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["nuevoperteneces",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{}}}],["null",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["number",{"_index":323,"title":{},"body":{"classes/Carro.html":{},"classes/Direccion.html":{},"classes/Grupo.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/Perteneces.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{}}}],["o",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["observable",{"_index":453,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["observar",{"_index":1331,"title":{},"body":{"components/PerfilComponent.html":{}}}],["obtener",{"_index":365,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["obtiene",{"_index":348,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["ocupan",{"_index":1314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ocupe",{"_index":1284,"title":{},"body":{"components/NavbarComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["onsubmit",{"_index":556,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["onsubmit(form",{"_index":581,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["onsubmit2",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["onsubmit2(form",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["onsubmit3",{"_index":1321,"title":{},"body":{"components/PerfilComponent.html":{}}}],["onsubmit3(form",{"_index":1328,"title":{},"body":{"components/PerfilComponent.html":{}}}],["open",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{}}}],["optional",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["orange",{"_index":1202,"title":{},"body":{"components/NavbarComponent.html":{}}}],["otros",{"_index":577,"title":{},"body":{"components/GrupoComponent.html":{}}}],["out",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1722,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["package",{"_index":1614,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":701,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["padre",{"_index":1307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pagina",{"_index":1316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pantalla",{"_index":843,"title":{},"body":{"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["para",{"_index":202,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesRoutes.html":{},"components/RegistroComponent.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["param",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["parser",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["password).then",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["password1",{"_index":1491,"title":{},"body":{"components/RegistroComponent.html":{}}}],["password1=form.value.password",{"_index":1479,"title":{},"body":{"components/RegistroComponent.html":{}}}],["password2",{"_index":1489,"title":{},"body":{"components/RegistroComponent.html":{}}}],["password2=form.value.password2",{"_index":1480,"title":{},"body":{"components/RegistroComponent.html":{}}}],["path",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["pedido",{"_index":969,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["pedidos",{"_index":451,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["pedir",{"_index":567,"title":{},"body":{"components/GrupoComponent.html":{}}}],["pega",{"_index":1300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pendientes",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pequenos",{"_index":1281,"title":{},"body":{"components/NavbarComponent.html":{}}}],["perfil",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["perfil'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["perfil.component.css",{"_index":1319,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.html",{"_index":1320,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":103,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["permite",{"_index":1167,"title":{},"body":{"components/NavbarComponent.html":{}}}],["personal",{"_index":1358,"title":{},"body":{"components/PerfilComponent.html":{}}}],["pert",{"_index":913,"title":{},"body":{"classes/InvitacionController.html":{},"classes/PertenecesController.html":{}}}],["pertences",{"_index":1418,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenece",{"_index":848,"title":{},"body":{"components/InicioComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["perteneces",{"_index":600,"title":{"classes/Perteneces.html":{}},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"coverage.html":{}}}],["perteneces).subscribe(res",{"_index":1464,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["perteneces=await",{"_index":1398,"title":{},"body":{"classes/PertenecesController.html":{}}}],["pertenecescontroller",{"_index":1376,"title":{"classes/PertenecesController.html":{}},"body":{"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pertenecescontroller.create",{"_index":1424,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.delete",{"_index":1425,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.get",{"_index":1422,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.getone",{"_index":1423,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.getpergrupos",{"_index":1428,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.getperusuarios",{"_index":1430,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.getperusuariosgrupos",{"_index":1432,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.getperusuariosgruposboolean",{"_index":1434,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller.update",{"_index":1426,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecescontroller=new",{"_index":1415,"title":{},"body":{"classes/PertenecesController.html":{}}}],["pertenecesexistente",{"_index":1104,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pertenecesid",{"_index":606,"title":{},"body":{"components/GrupoComponent.html":{}}}],["pertenecesroute",{"_index":1435,"title":{},"body":{"classes/PertenecesRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pertenecesroute.router",{"_index":1436,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["pertenecesroutes",{"_index":1416,"title":{"classes/PertenecesRoutes.html":{}},"body":{"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pertenecesservice",{"_index":130,"title":{"injectables/PertenecesService.html":{}},"body":{"modules/AppModule.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{},"injectables/PertenecesService.html":{},"coverage.html":{},"overview.html":{}}}],["pertenecs",{"_index":1392,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["placa",{"_index":320,"title":{},"body":{"classes/Carro.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["placa}=req.params",{"_index":386,"title":{},"body":{"classes/CarroController.html":{}}}],["pointer",{"_index":1196,"title":{},"body":{"components/NavbarComponent.html":{}}}],["points",{"_index":1228,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pool",{"_index":360,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"coverage.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["pool.query(\"delete",{"_index":379,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["pool.query(\"insert",{"_index":373,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["pool.query(\"select",{"_index":363,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["pool.query('update",{"_index":384,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["poppins",{"_index":709,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["por",{"_index":1222,"title":{},"body":{"components/NavbarComponent.html":{},"classes/Server.html":{}}}],["posean",{"_index":571,"title":{},"body":{"components/GrupoComponent.html":{}}}],["posee",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["posicion",{"_index":1312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["posiciona",{"_index":1304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["posicionr",{"_index":1162,"title":{},"body":{"components/NavbarComponent.html":{}}}],["position",{"_index":668,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["posociona",{"_index":1277,"title":{},"body":{"components/NavbarComponent.html":{}}}],["posterior",{"_index":1237,"title":{},"body":{"components/NavbarComponent.html":{}}}],["preexistente",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["presione",{"_index":1287,"title":{},"body":{"components/NavbarComponent.html":{}}}],["private",{"_index":224,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["process.env.port",{"_index":1522,"title":{},"body":{"classes/Server.html":{}}}],["prod",{"_index":1698,"title":{},"body":{"index.html":{}}}],["production",{"_index":1700,"title":{},"body":{"index.html":{}}}],["project",{"_index":1672,"title":{},"body":{"index.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"dependencies.html":{},"classes/usuarioController.html":{}}}],["promise(resolve",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["propiedad",{"_index":1166,"title":{},"body":{"components/NavbarComponent.html":{}}}],["protractor",{"_index":1710,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":223,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["proyecto",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":316,"title":{},"body":{"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/Grupo.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["pueda",{"_index":214,"title":{},"body":{"guards/AuthGuardService.html":{},"components/GrupoComponent.html":{}}}],["puede",{"_index":1206,"title":{},"body":{"components/NavbarComponent.html":{}}}],["punto",{"_index":1238,"title":{},"body":{"components/NavbarComponent.html":{}}}],["px",{"_index":1207,"title":{},"body":{"components/NavbarComponent.html":{}}}],["que",{"_index":212,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["quita",{"_index":1232,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radius",{"_index":691,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["readme",{"_index":1716,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":1219,"title":{},"body":{"components/NavbarComponent.html":{}}}],["redirige",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirigir",{"_index":204,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["registra",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistroComponent.html":{}}}],["registrado",{"_index":1476,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrar",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistroComponent.html":{}}}],["registrarse",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistroComponent.html":{}}}],["registro",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["registro.component.css",{"_index":1470,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro.component.html",{"_index":1471,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrocomponent",{"_index":105,"title":{"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["regístrate",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["relacionado",{"_index":1239,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relativamente",{"_index":1305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relative",{"_index":686,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["reload",{"_index":1685,"title":{},"body":{"index.html":{}}}],["remueve",{"_index":1226,"title":{},"body":{"components/NavbarComponent.html":{}}}],["repite",{"_index":1493,"title":{},"body":{"components/RegistroComponent.html":{}}}],["req",{"_index":341,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["req.body",{"_index":375,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["request",{"_index":337,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["res",{"_index":338,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["res.json(carros",{"_index":364,"title":{},"body":{"classes/CarroController.html":{}}}],["res.json(carros[0",{"_index":368,"title":{},"body":{"classes/CarroController.html":{}}}],["res.json(carros[0].id",{"_index":387,"title":{},"body":{"classes/CarroController.html":{}}}],["res.json(direcciones",{"_index":488,"title":{},"body":{"classes/DireccionController.html":{}}}],["res.json(direcciones[0",{"_index":490,"title":{},"body":{"classes/DireccionController.html":{}}}],["res.json(direcciones[0].id",{"_index":495,"title":{},"body":{"classes/DireccionController.html":{}}}],["res.json(false",{"_index":1414,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json(grupo[0].id",{"_index":830,"title":{},"body":{"classes/GruposController.html":{}}}],["res.json(grupos",{"_index":818,"title":{},"body":{"classes/GruposController.html":{}}}],["res.json(grupos[0",{"_index":820,"title":{},"body":{"classes/GruposController.html":{}}}],["res.json(gruposid",{"_index":1407,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json(invita",{"_index":916,"title":{},"body":{"classes/InvitacionController.html":{}}}],["res.json(invitaciones",{"_index":900,"title":{},"body":{"classes/InvitacionController.html":{}}}],["res.json(invitaciones[0",{"_index":902,"title":{},"body":{"classes/InvitacionController.html":{}}}],["res.json(perteneces",{"_index":1399,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json(perteneces[0",{"_index":1401,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json(perteneces[0].id",{"_index":1413,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json(usuarios",{"_index":1736,"title":{},"body":{"classes/usuarioController.html":{}}}],["res.json(usuarios[0",{"_index":1740,"title":{},"body":{"classes/usuarioController.html":{}}}],["res.json(usuariosid",{"_index":1412,"title":{},"body":{"classes/PertenecesController.html":{}}}],["res.json({message",{"_index":376,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["res.json({text",{"_index":380,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["res.send(false",{"_index":827,"title":{},"body":{"classes/GruposController.html":{}}}],["res.send(true",{"_index":826,"title":{},"body":{"classes/GruposController.html":{}}}],["res.status(404).json({text",{"_index":369,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["res:response",{"_index":383,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["reset",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolver",{"_index":1280,"title":{},"body":{"components/NavbarComponent.html":{}}}],["respectivas",{"_index":400,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["response",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["responsive",{"_index":1165,"title":{},"body":{"components/NavbarComponent.html":{}}}],["respuesta",{"_index":434,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["resto",{"_index":1223,"title":{},"body":{"components/NavbarComponent.html":{}}}],["result",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"dependencies.html":{},"classes/groupRoutes.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"dependencies.html":{},"classes/groupRoutes.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":226,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["revisa",{"_index":1395,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["rgb(226",{"_index":720,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["rgb(226,226,266",{"_index":1201,"title":{},"body":{"components/NavbarComponent.html":{}}}],["right",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["root'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["route",{"_index":219,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["router",{"_index":200,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["routermodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":209,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["routes",{"_index":142,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Server.html":{},"overview.html":{},"routes.html":{}}}],["routes/carroroutes",{"_index":1517,"title":{},"body":{"classes/Server.html":{}}}],["routes/direccionroutes",{"_index":1515,"title":{},"body":{"classes/Server.html":{}}}],["routes/grouproutes",{"_index":1514,"title":{},"body":{"classes/Server.html":{}}}],["routes/invitacionroutes",{"_index":1518,"title":{},"body":{"classes/Server.html":{}}}],["routes/pertenecesroutes",{"_index":1516,"title":{},"body":{"classes/Server.html":{}}}],["routes/usuarioroutes",{"_index":1512,"title":{},"body":{"classes/Server.html":{}}}],["routing.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1678,"title":{},"body":{"index.html":{}}}],["running",{"_index":1701,"title":{},"body":{"index.html":{}}}],["rutas",{"_index":393,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":454,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"dependencies.html":{}}}],["s",{"_index":1189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["salir",{"_index":1153,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sangria",{"_index":673,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["sangriafuerte",{"_index":676,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["sans",{"_index":710,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["scaffolding",{"_index":1689,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1242,"title":{},"body":{"components/NavbarComponent.html":{}}}],["scroll",{"_index":1269,"title":{},"body":{"components/NavbarComponent.html":{}}}],["se",{"_index":213,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":846,"title":{},"body":{"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["sean",{"_index":1248,"title":{},"body":{"components/NavbarComponent.html":{}}}],["seguro",{"_index":1216,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selecciona",{"_index":839,"title":{},"body":{"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["seleccionado",{"_index":840,"title":{},"body":{"components/InicioComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["sequelize",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["ser",{"_index":619,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["serif",{"_index":711,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["serve",{"_index":1680,"title":{},"body":{"index.html":{}}}],["server",{"_index":1496,"title":{"classes/Server.html":{}},"body":{"classes/Server.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.start",{"_index":1537,"title":{},"body":{"classes/Server.html":{}}}],["server=new",{"_index":1536,"title":{},"body":{"classes/Server.html":{}}}],["service",{"_index":198,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["servicio",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{}}}],["servidor",{"_index":435,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"classes/Server.html":{},"injectables/UsuarioService.html":{},"miscellaneous/variables.html":{}}}],["sesion",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["sesión",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["set",{"_index":374,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["settimeout(resolve",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["shadow",{"_index":696,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["shared/models/direccion",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{}}}],["shared/models/grupos",{"_index":849,"title":{},"body":{"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["shared/models/usuario",{"_index":1477,"title":{},"body":{"components/RegistroComponent.html":{}}}],["shared/services/auth/auth.service",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["shared/services/authguard/auth",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/services/carro/carro.service",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/direccion/direccion.service",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["shared/services/grupo/grupo.service",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["shared/services/invitacion/invitacion.service",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/perteneces/perteneces.service",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/usuario/usuario.service",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["si",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["signinuser",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinuser(email",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupuser",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupuser(usuario",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["sistema",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":724,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["sleep(ms",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["solicitud",{"_index":585,"title":{"classes/Solicitud.html":{}},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{},"coverage.html":{}}}],["solicitud.gruponombre",{"_index":1036,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solicitud.invitaciontipo",{"_index":1037,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solicitud.usuariocorreo",{"_index":1035,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solicitud.usuarionombre",{"_index":1033,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solicitud.usuariotelefono",{"_index":1034,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solicitudes",{"_index":981,"title":{},"body":{"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["solicitudespendientes",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["solicitudtemporal",{"_index":982,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["solid",{"_index":689,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["solo",{"_index":1256,"title":{},"body":{"components/NavbarComponent.html":{}}}],["son",{"_index":1224,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"index.html":{},"classes/usuarioController.html":{}}}],["space",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["spacing",{"_index":1209,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/.../base.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../carrocontroller.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../carroroutes.ts",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../direccioncontroller.ts",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../direccionroutes.ts",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grouproutes.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gruposcontroller.ts",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../invitacioncontroller.ts",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../invitacionroutes.ts",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pertenecescontroller.ts",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pertenecesroutes.ts",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usuariocontroller.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usuarioroutes.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/grupo/grupo.component.ts",{"_index":547,"title":{},"body":{"components/GrupoComponent.html":{},"coverage.html":{}}}],["src/app/components/grupo/grupo.component.ts:108",{"_index":576,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:130",{"_index":574,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:143",{"_index":564,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:158",{"_index":583,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:28",{"_index":589,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:32",{"_index":591,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:52",{"_index":558,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:68",{"_index":578,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/grupo/grupo.component.ts:96",{"_index":570,"title":{},"body":{"components/GrupoComponent.html":{}}}],["src/app/components/inicio/inicio.component.ts",{"_index":832,"title":{},"body":{"components/InicioComponent.html":{},"coverage.html":{}}}],["src/app/components/inicio/inicio.component.ts:20",{"_index":847,"title":{},"body":{"components/InicioComponent.html":{}}}],["src/app/components/inicio/inicio.component.ts:28",{"_index":836,"title":{},"body":{"components/InicioComponent.html":{}}}],["src/app/components/inicio/inicio.component.ts:51",{"_index":841,"title":{},"body":{"components/InicioComponent.html":{}}}],["src/app/components/inicio/inicio.component.ts:76",{"_index":838,"title":{},"body":{"components/InicioComponent.html":{}}}],["src/app/components/inicio/inicio.component.ts:84",{"_index":845,"title":{},"body":{"components/InicioComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts",{"_index":960,"title":{},"body":{"components/InvitacionesComponent.html":{},"coverage.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:113",{"_index":971,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:132",{"_index":967,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:147",{"_index":976,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:29",{"_index":979,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:45",{"_index":966,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/invitaciones/invitaciones.component.ts:60",{"_index":977,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:42",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:60",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:132",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:51",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:59",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:63",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:67",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:96",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts",{"_index":1318,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts:115",{"_index":1329,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:23",{"_index":1332,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:27",{"_index":1330,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:39",{"_index":1323,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:52",{"_index":1324,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:74",{"_index":1326,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:86",{"_index":1327,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/registro/registro.component.ts",{"_index":1469,"title":{},"body":{"components/RegistroComponent.html":{},"coverage.html":{}}}],["src/app/components/registro/registro.component.ts:20",{"_index":1472,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:34",{"_index":1474,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:43",{"_index":1475,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/shared/models/carro",{"_index":1333,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/shared/models/carro.ts",{"_index":314,"title":{},"body":{"classes/Carro.html":{},"coverage.html":{}}}],["src/app/shared/models/carro.ts:12",{"_index":326,"title":{},"body":{"classes/Carro.html":{}}}],["src/app/shared/models/carro.ts:16",{"_index":322,"title":{},"body":{"classes/Carro.html":{}}}],["src/app/shared/models/carro.ts:20",{"_index":321,"title":{},"body":{"classes/Carro.html":{}}}],["src/app/shared/models/carro.ts:24",{"_index":325,"title":{},"body":{"classes/Carro.html":{}}}],["src/app/shared/models/carro.ts:8",{"_index":324,"title":{},"body":{"classes/Carro.html":{}}}],["src/app/shared/models/direccion",{"_index":602,"title":{},"body":{"components/GrupoComponent.html":{},"components/PerfilComponent.html":{}}}],["src/app/shared/models/direccion.ts",{"_index":467,"title":{},"body":{"classes/Direccion.html":{},"coverage.html":{}}}],["src/app/shared/models/direccion.ts:12",{"_index":473,"title":{},"body":{"classes/Direccion.html":{}}}],["src/app/shared/models/direccion.ts:16",{"_index":474,"title":{},"body":{"classes/Direccion.html":{}}}],["src/app/shared/models/direccion.ts:20",{"_index":471,"title":{},"body":{"classes/Direccion.html":{}}}],["src/app/shared/models/direccion.ts:8",{"_index":472,"title":{},"body":{"classes/Direccion.html":{}}}],["src/app/shared/models/grupos",{"_index":599,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["src/app/shared/models/grupos.ts",{"_index":539,"title":{},"body":{"classes/Grupo.html":{},"coverage.html":{}}}],["src/app/shared/models/grupos.ts:12",{"_index":546,"title":{},"body":{"classes/Grupo.html":{}}}],["src/app/shared/models/grupos.ts:16",{"_index":544,"title":{},"body":{"classes/Grupo.html":{}}}],["src/app/shared/models/grupos.ts:20",{"_index":543,"title":{},"body":{"classes/Grupo.html":{}}}],["src/app/shared/models/grupos.ts:24",{"_index":542,"title":{},"body":{"classes/Grupo.html":{}}}],["src/app/shared/models/grupos.ts:8",{"_index":545,"title":{},"body":{"classes/Grupo.html":{}}}],["src/app/shared/models/invitaciones",{"_index":603,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["src/app/shared/models/invitaciones.ts",{"_index":879,"title":{},"body":{"classes/Invitacion.html":{},"coverage.html":{}}}],["src/app/shared/models/invitaciones.ts:12",{"_index":888,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/invitaciones.ts:16",{"_index":884,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/invitaciones.ts:20",{"_index":886,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/invitaciones.ts:24",{"_index":883,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/invitaciones.ts:28",{"_index":887,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/invitaciones.ts:8",{"_index":885,"title":{},"body":{"classes/Invitacion.html":{}}}],["src/app/shared/models/perteneces",{"_index":601,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{}}}],["src/app/shared/models/perteneces.ts",{"_index":1372,"title":{},"body":{"classes/Perteneces.html":{},"coverage.html":{}}}],["src/app/shared/models/perteneces.ts:12",{"_index":1375,"title":{},"body":{"classes/Perteneces.html":{}}}],["src/app/shared/models/perteneces.ts:16",{"_index":1373,"title":{},"body":{"classes/Perteneces.html":{}}}],["src/app/shared/models/perteneces.ts:8",{"_index":1374,"title":{},"body":{"classes/Perteneces.html":{}}}],["src/app/shared/models/solicitud",{"_index":980,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["src/app/shared/models/solicitud.ts",{"_index":1538,"title":{},"body":{"classes/Solicitud.html":{},"coverage.html":{}}}],["src/app/shared/models/solicitud.ts:12",{"_index":1543,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/solicitud.ts:16",{"_index":1544,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/solicitud.ts:20",{"_index":1542,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/solicitud.ts:24",{"_index":1539,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/solicitud.ts:28",{"_index":1541,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/solicitud.ts:8",{"_index":1540,"title":{},"body":{"classes/Solicitud.html":{}}}],["src/app/shared/models/usuario",{"_index":598,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["src/app/shared/models/usuario.ts",{"_index":1545,"title":{},"body":{"classes/Usuario.html":{},"coverage.html":{}}}],["src/app/shared/models/usuario.ts:12",{"_index":1552,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:16",{"_index":1546,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:20",{"_index":1550,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:24",{"_index":1547,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:28",{"_index":1553,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:32",{"_index":1549,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:36",{"_index":1548,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/models/usuario.ts:8",{"_index":1551,"title":{},"body":{"classes/Usuario.html":{}}}],["src/app/shared/services/auth/auth.service",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["src/app/shared/services/auth/auth.service.ts",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth/auth.service.ts:102",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:21",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:25",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:29",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:54",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:73",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:87",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth/auth.service.ts:94",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/authguard/auth",{"_index":195,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/shared/services/carro/carro.service",{"_index":595,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["src/app/shared/services/carro/carro.service.ts",{"_index":417,"title":{},"body":{"injectables/CarroService.html":{},"coverage.html":{}}}],["src/app/shared/services/carro/carro.service.ts:18",{"_index":446,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:22",{"_index":445,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:26",{"_index":428,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:41",{"_index":442,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:50",{"_index":439,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:62",{"_index":433,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:73",{"_index":444,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:82",{"_index":437,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/carro/carro.service.ts:91",{"_index":441,"title":{},"body":{"injectables/CarroService.html":{}}}],["src/app/shared/services/direccion/direccion.service",{"_index":596,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts",{"_index":511,"title":{},"body":{"injectables/DireccionService.html":{},"coverage.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:18",{"_index":532,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:22",{"_index":531,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:27",{"_index":519,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:42",{"_index":526,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:51",{"_index":525,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:63",{"_index":521,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:73",{"_index":530,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:82",{"_index":523,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/direccion/direccion.service.ts:93",{"_index":528,"title":{},"body":{"injectables/DireccionService.html":{}}}],["src/app/shared/services/grupo/grupo.service",{"_index":592,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts",{"_index":763,"title":{},"body":{"injectables/GrupoService.html":{},"coverage.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:101",{"_index":781,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:110",{"_index":783,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:18",{"_index":792,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:22",{"_index":773,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:37",{"_index":784,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:46",{"_index":779,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:55",{"_index":775,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:65",{"_index":790,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:74",{"_index":777,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:83",{"_index":788,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/grupo/grupo.service.ts:92",{"_index":786,"title":{},"body":{"injectables/GrupoService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service",{"_index":597,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts",{"_index":933,"title":{},"body":{"injectables/InvitacionService.html":{},"coverage.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:18",{"_index":953,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:22",{"_index":952,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:26",{"_index":940,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:41",{"_index":947,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:50",{"_index":946,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:62",{"_index":942,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:72",{"_index":951,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:81",{"_index":944,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/invitacion/invitacion.service.ts:90",{"_index":949,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service",{"_index":594,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts",{"_index":1437,"title":{},"body":{"injectables/PertenecesService.html":{},"coverage.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:104",{"_index":1455,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:114",{"_index":1457,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:18",{"_index":1461,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:22",{"_index":1443,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:37",{"_index":1458,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:46",{"_index":1451,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:57",{"_index":1445,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:67",{"_index":1460,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:76",{"_index":1447,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:85",{"_index":1449,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/perteneces/perteneces.service.ts:94",{"_index":1453,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["src/app/shared/services/usuario/usuario.service",{"_index":593,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts",{"_index":1554,"title":{},"body":{"injectables/UsuarioService.html":{},"coverage.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:18",{"_index":1573,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:22",{"_index":1560,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:37",{"_index":1569,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:46",{"_index":1566,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:57",{"_index":1562,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:67",{"_index":1571,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:76",{"_index":1564,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/app/shared/services/usuario/usuario.service.ts:85",{"_index":1568,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/back",{"_index":328,"title":{},"body":{"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1499,"title":{},"body":{"classes/Server.html":{}}}],["started",{"_index":1671,"title":{"index.html":{}},"body":{}}],["state",{"_index":208,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["statements",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1695,"title":{},"body":{"index.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/LoginComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["style",{"_index":1230,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["su",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sucre",{"_index":1155,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["support",{"_index":1717,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":399,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["suthservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1718,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1212,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tags",{"_index":1231,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tamano",{"_index":1215,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tamanos",{"_index":1247,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tambien",{"_index":1210,"title":{},"body":{"components/NavbarComponent.html":{}}}],["telefono",{"_index":645,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{}}}],["telefono}=req.params",{"_index":1744,"title":{},"body":{"classes/usuarioController.html":{}}}],["teléfono",{"_index":1362,"title":{},"body":{"components/PerfilComponent.html":{}}}],["temp",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["tempgrupos",{"_index":851,"title":{},"body":{"components/InicioComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["tempusuarios",{"_index":605,"title":{},"body":{"components/GrupoComponent.html":{}}}],["test",{"_index":1704,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1703,"title":{},"body":{"index.html":{}}}],["text",{"_index":671,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["this.addgrupocodigo",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.administrador",{"_index":613,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.afauth.auth.signinwithemailandpassword(email",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authstate.subscribe(user",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.app.listen(this.app.get('port",{"_index":1534,"title":{},"body":{"classes/Server.html":{}}}],["this.app.set('port",{"_index":1521,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/carros",{"_index":1532,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/direcciones",{"_index":1530,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/grupos",{"_index":1529,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/invitaciones",{"_index":1533,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/perteneces",{"_index":1531,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use('/api/usuarios",{"_index":1528,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use(cors",{"_index":1525,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use(express.json",{"_index":1526,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use(express.urlencoded({extended",{"_index":1527,"title":{},"body":{"classes/Server.html":{}}}],["this.app.use(morgan('dev",{"_index":1524,"title":{},"body":{"classes/Server.html":{}}}],["this.app=express",{"_index":1519,"title":{},"body":{"classes/Server.html":{}}}],["this.authservice.isauthenticated",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signinuser(email",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signupuser(this.usuario",{"_index":1490,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.carro",{"_index":458,"title":{},"body":{"injectables/CarroService.html":{},"components/PerfilComponent.html":{}}}],["this.carro.ano",{"_index":1369,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carro.color",{"_index":1368,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carro.marca",{"_index":1366,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carro.modelo",{"_index":1367,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carro.placa",{"_index":1344,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carro=new",{"_index":455,"title":{},"body":{"injectables/CarroService.html":{}}}],["this.carroid",{"_index":1348,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carroservice.carro",{"_index":1338,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carroservice.carro.ano",{"_index":661,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.carroservice.carro.color",{"_index":662,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.carroservice.carro.marca",{"_index":658,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.carroservice.carro.modelo",{"_index":659,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.carroservice.carro.placa",{"_index":656,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.carroservice.createcarro(this.carro",{"_index":1346,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carroservice.getcarro(this.usuarioservice.usuario.carroid",{"_index":1337,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carroservice.getcarro(this.usuariotemporal.carroid",{"_index":1019,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.carroservice.getcarro(usuario.carroid.tostring",{"_index":633,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.carroservice.getcarroid(this.carro.placa).subscribe(res",{"_index":1347,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.carroservice.updatecarro(this.carro",{"_index":1349,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.config",{"_index":402,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.direccion",{"_index":536,"title":{},"body":{"injectables/DireccionService.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccion.descripcion",{"_index":1118,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccion.descripcion).subscribe(res",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccion.municipio",{"_index":1116,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccion.urbanizacion",{"_index":1119,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccion=new",{"_index":535,"title":{},"body":{"injectables/DireccionService.html":{}}}],["this.direccion=this.direccionservice.direccion",{"_index":1341,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.direccionid",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccionservice.createdireccion(this.direccion",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccionservice.direccion.descripcion",{"_index":655,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.direccionservice.direccion.municipio",{"_index":653,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.direccionservice.direccion.urbanizacion",{"_index":654,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.direccionservice.getdireccion(this.usuarioservice.usuario.direccionid",{"_index":1340,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.direccionservice.getdireccion(this.usuariotemporal.direccionid",{"_index":1020,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.direccionservice.getdireccion(usuario.direccionid.tostring",{"_index":632,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.direccionservice.getdireccionid(this.direccion.municipio",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.direccionservice.updatedireccion(this.direccion",{"_index":1354,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.eliminar(this.solicitudtemporal",{"_index":1030,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.getgrupos",{"_index":853,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.grupo",{"_index":800,"title":{},"body":{"injectables/GrupoService.html":{},"components/NavbarComponent.html":{}}}],["this.grupo.administradorid",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupo.codigo",{"_index":1112,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupo.codigo=math.floor(10000000",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupo.direccionid",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupo.nombre",{"_index":1110,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupoid",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.grupos.push(this.tempgrupos",{"_index":862,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.gruposervice.creategrupo(this.grupo",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.gruposervice.getgrupo(grupo).subscribe(res",{"_index":859,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.gruposervice.getgrupocodigo(this.addgrupocodigo).subscribe(res",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.gruposervice.getgrupocodigo(this.grupo.codigo.tostring()).subscribe(res",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.gruposervice.getgrupodetalle(id.tostring",{"_index":865,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.gruposervice.getgrupodetalle(invitacion.grupoid",{"_index":995,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.gruposervice.grupo.administradorid",{"_index":611,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.gruposervice.grupo.id",{"_index":637,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.gruposervice.grupo.nombre",{"_index":644,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["this.gruposid",{"_index":855,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.grupotemporal",{"_index":988,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.http.delete(`${this.url_api}/${id",{"_index":465,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/UsuarioService.html":{}}}],["this.http.delete(`${this.url_api}/${id}`).subscribe(res",{"_index":958,"title":{},"body":{"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api",{"_index":456,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["this.http.get(`${this.url_api}/${codigo}`).subscribe(res",{"_index":796,"title":{},"body":{"injectables/GrupoService.html":{}}}],["this.http.get(`${this.url_api}/${correo}`).subscribe(res",{"_index":1574,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.http.get(`${this.url_api}/${id",{"_index":794,"title":{},"body":{"injectables/GrupoService.html":{}}}],["this.http.get(`${this.url_api}/${id}`).subscribe(res",{"_index":457,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api}/${municipio}/${urbanizacion}/${descripcion",{"_index":538,"title":{},"body":{"injectables/DireccionService.html":{}}}],["this.http.get(`${this.url_api}/administrador/${id",{"_index":797,"title":{},"body":{"injectables/GrupoService.html":{}}}],["this.http.get(`${this.url_api}/detalle/${id",{"_index":1577,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.http.get(`${this.url_api}/detalle/${id}`).subscribe(res",{"_index":799,"title":{},"body":{"injectables/GrupoService.html":{}}}],["this.http.get(`${this.url_api}/pergrupos/${usuarioid",{"_index":1465,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api}/perteneces/${codigo",{"_index":798,"title":{},"body":{"injectables/GrupoService.html":{}}}],["this.http.get(`${this.url_api}/perteneces/${grupoid}/${usuarioid",{"_index":1467,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api}/perteneces/boolean/${grupoid}/${usuarioid",{"_index":1468,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api}/perusuarios/${grupoid",{"_index":1466,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["this.http.get(`${this.url_api}/placa/${placa",{"_index":466,"title":{},"body":{"injectables/CarroService.html":{}}}],["this.http.get(`${this.url_api}/solicitud/${usuarioexid",{"_index":959,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["this.http.post(`${this.url_api",{"_index":461,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["this.http.put(`${this.url_api}/${id",{"_index":464,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["this.invitacion",{"_index":608,"title":{},"body":{"components/GrupoComponent.html":{},"injectables/InvitacionService.html":{}}}],["this.invitacion.descripcion",{"_index":639,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacion.grupoid",{"_index":636,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacion.tipo",{"_index":638,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacion.usuarioexid",{"_index":641,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacion.usuarioid",{"_index":635,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacion=new",{"_index":956,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["this.invitaciones",{"_index":991,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.createinvitacion(this.invitacion",{"_index":643,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.invitacionservice.createinvitacion(this.invitaciontemporal",{"_index":1029,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.deleteinvitacion(solicitud.invitacionid.tostring",{"_index":1031,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.getinvitacion(solicitud.invitacionid.tostring",{"_index":1016,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.getinvitacionesusuario(this.usuarioservice.usuario.id).subscribe(res",{"_index":990,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.invitacion.descripcion",{"_index":1042,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.invitacion.grupoid",{"_index":1026,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.invitacion.usuarioexid",{"_index":1022,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitacionservice.invitacion.usuarioid",{"_index":1024,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitaciontemporal",{"_index":989,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitaciontemporal.grupoid",{"_index":1025,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitaciontemporal.tipo",{"_index":1027,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitaciontemporal.usuarioexid",{"_index":1023,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.invitaciontemporal.usuarioid",{"_index":1021,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.isopen",{"_index":1152,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.nuevoperteneces",{"_index":1109,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.nuevoperteneces.grupoid",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.nuevoperteneces.usuarioid",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.perteneces",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/PertenecesService.html":{}}}],["this.perteneces.grupoid",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.perteneces.usuarioid",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.pertenecesexistente",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.pertenecesexistente=true",{"_index":1150,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.pertenecesid",{"_index":628,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.pertenecesservice.createperteneces(this.nuevoperteneces",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.pertenecesservice.createperteneces(this.perteneces",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.pertenecesservice.deleteperteneces(this.pertenecesid",{"_index":630,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.pertenecesservice.getpergrupos(this.usuarioservice.usuario.id).subscribe(res",{"_index":854,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.pertenecesservice.getperusuarios(this.gruposervice.grupo.id).subscribe(res",{"_index":614,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.pertenecesservice.getperusuariosgrupos(this.gruposervice.grupo.id.tostring",{"_index":626,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.pertenecesservice.getperusuariosgruposboolean(this.addgrupocodigo",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.delete('/:id",{"_index":409,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.router.get",{"_index":403,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.router.get('/:codigo",{"_index":1662,"title":{},"body":{"classes/groupRoutes.html":{}}}],["this.router.get('/:correo",{"_index":1584,"title":{},"body":{"classes/baseRoutes.html":{}}}],["this.router.get('/:id",{"_index":405,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.router.get('/:municipio/:urbanizacion/:descripcion",{"_index":507,"title":{},"body":{"classes/DireccionRoutes.html":{}}}],["this.router.get('/administrador/:id",{"_index":1664,"title":{},"body":{"classes/groupRoutes.html":{}}}],["this.router.get('/detalle/:id",{"_index":1589,"title":{},"body":{"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.router.get('/pergrupos/:usuarioid",{"_index":1427,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["this.router.get('/perteneces/:codigo",{"_index":1666,"title":{},"body":{"classes/groupRoutes.html":{}}}],["this.router.get('/perteneces/:grupoid/:usuarioid",{"_index":1431,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["this.router.get('/perteneces/boolean/:grupoid/:usuarioid",{"_index":1433,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["this.router.get('/perusuarios/:grupoid",{"_index":1429,"title":{},"body":{"classes/PertenecesRoutes.html":{}}}],["this.router.get('/placa/:placa",{"_index":413,"title":{},"body":{"classes/CarroRoutes.html":{}}}],["this.router.get('/solicitud/:usuarioexid",{"_index":929,"title":{},"body":{"classes/InvitacionRoutes.html":{}}}],["this.router.navigate([\"/login",{"_index":228,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.router.navigate(['./inicio",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['./login",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.post",{"_index":407,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.router.put('/:id",{"_index":411,"title":{},"body":{"classes/CarroRoutes.html":{},"classes/DireccionRoutes.html":{},"classes/InvitacionRoutes.html":{},"classes/PertenecesRoutes.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["this.routes",{"_index":1520,"title":{},"body":{"classes/Server.html":{}}}],["this.sleep(1000",{"_index":610,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.sleep(2000",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/InicioComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["this.sleep(500",{"_index":992,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudes.push",{"_index":996,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudes.push(this.solicitudtemporal",{"_index":1014,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal",{"_index":986,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.gruponombre",{"_index":1012,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.invitacionid",{"_index":1008,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.invitaciontipo",{"_index":1007,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.usuariocorreo",{"_index":1011,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.usuarionombre",{"_index":1009,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.solicitudtemporal.usuariotelefono",{"_index":1010,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.temp",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tempgrupos",{"_index":860,"title":{},"body":{"components/InicioComponent.html":{}}}],["this.tempusuarios",{"_index":621,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.token=true",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usuario",{"_index":1334,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsuarioService.html":{}}}],["this.usuario.carroid",{"_index":1345,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.carroid.tostring",{"_index":1350,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.cedula",{"_index":1361,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.cedula=form.value.cedula",{"_index":1485,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuario.correo",{"_index":1364,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.correo=form.value.email",{"_index":1481,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuario.direccionid.tostring",{"_index":1355,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.direccionid=this.direccionid",{"_index":1353,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.edad",{"_index":1359,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.edad=form.value.age",{"_index":1486,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuario.nombre",{"_index":1356,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.nombre=form.value.username",{"_index":1484,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuario.telefono",{"_index":1363,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuario.telefono=form.value.phone",{"_index":1483,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuario=new",{"_index":1478,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuariomodal",{"_index":609,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.usuariomodal.id",{"_index":642,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.usuarios.push(this.tempusuarios",{"_index":623,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.usuarioservice.createusuario(usuario",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usuarioservice.getusuario(email",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usuarioservice.getusuario(this.usuario.correo",{"_index":1343,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuarioservice.getusuariodetalle(invitacion.usuarioid).subscribe(res",{"_index":994,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuarioservice.getusuariodetalle(this.invitacionservice.invitacion.usuarioid).subscribe(res",{"_index":1017,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuarioservice.getusuariodetalle(usuario).subscribe(res",{"_index":620,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.usuarioservice.updateusuario(this.usuario",{"_index":1342,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuarioservice.usuario",{"_index":1335,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuarioservice.usuario.carroid",{"_index":1336,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usuarioservice.usuario.id",{"_index":612,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.usuarioservice.usuario.id).subscribe(res",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.usuariosid",{"_index":615,"title":{},"body":{"components/GrupoComponent.html":{}}}],["this.usuariotemporal",{"_index":987,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuariotemporal.cedula",{"_index":1039,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuariotemporal.correo",{"_index":1005,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuariotemporal.edad",{"_index":1041,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuariotemporal.nombre",{"_index":1001,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["this.usuariotemporal.telefono",{"_index":1003,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["tienes",{"_index":1494,"title":{},"body":{"components/RegistroComponent.html":{}}}],["times",{"_index":652,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["tipo",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"classes/Carro.html":{},"classes/CarroRoutes.html":{},"classes/Direccion.html":{},"classes/DireccionRoutes.html":{},"classes/Grupo.html":{},"classes/Invitacion.html":{},"classes/InvitacionRoutes.html":{},"components/InvitacionesComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["todas",{"_index":481,"title":{},"body":{"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/Server.html":{}}}],["todo",{"_index":1203,"title":{},"body":{"components/NavbarComponent.html":{}}}],["todos",{"_index":349,"title":{},"body":{"classes/CarroController.html":{},"injectables/CarroService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["token",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["toma",{"_index":1218,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tomado",{"_index":1221,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tooltipmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["trae",{"_index":579,"title":{},"body":{"components/GrupoComponent.html":{},"components/NavbarComponent.html":{}}}],["traen",{"_index":1229,"title":{},"body":{"components/NavbarComponent.html":{}}}],["transform",{"_index":737,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["transicion",{"_index":1286,"title":{},"body":{"components/NavbarComponent.html":{}}}],["transition",{"_index":1291,"title":{},"body":{"components/NavbarComponent.html":{}}}],["transporte",{"_index":568,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["trasnporte",{"_index":586,"title":{},"body":{"components/GrupoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["true",{"_index":227,"title":{},"body":{"guards/AuthGuardService.html":{},"components/GrupoComponent.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{}}}],["try",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["tslib",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/Direccion.html":{},"classes/DireccionController.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"classes/Grupo.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{},"classes/usuarioController.html":{}}}],["types/bootstrap",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["types/cors",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["types/firebase",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["types/morgan",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["un",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"classes/Carro.html":{},"classes/CarroController.html":{},"injectables/CarroService.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":478,"title":{},"body":{"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{}}}],["une",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["unica",{"_index":677,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{}}}],["unir",{"_index":561,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{}}}],["unirse",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["unit",{"_index":1702,"title":{},"body":{"index.html":{}}}],["update",{"_index":335,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["update(req",{"_index":356,"title":{},"body":{"classes/CarroController.html":{},"classes/DireccionController.html":{},"classes/GruposController.html":{},"classes/InvitacionController.html":{},"classes/PertenecesController.html":{},"classes/usuarioController.html":{}}}],["updatecarro",{"_index":425,"title":{},"body":{"injectables/CarroService.html":{}}}],["updatecarro(carro",{"_index":443,"title":{},"body":{"injectables/CarroService.html":{}}}],["updated",{"_index":824,"title":{},"body":{"classes/GruposController.html":{}}}],["updatedireccion",{"_index":518,"title":{},"body":{"injectables/DireccionService.html":{}}}],["updatedireccion(direccion",{"_index":529,"title":{},"body":{"injectables/DireccionService.html":{}}}],["updategrupo",{"_index":772,"title":{},"body":{"injectables/GrupoService.html":{}}}],["updategrupo(grupo",{"_index":789,"title":{},"body":{"injectables/GrupoService.html":{}}}],["updateinvitacion",{"_index":939,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["updateinvitacion(invitacion",{"_index":950,"title":{},"body":{"injectables/InvitacionService.html":{}}}],["updateperteneces",{"_index":1442,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["updateperteneces(perteneces",{"_index":1459,"title":{},"body":{"injectables/PertenecesService.html":{}}}],["updateusuario",{"_index":1559,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["updateusuario(usuario",{"_index":1570,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["uppercase",{"_index":738,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["urbanizacion",{"_index":470,"title":{},"body":{"classes/Direccion.html":{},"classes/DireccionController.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["urbanizacion}=req.params",{"_index":493,"title":{},"body":{"classes/DireccionController.html":{}}}],["url_api",{"_index":419,"title":{},"body":{"injectables/CarroService.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"injectables/InvitacionService.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{}}}],["usado",{"_index":1473,"title":{},"body":{"components/RegistroComponent.html":{}}}],["usaurio",{"_index":1396,"title":{},"body":{"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["use",{"_index":1691,"title":{},"body":{"index.html":{}}}],["user",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuairo",{"_index":1575,"title":{},"body":{"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["usuario",{"_index":216,"title":{"classes/Usuario.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"classes/GruposController.html":{},"components/InicioComponent.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"components/RegistroComponent.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/usuarioController.html":{}}}],["usuario).subscribe(res",{"_index":1576,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["usuario.carroid",{"_index":624,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.correo",{"_index":650,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.direccionid",{"_index":631,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.id",{"_index":625,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.id.tostring()).subscribe(res",{"_index":627,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.nombre",{"_index":648,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario.telefono",{"_index":649,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuario/usuario.service",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuariocontroller",{"_index":1608,"title":{"classes/usuarioController.html":{}},"body":{"coverage.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["usuariocorreo",{"_index":1004,"title":{},"body":{"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["usuarioexid",{"_index":881,"title":{},"body":{"classes/Invitacion.html":{},"classes/InvitacionController.html":{},"injectables/InvitacionService.html":{}}}],["usuarioexid}=req.params",{"_index":907,"title":{},"body":{"classes/InvitacionController.html":{}}}],["usuarioid",{"_index":882,"title":{},"body":{"classes/Invitacion.html":{},"classes/Perteneces.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{}}}],["usuarioid}=req.params",{"_index":1402,"title":{},"body":{"classes/PertenecesController.html":{}}}],["usuariomodal",{"_index":607,"title":{},"body":{"components/GrupoComponent.html":{}}}],["usuarionombre",{"_index":1000,"title":{},"body":{"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["usuarioroutes",{"_index":1591,"title":{},"body":{"classes/baseRoutes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usuarioroutes.router",{"_index":1592,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarios",{"_index":552,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesController.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/usuarioController.html":{}}}],["usuarios=await",{"_index":1735,"title":{},"body":{"classes/usuarioController.html":{}}}],["usuarioscontroller",{"_index":1581,"title":{},"body":{"classes/baseRoutes.html":{},"coverage.html":{},"classes/usuarioController.html":{},"miscellaneous/variables.html":{}}}],["usuarioscontroller.create",{"_index":1586,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller.delete",{"_index":1587,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller.get",{"_index":1583,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller.getone",{"_index":1585,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller.getusuariodetalle",{"_index":1590,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller.update",{"_index":1588,"title":{},"body":{"classes/baseRoutes.html":{}}}],["usuarioscontroller=new",{"_index":1745,"title":{},"body":{"classes/usuarioController.html":{}}}],["usuarioservice",{"_index":131,"title":{"injectables/UsuarioService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"overview.html":{}}}],["usuariosid",{"_index":604,"title":{},"body":{"components/GrupoComponent.html":{},"classes/PertenecesController.html":{}}}],["usuariosid.push(pert.usuarioid",{"_index":1410,"title":{},"body":{"classes/PertenecesController.html":{}}}],["usuariotelefono",{"_index":1002,"title":{},"body":{"components/InvitacionesComponent.html":{},"classes/Solicitud.html":{}}}],["usuariotemporal",{"_index":983,"title":{},"body":{"components/InvitacionesComponent.html":{}}}],["utilizar",{"_index":1507,"title":{},"body":{"classes/Server.html":{}}}],["va",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegistroComponent.html":{}}}],["valor",{"_index":1172,"title":{},"body":{"components/NavbarComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"components/GrupoComponent.html":{},"injectables/GrupoService.html":{},"components/InicioComponent.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{},"classes/PertenecesRoutes.html":{},"injectables/PertenecesService.html":{},"injectables/UsuarioService.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["variable",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"classes/Carro.html":{},"classes/CarroRoutes.html":{},"classes/Direccion.html":{},"classes/DireccionRoutes.html":{},"classes/Grupo.html":{},"classes/Invitacion.html":{},"classes/InvitacionRoutes.html":{},"classes/Perteneces.html":{},"classes/PertenecesRoutes.html":{},"classes/Server.html":{},"classes/Solicitud.html":{},"classes/Usuario.html":{},"classes/baseRoutes.html":{},"coverage.html":{},"classes/groupRoutes.html":{}}}],["variables",{"_index":1747,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vea",{"_index":1193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["vehiculo",{"_index":572,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["vehiculos",{"_index":562,"title":{},"body":{"components/GrupoComponent.html":{}}}],["vehículo",{"_index":1371,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ver",{"_index":874,"title":{},"body":{"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{}}}],["verifica",{"_index":211,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/LoginComponent.html":{}}}],["verificar",{"_index":203,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["version",{"_index":1675,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":747,"title":{},"body":{"components/GrupoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["verticalmente",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["via",{"_index":1706,"title":{},"body":{"index.html":{}}}],["vision",{"_index":1240,"title":{},"body":{"components/NavbarComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/CarroRoutes.html":{},"injectables/CarroService.html":{},"classes/DireccionRoutes.html":{},"injectables/DireccionService.html":{},"injectables/GrupoService.html":{},"classes/InvitacionRoutes.html":{},"injectables/InvitacionService.html":{},"components/LoginComponent.html":{},"classes/PertenecesRoutes.html":{},"components/RegistroComponent.html":{},"classes/Server.html":{},"classes/baseRoutes.html":{},"classes/groupRoutes.html":{}}}],["webkit",{"_index":694,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/NavbarComponent.html":{}}}],["weight",{"_index":706,"title":{},"body":{"components/GrupoComponent.html":{},"components/InicioComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["while(this.gruposervice.getgruposcodigo(this.grupo.codigo.tostring",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["white",{"_index":728,"title":{},"body":{"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["width",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/GrupoComponent.html":{},"components/InvitacionesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegistroComponent.html":{}}}],["width:769px",{"_index":1243,"title":{},"body":{"components/NavbarComponent.html":{}}}],["y",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"classes/Server.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":215,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["z",{"_index":1313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        AppComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio de autentificacion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n                    Inicializa la app con la informacion de firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metroUber'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        variable title de tipo string\nNombre del proyecto\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { AuthService } from './shared/services/auth/auth.service';\n\n/**\n* AppComponent\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  /**\n  * variable title de tipo string\n  * Nombre del proyecto\n  */\n  title = 'metroUber';\n\n  /**\n    * Constructor\n    * @param {SuthService} authService El servicio de autentificacion\n    */\n  constructor(private authService: AuthService) { }\n\n  /**\n  * Inicializa la app con la informacion de firebase\n  */\n  ngOnInit(){\n    firebase.initializeApp({\n      apiKey: \"AIzaSyAdK1fZcF1Li9wKorDRIESPvceS4RL8q9k\",\n      authDomain: \"metrouber-2be7c.firebaseapp.com\",\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                html, body{\n\n    min-height: 100%;\n    width: 100%;\n    margin-top: 300px;\n}\n\np {\n    margin-top: 100px;\n    margin-bottom: 100px;\n    margin-right: 150px;\n    margin-left: 80px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GrupoComponent', 'selector': 'app-grupo'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'InvitacionesComponent', 'selector': 'app-invitaciones'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGrupoComponent\n\nGrupoComponent\n\nAppModule -->\n\nGrupoComponent->AppModule\n\n\n\n\n\nInicioComponent\n\nInicioComponent\n\nAppModule -->\n\nInicioComponent->AppModule\n\n\n\n\n\nInvitacionesComponent\n\nInvitacionesComponent\n\nAppModule -->\n\nInvitacionesComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPerfilComponent\n\nPerfilComponent\n\nAppModule -->\n\nPerfilComponent->AppModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nAppModule -->\n\nRegistroComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCarroService\n\nCarroService\n\nAppModule -->\n\nCarroService->AppModule\n\n\n\n\n\nDireccionService\n\nDireccionService\n\nAppModule -->\n\nDireccionService->AppModule\n\n\n\n\n\nGrupoService\n\nGrupoService\n\nAppModule -->\n\nGrupoService->AppModule\n\n\n\n\n\nInvitacionService\n\nInvitacionService\n\nAppModule -->\n\nInvitacionService->AppModule\n\n\n\n\n\nPertenecesService\n\nPertenecesService\n\nAppModule -->\n\nPertenecesService->AppModule\n\n\n\n\n\nUsuarioService\n\nUsuarioService\n\nAppModule -->\n\nUsuarioService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GrupoComponent\n                        \n                        \n                            InicioComponent\n                        \n                        \n                            InvitacionesComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PerfilComponent\n                        \n                        \n                            RegistroComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CarroService\n                        \n                        \n                            DireccionService\n                        \n                        \n                            GrupoService\n                        \n                        \n                            InvitacionService\n                        \n                        \n                            PertenecesService\n                        \n                        \n                            UsuarioService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistroComponent } from './components/registro/registro.component';\nimport { InicioComponent } from './components/inicio/inicio.component';\nimport { PerfilComponent } from './components/perfil/perfil.component';\nimport { GrupoComponent } from './components/grupo/grupo.component';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AuthService } from './shared/services/auth/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { UsuarioService } from './shared/services/usuario/usuario.service';\nimport { GrupoService } from './shared/services/grupo/grupo.service';\nimport { DireccionService } from './shared/services/direccion/direccion.service';\nimport { PertenecesService } from './shared/services/perteneces/perteneces.service';\nimport { CarroService } from './shared/services/carro/carro.service';\nimport { InvitacionesComponent } from './components/invitaciones/invitaciones.component';\nimport { InvitacionService } from './shared/services/invitacion/invitacion.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegistroComponent,\n    InicioComponent,\n    PerfilComponent,\n    GrupoComponent,\n    InvitacionesComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    BrowserModule,\n    AppRoutingModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, AngularFireAuth, UsuarioService, GrupoService, DireccionService, PertenecesService, CarroService, InvitacionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistroComponent } from './components/registro/registro.component';\nimport { InicioComponent } from './components/inicio/inicio.component';\nimport { AuthGuardService } from './shared/services/authGuard/auth-guard.service';\nimport { PerfilComponent } from './components/perfil/perfil.component';\nimport { GrupoComponent } from './components/grupo/grupo.component';\nimport { InvitacionesComponent } from './components/invitaciones/invitaciones.component';\n\nconst routes: Routes = [\n  {path: 'registrarse', component: RegistroComponent},\n  {path: 'grupo', component: GrupoComponent},\n  {path: 'inicio', component: InicioComponent},\n  {path: 'perfil', component: PerfilComponent},\n  {path: 'invitaciones', component: InvitacionesComponent},\n  {path: '**', component: LoginComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/services/authGuard/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    AuthGuard Service\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/authGuard/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para verificar la autentificacion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Para redirigir componentes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/authGuard/auth-guard.service.ts:26\n                \n            \n\n\n            \n                \n                    Verifica que se pueda redirigir ya que el usuario esta autentificado\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n   * AuthGuard Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n   /**\n * Constructor\n  * @param {AuthService} authService El servicio para verificar la autentificacion\n  * @param {Router} router Para redirigir componentes\n */\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /**\n   * Verifica que se pueda redirigir ya que el usuario esta autentificado\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    if(this.authService.isAuthenticated()){\n      return true;\n    }\n    else{\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Servicio de autentificacion\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                    Async\n                                logoutUser\n                            \n                            \n                                    Async\n                                signInUser\n                            \n                            \n                                    Async\n                                signUpUser\n                            \n                            \n                                    Async\n                                temp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afAuth: AngularFireAuth, FB: AngularFireModule, usuarioService: UsuarioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth/auth.service.ts:29\n                            \n                        \n\n                \n                    \n                            Se guarda el usuario ingresado\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El router para redirigir en la aplicacion\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Para realizar la autentificacion de firebase\n\n                                                        \n                                                \n                                                \n                                                        FB\n                                                  \n                                                        \n                                                                    AngularFireModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Para realizar la autentificacion de firebase\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Para crear un nuevo usuario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth/auth.service.ts:94\n                \n            \n\n\n            \n                \n                    Verifica que se este autenticado\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n                    Cierra sesion del usuario\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signInUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signInUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n                    Ingresa un usuario preexistente\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El email dle usuario a ingresar\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La contrasena del usuario a ingresar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUpUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpUser(usuario: Usuario, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n                    Registra un nuevo usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El usuario a registrar\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La contrasena del usuario a registrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            temp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    temp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth/auth.service.ts:87\n                \n            \n\n\n            \n                \n                    Redirige al inicio\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        El token del usuario ingresado\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        El usuario ingresado\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireModule } from '@angular/fire';\nimport { User } from  'firebase';\nimport { UsuarioService } from './../usuario/usuario.service';\nimport {Usuario} from '../../models/Usuario';\n\n/**\n   * Servicio de autentificacion\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   *El token del usuario ingresado\n */\n  token: boolean;\n  /**\n   * El usuario ingresado\n */\n  user: User;\n  /**\n   * @ignore\n */\n  usuario: Usuario;\n\n  /**\n   * Se guarda el usuario ingresado\n   * @param {Router} router El router para redirigir en la aplicacion\n   * @param {AngularFireAuth} afAuth Para realizar la autentificacion de firebase\n   * @param {AngularFireModule} FB Para realizar la autentificacion de firebase\n   * @param {UsuarioService} usuarioService Para crear un nuevo usuario\n */\n  constructor(private router: Router, private afAuth: AngularFireAuth, private FB: AngularFireModule, private usuarioService: UsuarioService) { \n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.user = user;\n        localStorage.setItem('user', JSON.stringify(this.user));\n      } else {\n        localStorage.setItem('user', null);\n      }\n    })\n  }\n\n   /**\n   * Registra un nuevo usuario\n   * @param {Usuario} usuario El usuario a registrar\n   * @param {string} password La contrasena del usuario a registrar\n */\n  async signUpUser(usuario: Usuario, password: string){\n    await firebase.auth().createUserWithEmailAndPassword(usuario.correo, password).then(\n      response => {\n        this.token=true;\n        this.usuarioService.createUsuario(usuario);\n      }\n    )\n    .catch(\n      error => console.log(error)\n    );\n    \n    this.router.navigate(['./login']);\n  }\n\n  /**\n   * Ingresa un usuario preexistente\n   * @param {string} email El email dle usuario a ingresar\n   * @param {string} password La contrasena del usuario a ingresar\n */\n  async signInUser(email: string, password: string) {\n    try {\n      await  this.afAuth.auth.signInWithEmailAndPassword(email, password);\n      await this.usuarioService.getUsuario(email);\n      await this.sleep(2000);\n      this.temp();\n  } catch (e) {\n      alert(\"Error!\"  +  e.message);\n  }\n  }\n\n  /**\n   * Redirige al inicio\n */\n  async temp (){\n    this.router.navigate(['./inicio']);\n  }\n\n  /**\n   * Verifica que se este autenticado\n */\n  isAuthenticated(){\n    const  user  =  JSON.parse(localStorage.getItem('user'));\n    return  user  !==  null;\n  }\n\n  /**\n   * Cierra sesion del usuario\n */\n  async logoutUser() {\n    await this.afAuth.auth.signOut();\n    localStorage.removeItem('user');\n    this.router.navigate(['./login']);\n  }\n\n  /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms=ms/2;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Carro.html":{"url":"classes/Carro.html","title":"class - Carro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Carro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Carro.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de un carro\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ano\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                modelo\n                            \n                            \n                                    Public\n                                placa\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ano\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Carro.ts:20\n                            \n                        \n\n                \n                    \n                        variable ano de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Carro.ts:16\n                            \n                        \n\n                \n                    \n                        variable color de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Carro.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Carro.ts:24\n                            \n                        \n\n                \n                    \n                        variable modelo de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placa\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Carro.ts:12\n                            \n                        \n\n                \n                    \n                        variable placa de tipo string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Carro {\n    /**\n   * variable id de tipo number\n */\n    public id: number;\n    /**\n    * variable placa de tipo string\n    */\n    public placa: string;\n    /**\n    * variable color de tipo string\n    */\n    public color: string;\n    /**\n    * variable ano de tipo string\n    */\n    public ano: string;\n    /**\n    * variable modelo de tipo string\n    */\n    public modelo: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarroController.html":{"url":"classes/CarroController.html","title":"class - CarroController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/CarroController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de carro\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getId\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:34\n                \n            \n\n\n            \n                \n                    Crea un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:43\n                \n            \n\n\n            \n                \n                    Elimina un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todos los carros\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:64\n                \n            \n\n\n            \n                \n                    Obtiene el id de un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/CarroController.ts:54\n                \n            \n\n\n            \n                \n                    Actualiza un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n/**\n* Controlador de carro\n*/\nclass CarroController{\n\n    /**\n   * Obtiene todos los carros\n */\n    public async get (req: Request, res: Response){\n        const carros=await pool.query(\"SELECT * FROM carros\");\n        res.json(carros);\n    }\n    \n    /**\n   * Obtiene un carro\n   * @param {string} id El id del carro a obtener\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const carros=await pool.query(\"SELECT * FROM carros WHERE id = ?\",  [id]);\n        if(carros.length>0){\n            return res.json(carros[0]);\n        }\n        res.status(404).json({text: \"Carro no encontrado\"});\n    }\n\n    /**\n   * Crea un carro\n   * @param {Carro} carro El carro a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO carros set ?\", [req.body]);\n        res.json({message: 'Carro creado'});\n    }\n\n     /**\n   * Elimina un carro\n   * @param {string} id El id del carro a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM carros WHERE id = ?\", [id]);\n        res.json({text: 'Carro eliminado'});\n    }\n\n     /**\n   * Actualiza un carro\n   * @param {Carro} carro El carro a actualizar\n   * @param {string} id El id del carro a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        await pool.query('UPDATE carros SET ? WHERE id = ?', [req.body, id]);\n        res.json({text: \"Carro actualizado\"});\n    }\n    \n    /**\n   * Obtiene el id de un carro\n   * @param {string} placa La placa del carro\n */\n    public async getId (req: Request, res: Response): Promise {\n        const {placa}=req.params;\n        const carros=await pool.query(\"SELECT * FROM carros WHERE placa = ?\", [placa]);\n        if(carros.length>0){\n            return res.json(carros[0].id);\n        }\n        res.status(404).json({text: \"Id no encontrado\"});\n    }\n}\n\n/**\n   * Exporta el controlador\n */\nconst carroController=new CarroController();\nexport default carroController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarroRoutes.html":{"url":"classes/CarroRoutes.html","title":"class - CarroRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarroRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/carroRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas del carro\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/carroRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/carroRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/carroRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport carroController  from './../controllers/CarroController';\n\n/**\n   * Las rutas del carro\n */\nclass CarroRoutes{\n    \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n    /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', carroController.get);\n        this.router.get('/:id', carroController.getOne);\n        this.router.post('/', carroController.create);\n        this.router.delete('/:id', carroController.delete);\n        this.router.put('/:id', carroController.update);\n        this.router.get('/placa/:placa', carroController.getId);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst carroRoute= new CarroRoutes();\nexport default carroRoute.router;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarroService.html":{"url":"injectables/CarroService.html","title":"injectable - CarroService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarroService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/carro/carro.service.ts\n        \n\n            \n                Description\n            \n            \n                Servicio Carro\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carro\n                            \n                            \n                                carroId\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCarro\n                            \n                            \n                                deleteCarro\n                            \n                            \n                                getCarro\n                            \n                            \n                                getCarroId\n                            \n                            \n                                getCarros\n                            \n                            \n                                updateCarro\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/carro/carro.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCarro\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCarro(carro: Carro)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:62\n                \n            \n\n\n            \n                \n                    Crea un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    carro\n                                    \n                                                Carro\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El carro a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCarro\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCarro(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:82\n                \n            \n\n\n            \n                \n                    Elimina un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del carro a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCarro\n                        \n                        \n                    \n                \n            \n            \n                \ngetCarro(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:50\n                \n            \n\n\n            \n                \n                    Obtiene un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del carro a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCarroId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCarroId(placa: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:91\n                \n            \n\n\n            \n                \n                    Obtiene el id de un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    placa\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La placa del carro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCarros\n                        \n                        \n                    \n                \n            \n            \n                \ngetCarros()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:41\n                \n            \n\n\n            \n                \n                    Obtiene todos los carros\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCarro\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCarro(carro: Carro, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/carro/carro.service.ts:73\n                \n            \n\n\n            \n                \n                    Actualiza un carro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    carro\n                                    \n                                                Carro\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El carro a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del carro a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/carro/carro.service.ts:22\n                            \n                        \n\n                \n                    \n                        El carro\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carroId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/carro/carro.service.ts:18\n                            \n                        \n\n                \n                    \n                        El id del carro\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/carros'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/carro/carro.service.ts:26\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Carro} from '../../models/Carro';\nimport {Observable} from 'rxjs';\n\n\n/**\n   * Servicio Carro\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarroService {\n\n  /**\n   * El id del carro\n */\n  carroId: any;\n  /**\n   * El carro\n */\n  carro: any;\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/carros';\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n    this.carro=new Carro();\n  }\n\n  /**\n   * Obtiene todos los carros\n   * @return la respuesta del servidor\n */\n  getCarros() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene un carro\n   * @param {string} id El id del carro a obtener\n   * @return la respuesta del servidor\n */\n  getCarro(id: string){\n    \n    return this.http.get(`${this.URL_API}/${id}`).subscribe(res => {\n      this.carro = res;\n    }, err => console.log(err));\n  }\n\n  /**\n   * Crea un carro\n   * @param {Carro} carro El carro a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  createCarro(carro: Carro) {\n    this.http.post(`${this.URL_API}`, carro).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n\n  /**\n   * Actualiza un carro\n   * @param {Carro} carro El carro a actualizar\n   * @param {string} id El id del carro a actualizar\n   * @return la respuesta del servidor\n */\n  updateCarro(carro: Carro, id: string) {\n    return this.http.put(`${this.URL_API}/${id}`, carro).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n   /**\n   * Elimina un carro\n   * @param {string} id El id del carro a eliminar\n   * @return la respuesta del servidor\n */\n  deleteCarro(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`);\n  }\n\n   /**\n   * Obtiene el id de un carro\n   * @param {string} placa La placa del carro\n   * @return la respuesta del servidor\n */\n  getCarroId(placa: string){\n    return this.http.get(`${this.URL_API}/placa/${placa}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Direccion.html":{"url":"classes/Direccion.html","title":"class - Direccion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Direccion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Direccion.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de direccion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descripcion\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                municipio\n                            \n                            \n                                    Public\n                                urbanizacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descripcion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Direccion.ts:20\n                            \n                        \n\n                \n                    \n                        variable descripcion de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Direccion.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            municipio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Direccion.ts:12\n                            \n                        \n\n                \n                    \n                        variable municipio de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            urbanizacion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Direccion.ts:16\n                            \n                        \n\n                \n                    \n                        variable urbanizacion de tipo string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Direccion {\n    /**\n    * variable id de tipo number\n    */\n    public id: number;\n    /**\n    * variable municipio de tipo string\n    */\n    public municipio: string;\n    /**\n    * variable urbanizacion de tipo string\n    */\n    public urbanizacion: string;\n    /**\n    * variable descripcion de tipo string\n    */\n    public descripcion: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DireccionController.html":{"url":"classes/DireccionController.html","title":"class - DireccionController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DireccionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/DireccionController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de direccion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getId\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:34\n                \n            \n\n\n            \n                \n                    Crea una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:43\n                \n            \n\n\n            \n                \n                    Elimina una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todas las direcciones\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:66\n                \n            \n\n\n            \n                \n                    Obtiene el id de una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/DireccionController.ts:54\n                \n            \n\n\n            \n                \n                    Actualiza una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n/**\n   * Controlador de direccion\n */\nclass DireccionController{\n\n     /**\n   * Obtiene todas las direcciones\n */\n    public async get (req: Request, res: Response){\n        const direcciones=await pool.query(\"SELECT * FROM direccions\");\n        res.json(direcciones);\n    }\n    \n    /**\n   * Obtiene una direccion\n   * @param {string} id El id de la direccion a obtener\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const direcciones=await pool.query(\"SELECT * FROM direccions WHERE id = ?\",  [id]);\n        if(direcciones.length>0){\n            return res.json(direcciones[0]);\n        }\n        res.status(404).json({text: \"Direccion no encontrado\"});\n    }\n\n     /**\n   * Crea una direccion\n   * @param {Direccion} direccion La direccion a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO direccions set ?\", [req.body]);\n        res.json({message: 'Direccion creado'});\n    }\n\n    /**\n   * Elimina una direccion\n   * @param {string} id El id de la direccion a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM direccions WHERE id = ?\", [id]);\n        res.json({text: 'Direccion eliminado'});\n    }\n\n    /**\n   * Actualiza una direccion\n   * @param {Direccion} direccion La direccion a actualizar\n   * @param {string} id El id de la direccion a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        await pool.query('UPDATE direccions SET ? WHERE id = ?', [req.body, id]);\n        res.json({text: \"Direccion actualizado\"});\n    }\n    \n    /**\n   * Obtiene el id de una direccion\n   * @param {string} municipio El municipio donde se encuentra\n   * @param {string} urbanizacion La urbanizacion donde se encuentra\n   * @param {string} descripcion La descripcion de la direccion\n */\n    public async getId (req: Request, res: Response): Promise {\n        const {municipio}=req.params;\n        const {urbanizacion}=req.params;\n        const {descripcion}=req.params;\n        const direcciones=await pool.query(\"SELECT * FROM direccions WHERE municipio = ? AND urbanizacion = ? AND descripcion = ?\", [municipio, urbanizacion, descripcion]);\n        if(direcciones.length>0){\n            return res.json(direcciones[0].id);\n        }\n        res.status(404).json({text: \"Id no encontrado\"});\n    }\n}\n\n/**\n   * Se exporta el controlador\n */\nconst direccionController=new DireccionController();\nexport default direccionController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DireccionRoutes.html":{"url":"classes/DireccionRoutes.html","title":"class - DireccionRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DireccionRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/direccionRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas de direccion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/direccionRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/direccionRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/direccionRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport direccionController  from './../controllers/DireccionController';\n\n/**\n   * Las rutas de direccion\n */\nclass DireccionRoutes{\n    \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n     /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', direccionController.get);\n        this.router.get('/:id', direccionController.getOne);\n        this.router.post('/', direccionController.create);\n        this.router.delete('/:id', direccionController.delete);\n        this.router.put('/:id', direccionController.update);\n        this.router.get('/:municipio/:urbanizacion/:descripcion', direccionController.getId);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst direccionRoute= new DireccionRoutes();\nexport default direccionRoute.router;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DireccionService.html":{"url":"injectables/DireccionService.html","title":"injectable - DireccionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DireccionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/direccion/direccion.service.ts\n        \n\n            \n                Description\n            \n            \n                Servicio de direccion\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                direccion\n                            \n                            \n                                direccionId\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDireccion\n                            \n                            \n                                deleteDireccion\n                            \n                            \n                                getDireccion\n                            \n                            \n                                getDirecciones\n                            \n                            \n                                getDireccionId\n                            \n                            \n                                updateDireccion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/direccion/direccion.service.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDireccion\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDireccion(direccion: Direccion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:63\n                \n            \n\n\n            \n                \n                    Crea una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    direccion\n                                    \n                                                Direccion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La direccion a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteDireccion\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteDireccion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:82\n                \n            \n\n\n            \n                \n                    Elimina una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la direccion a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDireccion\n                        \n                        \n                    \n                \n            \n            \n                \ngetDireccion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:51\n                \n            \n\n\n            \n                \n                    Obtiene una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la direccion a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDirecciones\n                        \n                        \n                    \n                \n            \n            \n                \ngetDirecciones()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:42\n                \n            \n\n\n            \n                \n                    Obtiene todas las direcciones\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDireccionId\n                        \n                        \n                    \n                \n            \n            \n                \ngetDireccionId(municipio: string, urbanizacion: string, descripcion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:93\n                \n            \n\n\n            \n                \n                    Obtiene el id de una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    municipio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El municipio donde se encuentra\n\n                                    \n                                \n                                \n                                    urbanizacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La urbanizacion donde se encuentra\n\n                                    \n                                \n                                \n                                    descripcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La descripcion de la direccion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDireccion\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDireccion(direccion: Direccion, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/direccion/direccion.service.ts:73\n                \n            \n\n\n            \n                \n                    Actualiza una direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    direccion\n                                    \n                                                Direccion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La direccion a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la direccion a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direccion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/direccion/direccion.service.ts:22\n                            \n                        \n\n                \n                    \n                        Direccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direccionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/direccion/direccion.service.ts:18\n                            \n                        \n\n                \n                    \n                        Id de la direccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/direcciones'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/direccion/direccion.service.ts:27\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Direccion} from '../../models/Direccion';\nimport {Observable} from 'rxjs';\n\n\n/**\n   * Servicio de direccion\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DireccionService {\n\n  /**\n   * Id de la direccion\n */\n  direccionId: any;\n  /**\n   * Direccion\n */\n  direccion: any;\n\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/direcciones';\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n    this.direccion=new Direccion();\n  }\n\n  /**\n   * Obtiene todas las direcciones\n   * @return la respuesta del servidor\n */\n  getDirecciones() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene una direccion\n   * @param {string} id El id de la direccion a obtener\n   * @return la respuesta del servidor\n */\n  getDireccion(id: string){\n    \n    return this.http.get(`${this.URL_API}/${id}`).subscribe(res => {\n      this.direccion = res;\n    }, err => console.log(err));\n  }\n\n  /**\n   * Crea una direccion\n   * @param {Direccion} direccion La direccion a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  createDireccion(direccion: Direccion) {\n    this.http.post(`${this.URL_API}`, direccion).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Actualiza una direccion\n   * @param {Direccion} direccion La direccion a actualizar\n   * @param {string} id El id de la direccion a actualizar\n   * @return la respuesta del servidor\n */\n  updateDireccion(direccion: Direccion, id: string) {\n    this.http.put(`${this.URL_API}/${id}`, direccion).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Elimina una direccion\n   * @param {string} id El id de la direccion a eliminar\n   * @return la respuesta del servidor\n */\n  deleteDireccion(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`);\n  }\n\n  /**\n   * Obtiene el id de una direccion\n   * @param {string} municipio El municipio donde se encuentra\n   * @param {string} urbanizacion La urbanizacion donde se encuentra\n   * @param {string} descripcion La descripcion de la direccion\n   * @return la respuesta del servidor\n */\n  getDireccionId(municipio: string, urbanizacion: string, descripcion: string){\n    return this.http.get(`${this.URL_API}/${municipio}/${urbanizacion}/${descripcion}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Grupo.html":{"url":"classes/Grupo.html","title":"class - Grupo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Grupo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Grupos.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de grupo\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administradorId\n                            \n                            \n                                    Public\n                                codigo\n                            \n                            \n                                    Public\n                                direccionId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                nombre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administradorId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Grupos.ts:24\n                            \n                        \n\n                \n                    \n                        variable administradorId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codigo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Grupos.ts:20\n                            \n                        \n\n                \n                    \n                        variable codigo de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            direccionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Grupos.ts:16\n                            \n                        \n\n                \n                    \n                        variable direccionId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Grupos.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nombre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Grupos.ts:12\n                            \n                        \n\n                \n                    \n                        variable nombre de tipo string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Grupo {\n    /**\n    * variable id de tipo number\n    */\n    public id: number;\n    /**\n    * variable nombre de tipo string\n    */\n    public nombre: string;\n    /**\n    * variable direccionId de tipo number\n    */\n    public direccionId: number;\n    /**\n    * variable codigo de tipo number\n    */\n    public codigo: number;\n    /**\n    * variable administradorId de tipo number\n    */\n    public administradorId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrupoComponent.html":{"url":"components/GrupoComponent.html","title":"component - GrupoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GrupoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/grupo/grupo.component.ts\n\n\n    \n        Description\n    \n    \n        Grupo Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grupo\n            \n\n            \n                styleUrls\n                ./grupo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./grupo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                administrador\n                            \n                            \n                                invitacion\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activarModal\n                            \n                            \n                                conCarro\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                eliminarEnabled\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grupoService: GrupoService, usuarioService: UsuarioService, pertenecesService: PertenecesService, carroService: CarroService, direccionService: DireccionService, invitacionService: InvitacionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/grupo/grupo.component.ts:52\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        grupoService\n                                                  \n                                                        \n                                                                        GrupoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar grupos\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar al usuario\n\n                                                        \n                                                \n                                                \n                                                        pertenecesService\n                                                  \n                                                        \n                                                                        PertenecesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para unir grupos con usuarios\n\n                                                        \n                                                \n                                                \n                                                        carroService\n                                                  \n                                                        \n                                                                        CarroService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener los datos de los vehiculos\n\n                                                        \n                                                \n                                                \n                                                        direccionService\n                                                  \n                                                        \n                                                                        DireccionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener la direccion\n\n                                                        \n                                                \n                                                \n                                                        invitacionService\n                                                  \n                                                        \n                                                                        InvitacionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener las invitaciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activarModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activarModal(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:143\n                \n            \n\n\n            \n                \n                    Activa el modal para pedir transporte\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conCarro\n                        \n                        \n                    \n                \n            \n            \n                \nconCarro(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:96\n                \n            \n\n\n            \n                \n                    Verifica que los usuarios posean vehiculo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            eliminar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eliminar(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:130\n                \n            \n\n\n            \n                \n                    Elimina al usuario del grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            eliminarEnabled\n                        \n                        \n                    \n                \n            \n            \n                \neliminarEnabled(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:108\n                \n            \n\n\n            \n                \n                    Verifica que el usuario pueda eliminar a otros usuarios del grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:68\n                \n            \n\n\n            \n                \n                    Trae todos los detalles del grupo\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/grupo/grupo.component.ts:158\n                \n            \n\n\n            \n                \n                    Envia la solicitud de trasnporte\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Los datos de la solicitud a mandar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            administrador\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/grupo/grupo.component.ts:28\n                            \n                        \n\n                \n                    \n                        El usuario es el administrador del grupo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invitacion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/grupo/grupo.component.ts:52\n                            \n                        \n\n                \n                    \n                        La invitacion para pedir transporte\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usuarios\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/grupo/grupo.component.ts:32\n                            \n                        \n\n                \n                    \n                        Los usuarios del grupo\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { GrupoService } from 'src/app/shared/services/grupo/grupo.service';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\nimport { PertenecesService } from 'src/app/shared/services/perteneces/perteneces.service';\nimport { CarroService } from 'src/app/shared/services/carro/carro.service';\nimport { DireccionService } from 'src/app/shared/services/direccion/direccion.service';\nimport { InvitacionService } from 'src/app/shared/services/invitacion/invitacion.service';\nimport { Usuario } from 'src/app/shared/models/Usuario';\nimport { Grupo } from 'src/app/shared/models/Grupos';\nimport { Perteneces } from 'src/app/shared/models/Perteneces';\nimport { Direccion } from 'src/app/shared/models/Direccion';\nimport { Invitacion } from 'src/app/shared/models/Invitaciones';\n\n/**\n   * Grupo Component\n */\n@Component({\n  selector: 'app-grupo',\n  templateUrl: './grupo.component.html',\n  styleUrls: ['./grupo.component.css']\n})\nexport class GrupoComponent implements OnInit {\n\n  /**\n   * El usuario es el administrador del grupo\n */\n  administrador: boolean = false;\n  /**\n   * Los usuarios del grupo\n */\n  usuarios: any = [];\n  /**\n   * @ignore\n */\n  usuariosId: any = [];\n  /**\n   * @ignore\n */\n  tempUsuarios: any;\n  /**\n   * @ignore\n */\n  pertenecesId: any;\n  /**\n   * @ignore\n */\n  usuarioModal: any;\n  /**\n   * La invitacion para pedir transporte\n */\n  invitacion: any;\n\n  /**\n * Constructor\n  * @param {CarroService} carroService El servicio para obtener los datos de los vehiculos\n  * @param {GrupoService} grupoService El servicio para manejar grupos\n  * @param {DireccionService} direccionService El servicio para obtener la direccion\n  * @param {UsuarioService} usuarioService El servicio para manejar al usuario\n  * @param {PertenecesService} pertenecesService El servicio para unir grupos con usuarios\n  * @param {InvitacionService} invitacionService El servicio para obtener las invitaciones\n */\n  constructor(private grupoService: GrupoService, private usuarioService: UsuarioService, private pertenecesService: PertenecesService, private carroService: CarroService, private direccionService: DireccionService, private invitacionService: InvitacionService) { }\n\n  /**\n   * Trae todos los detalles del grupo\n */\n  async ngOnInit() {\n    this.invitacion = new Invitacion();\n    this.usuarioModal = new Usuario();\n    await this.sleep(1000);\n    if (this.grupoService.grupo.administradorId === this.usuarioService.usuario.id) {\n      this.administrador = true;\n    }\n    await this.pertenecesService.getPerUsuarios(this.grupoService.grupo.id).subscribe(res => {\n      this.usuariosId = res;\n\n    }, err => console.log(err));\n    await this.sleep(1000);\n    console.log(this.usuariosId + \" todos los usuarios Id\")\n    for (let usuario of this.usuariosId) {\n      console.log(usuario + \" deveria ser el id\");\n      this.usuarioService.getUsuarioDetalle(usuario).subscribe(res => {\n        this.tempUsuarios = res;\n\n      }, err => console.log(err));;\n      console.log(this.tempUsuarios + \" el usuario\")\n      await this.sleep(1000);\n      this.usuarios.push(this.tempUsuarios);\n    }\n  }\n\n/**\n   * Verifica que los usuarios posean vehiculo\n */\n  conCarro(usuario: Usuario) {\n    if (usuario.carroId === null || this.usuarioService.usuario.id === usuario.id) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  /**\n   *Verifica que el usuario pueda eliminar a otros usuarios del grupo\n */\n  eliminarEnabled(usuario: Usuario) {\n    if (this.administrador) {\n      if (usuario.id === this.grupoService.grupo.administradorId) {\n        return false;\n      }\n      else {\n        return true;\n      }\n    }\n    else {\n      if (usuario.id === this.usuarioService.usuario.id) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Elimina al usuario del grupo\n */\n  async eliminar(usuario: Usuario) {\n    this.pertenecesService.getPerUsuariosGrupos(this.grupoService.grupo.id.toString(), usuario.id.toString()).subscribe(res => {\n      this.pertenecesId = res;\n    }, err => console.log(err));\n    await this.sleep(1000);\n    console.log(this.pertenecesId + \" este es el perteneces id\")\n    this.pertenecesService.deletePerteneces(this.pertenecesId);\n    await this.sleep(1000);\n  }\n\n  /**\n   * Activa el modal para pedir transporte\n */\n  async activarModal(usuario: Usuario) {\n    this.usuarioModal = usuario;\n    console.log(usuario);\n    if (usuario.direccionId !== null) {\n      this.direccionService.getDireccion(usuario.direccionId.toString());\n      await this.sleep(1000);\n    }\n    this.carroService.getCarro(usuario.carroId.toString());\n    await this.sleep(1000);\n  }\n\n  /**\n   * Envia la solicitud de trasnporte\n   * @param {NgForm} form Los datos de la solicitud a mandar\n */\n  async onSubmit(form: NgForm) {\n    console.log(true)\n    this.invitacion.usuarioId = this.usuarioService.usuario.id;\n    this.invitacion.grupoId = this.grupoService.grupo.id;\n    this.invitacion.tipo = \"invitacion\";\n    this.invitacion.descripcion = form.value.descripcion;\n    this.invitacion.usuarioExId = this.usuarioModal.id;\n    this.invitacionService.createInvitacion(this.invitacion);\n    await this.sleep(1000);\n  }\n\n/**\n   * @ignore\n */\n  async sleep(ms) {\n    ms = ms;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            {{this.grupoService.grupo.nombre}}\n          \n          \n            \n              \n                Nombre\n                Telefono\n                Correo\n                Accion\n              \n            \n            \n              \n                {{usuario.nombre}}\n                {{usuario.telefono}}\n                {{usuario.correo}}\n                \n                  Pedir Cola\n                  Eliminar\n                \n              \n\n            \n          \n\n        \n      \n    \n\n  \n\n  \n\n\n\n\n\n  \n    \n      \n        Datos del Usuario\n        \n          &times;\n        \n      \n      \n        \n          \n            \n              Direccion del Usuario\n            \n            \n            \n              Municipio: {{this.direccionService.direccion.municipio}}\n              Urbanizacion: {{this.direccionService.direccion.urbanizacion}}\n              Descripcion: {{this.direccionService.direccion.descripcion}}\n            \n            \n              Informacion del Vehiculo\n            \n            \n            \n              Placa: {{this.carroService.carro.placa}}\n              Marca: {{this.carroService.carro.marca}}\n              Modelo: {{this.carroService.carro.modelo}}\n              Año: {{this.carroService.carro.ano}}\n              Color: {{this.carroService.carro.color}}\n            \n            \n              Ingrese una descripcion\n              \n                \n              \n              \n              \n            \n            \n            \n              Pedir Cola\n              Cancelar\n            \n          \n        \n\n      \n    \n  \n\n\n\n  \n    \n      MetroUber\n      \n      \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./grupo.component.css\n                \n                .centrado {\n\n    background: #2b2b2a;\n    background-position: center;\n  }\n\n  h5{\n    text-align: center;\n  }\n\n  .sangria{\n    margin:auto 40px;\n  }\n\n  .sangriafuerte{\n    margin:auto 100px;\n  }\n\n  .unica{\nwidth: 70%;\nmargin: auto;\n  }\n\nbutton{\n  margin: 8px auto;\n  justify-content: center;\n}\n\n  .container {\n    background: #333333;\n    position: relative;\n    border: 1px solid #4e4d4d;\n    border-radius: 3px;\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    box-shadow: inset 0 0 10px #000;\n    margin: auto;\n    padding-bottom: 50px;\n  }\n  \n  .container h2 {\n    text-align: center;\n    color:black;\n    font-weight: normal;\n    font-family: 'Poppins', sans-serif;\n    margin: 5px 0px;\n  }\n  \n  .list-group {\n    margin: auto;\n  \n  }\n  \n  a {\n    margin: 1px;\n    display: inline-block;\n  }\n  \n  footer {\n    background: #2b2b2a;\n    color: rgb(226, 226, 266);\n  }\n  \n  .footer h3 {\n    text-align: left;\n    color: rgb(226, 226, 266);\n    font-weight: normal;\n    font-family: 'Poppins', sans-serif;\n    font-size: 10pt;\n    margin: 30px 0px;\n  }\n\n  .fondo{\n    background: white;\n    text-align: center;\n    color:black;\n    font-weight: normal;\n    font-family: 'Poppins', sans-serif;\n    margin: 5px 0px;\n\n  }\n\n  /* .aparte{\n    display: block;\n  } */\n\n  .espacio{\n    padding: 10px;\n    margin: 0px 2px;\n  }\n  \n  img{\n    padding: 10px;\n    display: inline-block;\n  }\n  \n  .nombre {\n    color: white;\n    margin: 8px 100px 8px 2px;\n    font-size: 17px;\n    display: inline-block;\n  }\n  \n  blockquote {\n      margin: 5px;\n      width: auto;\n      color: black;\n    }\n    \n    h2 {\n      text-align: center;\n      margin-bottom: 20px;\n      color: white;\n      padding: 20px;\n      text-transform: uppercase;\n    }\n    \n    h3 {\n      text-align: left;\n      margin-bottom: 5px;\n      color: black;\n      padding: 0px 20px;\n      text-transform: uppercase;\n    }\n    \n\n    \n    input {\n      background-color: ghostwhite;\n      display: block;\n      font-size: 15px;\n      margin: 10px 0px;\n    }\n    \n    a {\n      color: black;\n      background-color: darkgrey;\n      font-size: 17px;\n      text-decoration: none;\n      margin-top: 8px;\n      border:1px solid black;\n      border-radius: 3px;\n      padding: 8px;\n    }\n\n    .modalish{\n      display: block;\n    }\n    \n    .centrado {\n      background: #2b2b2a;\n      background-position: center;\n      font-family: 'Poppins', sans-serif;\n      align-content: center;\n      vertical-align: middle;\n    }\n    \n    .formulario {\n      align-items: center;\n      background-color:darkgray;\n      font-family: 'Poppins', sans-serif;\n      border: 1px solid black;\n      max-width: 500px;\n      border-radius: 10px;\n      width: 40%;\n      margin: auto;\n    }\n    \n    footer {\n      background: #2b2b2a;\n      color: rgb(226, 226, 266);\n    }\n    \n    .footer h3 {\n      text-align: left;\n      color: rgb(226, 226, 266);\n      font-weight: normal;\n      font-family: 'Poppins', sans-serif;\n      font-size: 10pt;\n      margin: 30px 0px;\n    }\n    \n    .centro {\n      text-align: center;\n      vertical-align: middle;\n      font-size: 8px;\n    }\n    \n    @media (max-width: 768px) {\n      form {\n        flex-direction: column;\n      }\n    \n      h2 {\n        font-size: 20px;\n      }\n    \n      p {\n        font-size: 13px;\n      }\n    \n      input {\n        font-size: 13px;\n      }\n    \n      button {\n        font-size: 13px;\n      }\n    }\n    \n    @media (max-width: 512px) {\n      form {\n        flex-direction: column;\n      }\n    \n      h2 {\n        font-size: 15px;\n        margin-bottom: 0px;\n      }\n    \n      p {\n        display: none;\n      }\n    \n      input {\n        font-size: 13px;\n        margin: 3px;\n      }\n    \n      button {\n        font-size: 10px;\n      }\n    }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{this.grupoService.grupo.nombre}}                                                              Nombre                Telefono                Correo                Accion                                                                    {{usuario.nombre}}                {{usuario.telefono}}                {{usuario.correo}}                                  Pedir Cola                  Eliminar                                                                                              Datos del Usuario                  ×                                                                Direccion del Usuario                                                  Municipio: {{this.direccionService.direccion.municipio}}              Urbanizacion: {{this.direccionService.direccion.urbanizacion}}              Descripcion: {{this.direccionService.direccion.descripcion}}                                      Informacion del Vehiculo                                                  Placa: {{this.carroService.carro.placa}}              Marca: {{this.carroService.carro.marca}}              Modelo: {{this.carroService.carro.modelo}}              Año: {{this.carroService.carro.ano}}              Color: {{this.carroService.carro.color}}                                      Ingrese una descripcion                                                                                                                          Pedir Cola              Cancelar                                                      MetroUber                                          "},"injectables/GrupoService.html":{"url":"injectables/GrupoService.html","title":"injectable - GrupoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GrupoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/grupo/grupo.service.ts\n        \n\n            \n                Description\n            \n            \n                Servicio de grupo\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grupo\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGrupo\n                            \n                            \n                                deleteGrupo\n                            \n                            \n                                getGrupo\n                            \n                            \n                                getGrupoCodigo\n                            \n                            \n                                getGrupoDetalle\n                            \n                            \n                                getGrupos\n                            \n                            \n                                getGruposAdministrador\n                            \n                            \n                                getGruposCodigo\n                            \n                            \n                                updateGrupo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/grupo/grupo.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGrupo\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGrupo(grupo: Grupo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:55\n                \n            \n\n\n            \n                \n                    Crea un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    grupo\n                                    \n                                                Grupo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El grupo a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGrupo\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGrupo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:74\n                \n            \n\n\n            \n                \n                    Elimina un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrupo\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrupo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:46\n                \n            \n\n\n            \n                \n                    Obtiene un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrupoCodigo\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrupoCodigo(codigo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:101\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un codigo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    codigo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El codigo del grupo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrupoDetalle\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrupoDetalle(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:110\n                \n            \n\n\n            \n                \n                    Obtiene al grupo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrupos\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrupos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:37\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGruposAdministrador\n                        \n                        \n                    \n                \n            \n            \n                \ngetGruposAdministrador(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:92\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un administrador\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del administrador\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGruposCodigo\n                        \n                        \n                    \n                \n            \n            \n                \ngetGruposCodigo(codigo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:83\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    codigo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El codigo del grupo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGrupo\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGrupo(grupo: Grupo, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/grupo/grupo.service.ts:65\n                \n            \n\n\n            \n                \n                    Actualiza un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    grupo\n                                    \n                                                Grupo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El grupo a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grupo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/grupo/grupo.service.ts:22\n                            \n                        \n\n                \n                    \n                        El grupo a obtener\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/grupos'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/grupo/grupo.service.ts:18\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Grupo} from '../../models/Grupos';\nimport {Observable} from 'rxjs';\n\n/**\n   * Servicio de grupo\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupoService {\n\n\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/grupos';\n  /**\n   * El grupo a obtener\n */\n  grupo: any;\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n    \n  }\n\n  /**\n   * Obtiene todos los grupos\n   * @return la respuesta del servidor\n */\n  getGrupos() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene un grupo\n   * @param {string} id El id del grupo a obtener\n   * @return la respuesta del servidor\n */\n  getGrupo(id: string){\n    return this.http.get(`${this.URL_API}/${id}`);\n  }\n\n  /**\n   * Crea un grupo\n   * @param {Grupo} grupo El grupo a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  createGrupo(grupo: Grupo) {\n    this.http.post(`${this.URL_API}`, grupo).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Actualiza un grupo\n   * @param {Grupo} grupo El grupo a actualizar\n   * @param {string} id El id del grupo a actualizar\n   * @return la respuesta del servidor\n */\n  updateGrupo(grupo: Grupo, id: string): Observable {\n    return this.http.put(`${this.URL_API}/${id}`, grupo);\n  }\n\n  /**\n   * Elimina un grupo\n   * @param {string} id El id del grupo a eliminar\n   * @return la respuesta del servidor\n */\n  deleteGrupo(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`);\n  }\n\n  /**\n   * Obtiene todos los grupos de un usuario\n   * @param {string} codigo El codigo del grupo\n   * @return la respuesta del servidor\n */\n  getGruposCodigo(codigo: string){\n    return this.http.get(`${this.URL_API}/${codigo}`).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Obtiene todos los grupos de un administrador\n   * @param {string} id El id del administrador\n   * @return la respuesta del servidor\n */\n  getGruposAdministrador(id: string){\n    return this.http.get(`${this.URL_API}/administrador/${id}`);\n  }\n\n  /**\n   * Obtiene todos los grupos de un codigo\n   * @param {string} codigo El codigo del grupo\n   * @return la respuesta del servidor\n */\n  getGrupoCodigo(codigo: string){\n    return this.http.get(`${this.URL_API}/perteneces/${codigo}`);\n  }\n\n  /**\n   * Obtiene al grupo \n   * @param {string} id El id del grupo\n   * @return la respuesta del servidor\n */\n  getGrupoDetalle(id: string){\n    return this.http.get(`${this.URL_API}/detalle/${id}`).subscribe(res => {\n      this.grupo = res;\n    }, err => console.log(err));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GruposController.html":{"url":"classes/GruposController.html","title":"class - GruposController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GruposController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/GruposController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de grupo\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getCodigos\n                            \n                            \n                                    Public\n                                    Async\n                                getGrupoCodigo\n                            \n                            \n                                    Public\n                                    Async\n                                getGrupoDetalle\n                            \n                            \n                                    Public\n                                    Async\n                                getGruposAdministrador\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:34\n                \n            \n\n\n            \n                \n                    Crea un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:43\n                \n            \n\n\n            \n                \n                    Elimina un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCodigos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCodigos(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:64\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGrupoCodigo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrupoCodigo(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:90\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un codigo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGrupoDetalle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrupoDetalle(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:103\n                \n            \n\n\n            \n                \n                    Obtiene al grupo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGruposAdministrador\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGruposAdministrador(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:80\n                \n            \n\n\n            \n                \n                    Obtiene todos los grupos de un administrador\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/GruposController.ts:54\n                \n            \n\n\n            \n                \n                    Actualiza un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n/**\n   * Controlador de grupo\n */\nclass GruposController{\n\n    /**\n   * Obtiene todos los grupos\n */\n    public async get (req: Request, res: Response){\n        const grupos=await pool.query(\"SELECT * FROM grupos\");\n        res.json(grupos);\n    }\n    \n    /**\n   * Obtiene un grupo\n   * @param {string} id El id del grupo a obtener\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const grupos=await pool.query(\"SELECT * FROM grupos WHERE id = ?\", [id]);\n        if(grupos.length>0){\n            return res.json(grupos[0]);\n        }\n        res.status(404).json({text: \"Group not found\"});\n    }\n\n    /**\n   * Crea un grupo\n   * @param {Grupo} grupo El grupo a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO grupos set ?\", [req.body]);\n        res.json({message: 'group created'});\n    }\n\n    /**\n   * Elimina un grupo\n   * @param {string} id El id del grupo a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM grupos WHERE id = ?\", [id]);\n        res.json({text: 'group deleted'});\n    }\n\n    /**\n   * Actualiza un grupo\n   * @param {Grupo} grupo El grupo a actualizar\n   * @param {string} id El id del grupo a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        await pool.query('UPDATE grupos SET ? WHERE id = ?', [req.body, id]);\n        res.json({text: \"group updated\"});\n    }\n\n      /**\n   * Obtiene todos los grupos de un usuario\n   * @param {string} codigo El codigo del grupo\n */\n    public async getCodigos(req: Request, res:Response){\n        const {codigo}=req.params;\n        const grupos=await pool.query(\"SELECT * FROM grupos WHERE codigo = ?\", [codigo]);\n        if(grupos.length>0){\n            res.send(true);\n            console.log(true);\n            return true;\n        }\n        res.send(false);\n        return false;\n    }\n\n    /**\n   * Obtiene todos los grupos de un administrador\n   * @param {string} id El id del administrador\n */\n    public async getGruposAdministrador(req: Request, res: Response){\n        const {id}=req.params;\n        const grupos=await pool.query(\"SELECT * FROM grupos WHERE administradorId = ?\", [id]);\n        res.json(grupos);\n    }\n\n      /**\n   * Obtiene todos los grupos de un codigo\n   * @param {string} codigo El codigo del grupo\n */\n    public async getGrupoCodigo(req: Request, res: Response){\n        const {codigo}=req.params;\n        const grupo=await pool.query(\"SELECT * FROM grupos WHERE codigo = ?\", [codigo]);\n        if(grupo.length>0){\n            return res.json(grupo[0].id);\n        }\n        res.status(404).json({text: \"grupo no encontrado\"});\n    }\n\n     /**\n   * Obtiene al grupo \n   * @param {string} id El id del grupo\n */\n    public async getGrupoDetalle (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const grupos=await pool.query(\"SELECT * FROM grupos WHERE id = ?\", [id]);\n        if(grupos.length>0){\n            return res.json(grupos[0]);\n        }\n        res.status(404).json({text: \"Group not found\"});\n    }\n}\n\n /**\n   * Se exporta el controlador\n */\nconst gruposController=new GruposController();\nexport default gruposController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InicioComponent.html":{"url":"components/InicioComponent.html","title":"component - InicioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InicioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/inicio/inicio.component.ts\n\n\n    \n        Description\n    \n    \n        Inicio Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inicio\n            \n\n            \n                styleUrls\n                ./inicio.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inicio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grupos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                detalles\n                            \n                            \n                                    Async\n                                getGrupos\n                            \n                            \n                                    Async\n                                grupoCodigo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grupoService: GrupoService, usuarioService: UsuarioService, pertenecesService: PertenecesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/inicio/inicio.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        grupoService\n                                                  \n                                                        \n                                                                        GrupoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar grupos\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar al usuario\n\n                                                        \n                                                \n                                                \n                                                        pertenecesService\n                                                  \n                                                        \n                                                                        PertenecesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para unir grupos con usuarios\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            detalles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detalles(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/inicio/inicio.component.ts:76\n                \n            \n\n\n            \n                \n                    Se obtiene los detalles del grupo que se selecciona\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo seleccionado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGrupos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrupos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/inicio/inicio.component.ts:51\n                \n            \n\n\n            \n                \n                    Obtiene los grupos a mostrar en pantalla\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            grupoCodigo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    grupoCodigo(grupo: Grupo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/inicio/inicio.component.ts:84\n                \n            \n\n\n            \n                \n                    Verifica que el usuario sea el administrador del grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grupo\n                                    \n                                                Grupo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grupos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/inicio/inicio.component.ts:20\n                            \n                        \n\n                \n                    \n                        Los grupos a los que pertenece el usuario\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GrupoService } from 'src/app/shared/services/grupo/grupo.service';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\nimport { Grupo } from './../../shared/models/Grupos';\nimport { PertenecesService } from 'src/app/shared/services/perteneces/perteneces.service';\n\n/**\n   * Inicio Component\n */\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  /**\n   * Los grupos a los que pertenece el usuario\n */\n  grupos: any = [];\n  /**\n   * @ignore\n */\n  gruposId: any = [];\n  /**\n   * @ignore\n */\n  tempGrupos: any;\n\n  /**\n * Constructor\n  * @param {GrupoService} grupoService El servicio para manejar grupos\n  * @param {UsuarioService} usuarioService El servicio para manejar al usuario\n  * @param {PertenecesService} pertenecesService El servicio para unir grupos con usuarios\n */\n  constructor(private grupoService: GrupoService, private usuarioService: UsuarioService, private pertenecesService: PertenecesService) {\n    console.log(this.usuarioService.usuario);\n    \n  }\n\n  /**\n   * @ignore\n */\n  async ngOnInit() {\n    await this.getGrupos();\n  }\n\n  /**\n   * Obtiene los grupos a mostrar en pantalla\n */\n  async getGrupos() {\n    \n    await this.pertenecesService.getPerGrupos(this.usuarioService.usuario.id).subscribe(res => {\n      this.gruposId = res;\n      \n    }, err => console.log(err));\n    await this.sleep(2000);\n    console.log(this.gruposId+\" todos los grupos Id\")\n    for(let grupo of this.gruposId){\n      console.log(grupo+\" deveria ser el id\");\n      this.grupoService.getGrupo(grupo).subscribe(res => {\n        this.tempGrupos = res;\n        \n      }, err => console.log(err));;\n      console.log(this.tempGrupos+\" el grupo\")\n      await this.sleep(1000);\n      this.grupos.push(this.tempGrupos);\n    }\n    console.log(this.grupos);\n  }\n\n  /**\n   * Se obtiene los detalles del grupo que se selecciona\n   * @param {number} id El id del grupo seleccionado\n */\n  async detalles(id: number){\n    console.log(id);\n    this.grupoService.getGrupoDetalle(id.toString());\n  }\n\n  /**\n   * Verifica que el usuario sea el administrador del grupo\n */\n  async grupoCodigo(grupo: Grupo){\n    console.log(this.usuarioService.usuario.id+\"+\"+grupo.administradorId);\n    if(this.usuarioService.usuario.id===grupo.administradorId){\n      console.log(\"true\")\n      return true;\n    }\n    else{\n      console.log(\"false\")\n      return false;\n    }\n  }\n\n\n  /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms=ms;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Lista de Grupos\n\n    \n      \n        \n          \n            \n            \n              {{grupo.nombre}}\n            \n            \n              {{grupo.codigo}}\n            \n            Ver Detalles\n          \n        \n      \n    \n    \n\n  \n\n  \n    \n      \n        MetroUber\n        \n        \n        \n        \n        \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./inicio.component.css\n                \n                .centrado {\n\n  background: #2b2b2a;\n  background-position: center;\n}\n\n.container {\n\n  background: #333333;\n  position: relative;\n  border: 1px solid #4e4d4d;\n  border-radius: 3px;\n  -moz-border-radius: 3px;\n  -webkit-border-radius: 3px;\n  box-shadow: inset 0 0 10px #000;\n  margin: auto;\n  padding-bottom: 50px;\n}\n\n.container h2 {\n  text-align: center;\n  color: #fff;\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  margin: 30px 0px;\n}\n\n.list-group {\n  margin: auto;\n\n}\n\na {\n  display: block;\n  position: absolute;\n  bottom: 0;\n  margin: auto;\n}\n\nfooter {\n  background: #2b2b2a;\n  color: rgb(226, 226, 266);\n}\n\n.footer h3 {\n  text-align: left;\n  color: rgb(226, 226, 266);\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  font-size: 10pt;\n  margin: 30px 0px;\n}\n\n.conaltura{\n  height: 141px;\n  margin: 10px 0px;\n  position: relative;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Lista de Grupos                                                                  {{grupo.nombre}}                                      {{grupo.codigo}}                        Ver Detalles                                                      MetroUber                                                            "},"classes/Invitacion.html":{"url":"classes/Invitacion.html","title":"class - Invitacion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invitacion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Invitaciones.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de invitacion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descripcion\n                            \n                            \n                                    Public\n                                grupoId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                tipo\n                            \n                            \n                                    Public\n                                usuarioExId\n                            \n                            \n                                    Public\n                                usuarioId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descripcion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:24\n                            \n                        \n\n                \n                    \n                        variable descripcion de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            grupoId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:16\n                            \n                        \n\n                \n                    \n                        variable grupoId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:20\n                            \n                        \n\n                \n                    \n                        variable tipo de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioExId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:28\n                            \n                        \n\n                \n                    \n                        variable usuarioExId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Invitaciones.ts:12\n                            \n                        \n\n                \n                    \n                        variable usuarioId de tipo number\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Invitacion {\n    /**\n    * variable id de tipo number\n    */\n    public id: number;\n    /**\n    * variable usuarioId de tipo number\n    */\n    public usuarioId: number;\n    /**\n    * variable grupoId de tipo number\n    */\n    public grupoId: number;\n    /**\n    * variable tipo de tipo string\n    */\n    public tipo: string;\n    /**\n    * variable descripcion de tipo string\n    */\n    public descripcion: string;\n    /**\n    * variable usuarioExId de tipo number\n    */\n    public usuarioExId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvitacionController.html":{"url":"classes/InvitacionController.html","title":"class - InvitacionController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvitacionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/InvitacionController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de invitacion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getInvitacionesUsuario\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:34\n                \n            \n\n\n            \n                \n                    Crea una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:43\n                \n            \n\n\n            \n                \n                    Elimina una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todos las invitaciones\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getInvitacionesUsuario\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInvitacionesUsuario(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:64\n                \n            \n\n\n            \n                \n                    Obtiene todos las invitaciones de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/InvitacionController.ts:54\n                \n            \n\n\n            \n                \n                    Actualiza una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n /**\n   * Controlador de invitacion\n */\nclass InvitacionController{\n\n     /**\n   * Obtiene todos las invitaciones\n */\n    public async get (req: Request, res: Response){\n        const invitaciones=await pool.query(\"SELECT * FROM invitaciones\");\n        res.json(invitaciones);\n    }\n\n    /**\n   * Obtiene una invitacion\n   * @param {string} id El id de la invitacion a obtener\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const invitaciones=await pool.query(\"SELECT * FROM invitaciones WHERE id = ?\",  [id]);\n        if(invitaciones.length>0){\n            return res.json(invitaciones[0]);\n        }\n        res.status(404).json({text: \"Invitacion no encontrada\"});\n    }\n\n    /**\n   * Crea una invitacion\n   * @param {Invitacion} invitacion La invitacion a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO invitaciones set ?\", [req.body]);\n        res.json({message: 'Invitacion creada'});\n    }\n\n    /**\n   * Elimina una invitacion\n   * @param {string} id El id de la invitacion a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM invitaciones WHERE id = ?\", [id]);\n        res.json({text: 'Invitacion eliminada'});\n    }\n\n    /**\n   * Actualiza una invitacion\n   * @param {Invitacion} invitacion La invitacion a actualizar\n   * @param {string} id El id de la invitacion a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        await pool.query('UPDATE invitaciones SET ? WHERE id = ?', [req.body, id]);\n        res.json({text: \"Invitacion actualizada\"});\n    }\n\n    /**\n   * Obtiene todos las invitaciones de un usuario\n   * @param {string} usuarioExId El id del usuario\n */\n    public async getInvitacionesUsuario (req: Request, res: Response): Promise {\n        const {usuarioExId}=req.params;\n        const invitaciones=await pool.query(\"SELECT * FROM invitaciones WHERE usuarioExId = ?\",  [usuarioExId]);\n        const invita=[];\n        console.log(\"hkjwhdhdwhd\")\n        if(invitaciones.length>0){\n            for(let inv of invitaciones){\n                console.log(inv + \" esto es pert\");\n                invita.push(inv);\n            }\n            console.log(invita+\" esto es invitaciones id\");\n            return res.json(invita);\n        }\n        res.status(404).json({text: \"Invitaciones no encontradas\"});\n    }\n    \n}\n\n/**\n   * Se exporta el controlador\n */\nconst invitacionController=new InvitacionController();\nexport default invitacionController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvitacionRoutes.html":{"url":"classes/InvitacionRoutes.html","title":"class - InvitacionRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvitacionRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/invitacionRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas de las invitaciones\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/invitacionRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/invitacionRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/invitacionRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport invitacionController  from './../controllers/InvitacionController';\n\n/**\n   * Las rutas de las invitaciones\n */\nclass InvitacionRoutes{\n    \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n     /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', invitacionController.get);\n        this.router.get('/:id', invitacionController.getOne);\n        this.router.post('/', invitacionController.create);\n        this.router.delete('/:id', invitacionController.delete);\n        this.router.put('/:id', invitacionController.update);\n        this.router.get('/solicitud/:usuarioExId', invitacionController.getInvitacionesUsuario);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst invitacionRoute= new InvitacionRoutes();\nexport default invitacionRoute.router;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitacionService.html":{"url":"injectables/InvitacionService.html","title":"injectable - InvitacionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InvitacionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/invitacion/invitacion.service.ts\n        \n\n            \n                Description\n            \n            \n                Servicio de invitacion\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invitacion\n                            \n                            \n                                invitacionId\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createInvitacion\n                            \n                            \n                                deleteInvitacion\n                            \n                            \n                                getInvitacion\n                            \n                            \n                                getInvitaciones\n                            \n                            \n                                getInvitacionesUsuario\n                            \n                            \n                                updateInvitacion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/invitacion/invitacion.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createInvitacion\n                        \n                        \n                    \n                \n            \n            \n                \ncreateInvitacion(invitacion: Invitacion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:62\n                \n            \n\n\n            \n                \n                    Crea una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    invitacion\n                                    \n                                                Invitacion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La invitacion a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInvitacion\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInvitacion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:81\n                \n            \n\n\n            \n                \n                    Elimina una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la invitacion a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInvitacion\n                        \n                        \n                    \n                \n            \n            \n                \ngetInvitacion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:50\n                \n            \n\n\n            \n                \n                    Obtiene una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la invitacion a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInvitaciones\n                        \n                        \n                    \n                \n            \n            \n                \ngetInvitaciones()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:41\n                \n            \n\n\n            \n                \n                    Obtiene todos las invitaciones\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInvitacionesUsuario\n                        \n                        \n                    \n                \n            \n            \n                \ngetInvitacionesUsuario(usuarioExId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:90\n                \n            \n\n\n            \n                \n                    Obtiene todos las invitaciones de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usuarioExId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateInvitacion\n                        \n                        \n                    \n                \n            \n            \n                \nupdateInvitacion(invitacion: Invitacion, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:72\n                \n            \n\n\n            \n                \n                    Actualiza una invitacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    invitacion\n                                    \n                                                Invitacion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La invitacion a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id de la invitacion a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invitacion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:22\n                            \n                        \n\n                \n                    \n                        Una invitacion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invitacionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:18\n                            \n                        \n\n                \n                    \n                        Id de una invitacion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/invitaciones'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/invitacion/invitacion.service.ts:26\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Invitacion} from '../../models/Invitaciones';\nimport {Observable} from 'rxjs';\n\n\n/**\n   * Servicio de invitacion\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvitacionService {\n\n  /**\n   * Id de una invitacion\n */\n  invitacionId: any;\n  /**\n   * Una invitacion\n */\n  invitacion: any;\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/invitaciones';\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n    this.invitacion=new Invitacion();\n  }\n\n  /**\n   * Obtiene todos las invitaciones\n   * @return la respuesta del servidor\n */\n  getInvitaciones() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene una invitacion\n   * @param {string} id El id de la invitacion a obtener\n   * @return la respuesta del servidor\n */\n  getInvitacion(id: string){\n    \n    return this.http.get(`${this.URL_API}/${id}`).subscribe(res => {\n      this.invitacion = res;\n    }, err => console.log(err));\n  }\n\n  /**\n   * Crea una invitacion\n   * @param {Invitacion} invitacion La invitacion a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  createInvitacion(invitacion: Invitacion) {\n    this.http.post(`${this.URL_API}`, invitacion).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Actualiza una invitacion\n   * @param {Invitacion} invitacion La invitacion a actualizar\n   * @param {string} id El id de la invitacion a actualizar\n   * @return la respuesta del servidor\n */\n  updateInvitacion(invitacion: Invitacion, id: string) {\n    this.http.put(`${this.URL_API}/${id}`, invitacion).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Elimina una invitacion\n   * @param {string} id El id de la invitacion a eliminar\n   * @return la respuesta del servidor\n */\n  deleteInvitacion(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`).subscribe(res => console.log(res), err => console.log(err));;\n  }\n\n  /**\n   * Obtiene todos las invitaciones de un usuario\n   * @param {string} usuarioExId El id del usuario\n   * @return la respuesta del servidor\n */\n  getInvitacionesUsuario(usuarioExId: string) {\n    return this.http.get(`${this.URL_API}/solicitud/${usuarioExId}`);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitacionesComponent.html":{"url":"components/InvitacionesComponent.html","title":"component - InvitacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InvitacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/invitaciones/invitaciones.component.ts\n\n\n    \n        Description\n    \n    \n        Invitaciones Componente\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitaciones\n            \n\n            \n                styleUrls\n                ./invitaciones.component.css\n            \n\n\n\n            \n                templateUrl\n                ./invitaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invitaciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                aceptar\n                            \n                            \n                                    Async\n                                activarModal\n                            \n                            \n                                    Async\n                                eliminar\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(invitacionService: InvitacionService, usuarioService: UsuarioService, grupoService: GrupoService, carroService: CarroService, direccionService: DireccionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/invitaciones/invitaciones.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        invitacionService\n                                                  \n                                                        \n                                                                        InvitacionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener las invitaciones\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar al usuario\n\n                                                        \n                                                \n                                                \n                                                        grupoService\n                                                  \n                                                        \n                                                                        GrupoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar grupos\n\n                                                        \n                                                \n                                                \n                                                        carroService\n                                                  \n                                                        \n                                                                        CarroService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener los carros\n\n                                                        \n                                                \n                                                \n                                                        direccionService\n                                                  \n                                                        \n                                                                        DireccionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener la direccion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            aceptar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aceptar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/invitaciones/invitaciones.component.ts:132\n                \n            \n\n\n            \n                \n                    Acepta un pedido de transporte\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activarModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activarModal(solicitud: Solicitud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/invitaciones/invitaciones.component.ts:113\n                \n            \n\n\n            \n                \n                    Activa el modal de los detalles de la solicitud\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    solicitud\n                                    \n                                                Solicitud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La solicitud de la cual se desea obtener mas detalles\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            eliminar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eliminar(solicitud: Solicitud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/invitaciones/invitaciones.component.ts:147\n                \n            \n\n\n            \n                \n                    Elimina una solicitud \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    solicitud\n                                    \n                                                Solicitud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La solicitud a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/invitaciones/invitaciones.component.ts:60\n                \n            \n\n\n            \n                \n                    Obtiene todas las invitaciones del usuario para mostrarlas en pantalla\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invitaciones\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/invitaciones/invitaciones.component.ts:29\n                            \n                        \n\n                \n                    \n                        Todas las invitaciones del usuario\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InvitacionService } from 'src/app/shared/services/invitacion/invitacion.service';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\nimport { GrupoService } from 'src/app/shared/services/grupo/grupo.service';\nimport { CarroService } from 'src/app/shared/services/carro/carro.service';\nimport { Solicitud } from 'src/app/shared/models/Solicitud';\nimport { Usuario } from 'src/app/shared/models/Usuario';\nimport { Grupo } from 'src/app/shared/models/Grupos';\nimport { DireccionService } from 'src/app/shared/services/direccion/direccion.service';\nimport { Invitacion } from 'src/app/shared/models/Invitaciones';\n\n/**\n   * Invitaciones Componente\n */\n@Component({\n  selector: 'app-invitaciones',\n  templateUrl: './invitaciones.component.html',\n  styleUrls: ['./invitaciones.component.css']\n})\nexport class InvitacionesComponent implements OnInit {\n\n  /**\n   * @ignore\n */\n  solicitudes: any = [];\n  /**\n   * Todas las invitaciones del usuario\n */\n  invitaciones: any = [];\n  /**\n   * @ignore\n */\n  solicitudTemporal: any;\n  /**\n   * @ignore\n */\n  usuarioTemporal: any;\n  /**\n   * @ignore\n */\n  grupoTemporal: any;\n  /**\n   * @ignore\n */\n  invitacionTemporal: any;\n\n  /**\n * Constructor\n  * @param {GrupoService} grupoService El servicio para manejar grupos\n  * @param {DireccionService} direccionService El servicio para obtener la direccion\n  * @param {UsuarioService} usuarioService El servicio para manejar al usuario\n  * @param {CarroService} carroService El servicio para obtener los carros\n  * @param {InvitacionService} invitacionService El servicio para obtener las invitaciones\n */\n  constructor(private invitacionService: InvitacionService, private usuarioService: UsuarioService, private grupoService: GrupoService, private carroService: CarroService, private direccionService: DireccionService) { }\n\n  /**\n   * Obtiene todas las invitaciones del usuario para mostrarlas en pantalla\n */\n  async ngOnInit() {\n    this.solicitudTemporal = new Solicitud();\n    this.usuarioTemporal = new Usuario();\n    this.grupoTemporal = new Grupo();\n    this.invitacionTemporal = new Invitacion();\n    this.invitacionService.getInvitacionesUsuario(this.usuarioService.usuario.id).subscribe(res => {\n      this.invitaciones = res;\n\n    }, err => console.log(err));\n    await this.sleep(500);\n    console.log(this.invitaciones);\n    for (let invitacion of this.invitaciones) {\n      this.usuarioService.getUsuarioDetalle(invitacion.usuarioId).subscribe(res => {\n        this.usuarioTemporal = res;\n\n      }, err => console.log(err));\n      await this.sleep(500);\n      this.grupoService.getGrupoDetalle(invitacion.grupoId);\n      await this.sleep(500);\n      this.solicitudes.push({\n        invitacionTipo: invitacion.tipo,\n        invitacionId: invitacion.id,\n        usuarioNombre: this.usuarioTemporal.nombre,\n        usuarioTelefono: this.usuarioTemporal.telefono,\n        usuarioCorreo: this.usuarioTemporal.correo,\n        grupoNombre: this.grupoService.grupo.nombre\n\n      });\n      /*this.solicitudTemporal.invitacionTipo = invitacion.tipo;\n      this.solicitudTemporal.invitacionId = invitacion.id;\n      this.usuarioService.getUsuarioDetalle(invitacion.usuarioId).subscribe(res => {\n        this.usuarioTemporal = res;\n\n      }, err => console.log(err));\n      await this.sleep(500);\n      this.solicitudTemporal.usuarioNombre = this.usuarioTemporal.nombre;\n      this.solicitudTemporal.usuarioTelefono = this.usuarioTemporal.telefono;\n      this.solicitudTemporal.usuarioCorreo = this.usuarioTemporal.correo;\n      this.grupoService.getGrupoDetalle(invitacion.grupoId);\n      await this.sleep(500);\n      this.solicitudTemporal.grupoNombre = this.grupoService.grupo.nombre;\n      console.log(this.solicitudTemporal);\n      this.solicitudes.push(this.solicitudTemporal);\n      console.log(this.solicitudes)*/\n    }\n    console.log(this.solicitudes)\n\n  }\n\n  /**\n   * Activa el modal de los detalles de la solicitud\n   * @param {Solicitud} solicitud La solicitud de la cual se desea obtener mas detalles\n */\n  async activarModal(solicitud: Solicitud) {\n    this.solicitudTemporal = solicitud;\n    this.invitacionService.getInvitacion(solicitud.invitacionId.toString());\n    await this.sleep(500);\n    this.usuarioService.getUsuarioDetalle(this.invitacionService.invitacion.usuarioId).subscribe(res => {\n      this.usuarioTemporal = res;\n\n    }, err => console.log(err));\n    await this.sleep(500);\n    console.log(this.usuarioTemporal);\n    this.carroService.getCarro(this.usuarioTemporal.carroId);\n    this.direccionService.getDireccion(this.usuarioTemporal.direccionId);\n    await this.sleep(500);\n\n  }\n\n  /**\n   * Acepta un pedido de transporte\n */\n  async aceptar() {\n    this.invitacionTemporal.usuarioId = this.invitacionService.invitacion.usuarioExId;\n    this.invitacionTemporal.usuarioExId = this.invitacionService.invitacion.usuarioId;\n    this.invitacionTemporal.grupoId = this.invitacionService.invitacion.grupoId;\n    this.invitacionTemporal.tipo = \"aceptacion\";\n    this.invitacionService.createInvitacion(this.invitacionTemporal);\n    await this.sleep(500);\n    this.eliminar(this.solicitudTemporal);\n  }\n\n\n  /**\n   * Elimina una solicitud \n   * @param {Solicitud} solicitud La solicitud a eliminar\n */\n  async eliminar(solicitud: Solicitud) {\n    this.invitacionService.deleteInvitacion(solicitud.invitacionId.toString());\n    await this.sleep(500);\n  }\n\n\n  /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms=ms*2;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n        \n          \n\n            Solicitudes de Cola\n          \n          \n            \n              \n                Nombre\n                Telefono\n                Correo\n                Grupo\n                Tipo\n                Accion\n              \n            \n            \n              \n                {{solicitud.usuarioNombre}}\n                {{solicitud.usuarioTelefono}}\n                {{solicitud.usuarioCorreo}}\n                {{solicitud.grupoNombre}}\n                {{solicitud.invitacionTipo}}\n                \n                  Ver Solicitud\n                  Eliminar\n                \n              \n            \n          \n\n        \n      \n    \n\n  \n\n  \n\n\n\n\n\n  \n    \n      \n        Datos del Usuario\n        \n          &times;\n        \n      \n      \n        \n          \n            \n              \n                Informacion del Usuario\n              \n              \n              \n                Nombre: {{this.usuarioTemporal.nombre}}\n                Telefono: {{this.usuarioTemporal.telefono}}\n                Correo: {{this.usuarioTemporal.correo}}\n                Cedula: {{this.usuarioTemporal.cedula}}\n                Edad: {{this.usuarioTemporal.edad}}\n              \n            \n            \n              \n                Direccion del Usuario\n              \n              \n              \n                Municipio: {{this.direccionService.direccion.municipio}}\n                Urbanizacion: {{this.direccionService.direccion.urbanizacion}}\n                Descripcion: {{this.direccionService.direccion.descripcion}}\n              \n            \n            \n              \n                Informacion del Vehiculo\n              \n              \n              \n                Placa: {{this.carroService.carro.placa}}\n                Marca: {{this.carroService.carro.marca}}\n                Modelo: {{this.carroService.carro.modelo}}\n                Año: {{this.carroService.carro.ano}}\n                Color: {{this.carroService.carro.color}}\n              \n            \n            \n              \n                Descripcion de la invitacion\n              \n              \n              \n                {{this.invitacionService.invitacion.descripcion}}\n              \n            \n            \n            \n              Aceptar\n              Eliminar\n            \n          \n        \n\n      \n    \n  \n\n\n\n  \n    \n      \n      \n      MetroUber\n      \n      \n      \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./invitaciones.component.css\n                \n                .centrado {\n\n  background: #2b2b2a;\n  background-position: center;\n}\n\n.espacio{\n  padding: 10px;\n  margin: 2px 2px;\n  display: inline-block;\n}\n\n.sangria{\n  margin:auto 40px;\n}\n\n.sangriafuerte{\n  margin:auto 100px;\n}\n\n.unica{\nwidth: 70%;\nmargin: auto;\n}\n\n.container {\n\n  background: #333333;\n  position: relative;\n  border: 1px solid #4e4d4d;\n  border-radius: 3px;\n  -moz-border-radius: 3px;\n  -webkit-border-radius: 3px;\n  box-shadow: inset 0 0 10px #000;\n  margin: auto;\n  padding-bottom: 50px;\n}\n\n.container h2 {\n  text-align: center;\n  color:black;\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  margin: 5px 0px;\n}\n\n.list-group {\n  margin: auto;\n\n}\n\na {\n  display: inline-block;\n  margin: 1px;\n}\n\nfooter {\n  background: #2b2b2a;\n  color: rgb(226, 226, 266);\n}\n\n.footer h3 {\n  text-align: left;\n  color: rgb(226, 226, 266);\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  font-size: 10pt;\n  margin: 30px 0px;\n}\n\n.fondo{\n  background: white;\n  text-align: center;\n  color:black;\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  margin: 5px 0px;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Solicitudes de Cola                                                              Nombre                Telefono                Correo                Grupo                Tipo                Accion                                                                    {{solicitud.usuarioNombre}}                {{solicitud.usuarioTelefono}}                {{solicitud.usuarioCorreo}}                {{solicitud.grupoNombre}}                {{solicitud.invitacionTipo}}                                  Ver Solicitud                  Eliminar                                                                                              Datos del Usuario                  ×                                                                                Informacion del Usuario                                                          Nombre: {{this.usuarioTemporal.nombre}}                Telefono: {{this.usuarioTemporal.telefono}}                Correo: {{this.usuarioTemporal.correo}}                Cedula: {{this.usuarioTemporal.cedula}}                Edad: {{this.usuarioTemporal.edad}}                                                                    Direccion del Usuario                                                          Municipio: {{this.direccionService.direccion.municipio}}                Urbanizacion: {{this.direccionService.direccion.urbanizacion}}                Descripcion: {{this.direccionService.direccion.descripcion}}                                                                    Informacion del Vehiculo                                                          Placa: {{this.carroService.carro.placa}}                Marca: {{this.carroService.carro.marca}}                Modelo: {{this.carroService.carro.modelo}}                Año: {{this.carroService.carro.ano}}                Color: {{this.carroService.carro.color}}                                                                    Descripcion de la invitacion                                                          {{this.invitacionService.invitacion.descripcion}}                                                                Aceptar              Eliminar                                                                  MetroUber                                                "},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                logoutUser\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, usuarioService: UsuarioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para verificar al usuario\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar al usuario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:53\n                \n            \n\n\n            \n                \n                    Verifica que el usuario este autentificado\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:60\n                \n            \n\n\n            \n                \n                    El usuario cierra sesion\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:42\n                \n            \n\n\n            \n                \n                    Ingresa el usuario a su cuenta en la aplicacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El usuario a ingresar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Para guardar al usuario que ya ingreso al sistema\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\n\n /**\n   * Login Component\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n   /**\n   * @ignore\n */\n  navbarActive: string;\n   /**\n   * Para guardar al usuario que ya ingreso al sistema\n */\n  token;\n\n  /**\n * Constructor\n  * @param {AuthService} authService El servicio para verificar al usuario\n  * @param {UsuarioService} usuarioService El servicio para manejar al usuario\n */\n  constructor(protected authService: AuthService, private usuarioService: UsuarioService) { }\n\n  /**\n   * @ignore\n */\n  ngOnInit() {\n  }\n\n  /**\n   * Ingresa el usuario a su cuenta en la aplicacion\n   * @param {NgForm} form El usuario a ingresar\n */\n  async onSubmit(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    await this.authService.signInUser(email, password);\n    await this.sleep(2000);\n    console.log(this.usuarioService.usuario+\"cambio\");\n  }\n\n  /**\n   * Verifica que el usuario este autentificado\n */\n  isAuthenticated() {\n    return this.authService.isAuthenticated();\n  }\n\n  /**\n   * El usuario cierra sesion\n */\n  logoutUser() {\n    this.authService.logoutUser();\n  }\n\n  /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms=ms;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    Inicio de Sesión\n    \n      Ingresa tu Correo Electrónico\n      \n      Ingresa tu Contraseña\n      \n    \n    \n      \n        ¿Nuevo en MetroUber?\n        Regístrate!\n      \n      \n      Iniciar Sesión\n      \n    \n  \n  \n  \n  \n  \n  \n    \n      \n        MetroUber\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                blockquote {\n  margin: auto;\n  width: auto;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: white;\n  padding: 20px;\n  text-transform: uppercase;\n}\n\np {\n  color: white;\n  width: 90%;\n  margin: 8px auto;\n  font-size: 17px;\n}\n\nbutton {\n  background: darkgrey;\n  color: black;\n  justify-content: center;\n  border-radius: 5px;\n  font-size: 17px;\n  margin: 8px auto;\n\n}\n\nbutton:hover {\n  background: darkred;\n  color: white;\n}\n\nbutton:active {\n  background: black;\n  color: white;\n}\n\ninput {\n  background-color: white;\n  border: 1px solid black;\n  border-radius: 5px;\n  display: block;\n  width: 90%;\n  margin: 8px auto;\n  font-size: 15px;\n}\n\na {\n  color: aqua;\n  font-size: 17px;\n  margin-bottom: 8px;\n}\n\n.centrado {\n  background: #2b2b2a;\n  background-position: center;\n  font-family: 'Poppins', sans-serif;\n  align-content: center;\n  vertical-align: middle;\n}\n\nform {\n  align-items: center;\n  background-color: #5d4954;\n  font-family: 'Poppins', sans-serif;\n  border: 1px solid black;\n  max-width: 500px;\n  border-radius: 10px;\n  width: 40%;\n  margin: auto;\n}\n\nfooter {\n  background: #2b2b2a;\n  color: rgb(226, 226, 266);\n}\n\n.footer h3 {\n  text-align: left;\n  color: rgb(226, 226, 266);\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  font-size: 10pt;\n  margin: 30px 0px;\n}\n\n.centro {\n  text-align: center;\n  vertical-align: middle;\n  font-size: 8px;\n}\n\n@media (max-width: 768px) {\n  form {\n    flex-direction: column;\n  }\n\n  h2 {\n    font-size: 20px;\n  }\n\n  p {\n    font-size: 13px;\n  }\n\n  input {\n    font-size: 13px;\n  }\n\n  button {\n    font-size: 13px;\n  }\n}\n\n@media (max-width: 512px) {\n  form {\n    flex-direction: column;\n  }\n\n  h2 {\n    font-size: 15px;\n    margin-bottom: 0px;\n  }\n\n  p {\n    display: none;\n  }\n\n  input {\n    font-size: 13px;\n    margin: 3px;\n  }\n\n  button {\n    font-size: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Inicio de Sesión          Ingresa tu Correo Electrónico            Ingresa tu Contraseña                            ¿Nuevo en MetroUber?        Regístrate!                  Iniciar Sesión                                        MetroUber            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GrupoComponent', 'selector': 'app-grupo'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'InvitacionesComponent', 'selector': 'app-invitaciones'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addGrupoCodigo\n                            \n                            \n                                direccion\n                            \n                            \n                                grupo\n                            \n                            \n                                invitaciones\n                            \n                            \n                                solicitudesPendientes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                onSubmit2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, grupoService: GrupoService, direccionService: DireccionService, usuarioService: UsuarioService, pertenecesService: PertenecesService, invitacionService: InvitacionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para verificar al usuario\n\n                                                        \n                                                \n                                                \n                                                        grupoService\n                                                  \n                                                        \n                                                                        GrupoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar grupos\n\n                                                        \n                                                \n                                                \n                                                        direccionService\n                                                  \n                                                        \n                                                                        DireccionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener la direccion\n\n                                                        \n                                                \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para manejar al usuario\n\n                                                        \n                                                \n                                                \n                                                        pertenecesService\n                                                  \n                                                        \n                                                                        PertenecesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para unir grupos con usuarios\n\n                                                        \n                                                \n                                                \n                                                        invitacionService\n                                                  \n                                                        \n                                                                        InvitacionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para obtener las invitaciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:96\n                \n            \n\n\n            \n                \n                    Crea un grupo nuevo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Los datos del grupo a crear\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit2(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:132\n                \n            \n\n\n            \n                \n                    El usuario se une a un grupo preexistente\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Los datos del grupo a unirse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addGrupoCodigo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:51\n                            \n                        \n\n                \n                    \n                        El codigo del grupo a unirse\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direccion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Direccion\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n                \n                    \n                        La direccion del grupo a crearse\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grupo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Grupo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                        El Grupo que se va a crear o unir\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invitaciones\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:63\n                            \n                        \n\n                \n                    \n                        Todas las invitaciones del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            solicitudesPendientes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:59\n                            \n                        \n\n                \n                    \n                        Si el usuario posee solicitudes pendientes\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { GrupoService } from '../../shared/services/grupo/grupo.service';\nimport { DireccionService } from './../../shared/services/direccion/direccion.service';\nimport { Grupo } from '../../shared/models/Grupos';\nimport { Direccion } from './../../shared/models/Direccion';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\nimport { PertenecesService } from 'src/app/shared/services/perteneces/perteneces.service';\nimport { Perteneces } from 'src/app/shared/models/Perteneces';\nimport { InvitacionService } from 'src/app/shared/services/invitacion/invitacion.service';\n\n\n/**\n   * Navbar Component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /**\n   * @ignore\n */\n  private isOpen = false;\n  /**\n   * El Grupo que se va a crear o unir\n */\n  grupo: Grupo;\n  /**\n   * La direccion del grupo a crearse\n */\n  direccion: Direccion;\n  /**\n   * @ignore\n */\n  direccionId: any;\n  /**\n   * @ignore\n */\n  perteneces: Perteneces;\n  /**\n   * @ignore\n */\n  grupoId: any;\n  /**\n   * El codigo del grupo a unirse\n */\n  addGrupoCodigo: any;\n  /**\n   * @ignore\n */\n  nuevoPerteneces: any;\n  /**\n   * Si el usuario posee solicitudes pendientes\n */\n  solicitudesPendientes: boolean = false;\n  /**\n   * Todas las invitaciones del usuario\n */\n  invitaciones: any = []\n  /**\n   * @ignore\n */\n  pertenecesExistente: any=true;\n\n  /**\n * Constructor\n  * @param {AuthService} authService El servicio para verificar al usuario\n  * @param {GrupoService} grupoService El servicio para manejar grupos\n  * @param {DireccionService} direccionService El servicio para obtener la direccion\n  * @param {UsuarioService} usuarioService El servicio para manejar al usuario\n  * @param {PertenecesService} pertenecesService El servicio para unir grupos con usuarios\n  * @param {InvitacionService} invitacionService El servicio para obtener las invitaciones\n */\n  constructor(protected authService: AuthService, private grupoService: GrupoService, private direccionService: DireccionService, private usuarioService: UsuarioService, private pertenecesService: PertenecesService, private invitacionService: InvitacionService) {\n    console.log(this.authService.token + \"hello\");\n    this.grupo = new Grupo();\n    this.direccion = new Direccion();\n    this.perteneces = new Perteneces();\n    this.nuevoPerteneces = new Perteneces();\n  }\n\n  /**\n   * @ignore\n */\n  async ngOnInit() {\n  }\n\n  /**\n   * Crea un grupo nuevo\n   * @param {NgForm} form Los datos del grupo a crear\n */\n  async onSubmit(form: NgForm) {\n    this.grupo.nombre = form.value.nombre;\n    this.grupo.codigo = Math.floor(10000000 + Math.random() * 90000000);\n    this.direccion.municipio = form.value.municipio;\n    this.direccion.descripcion = form.value.descripcion;\n    this.direccion.urbanizacion = form.value.urbanizacion;\n    await this.direccionService.createDireccion(this.direccion);\n    await this.sleep(1000);\n    await this.direccionService.getDireccionId(this.direccion.municipio, this.direccion.urbanizacion, this.direccion.descripcion).subscribe(res => {\n      this.direccionId = res;\n    }, err => console.log(err));\n    await this.sleep(1000);\n    //while(this.grupoService.getGruposCodigo(this.grupo.codigo.toString())){\n\n    //this.grupo.codigo=Math.floor(10000000 + Math.random() * 90000000);\n    //}\n    this.grupo.administradorId = this.usuarioService.usuario.id;\n    this.grupo.direccionId = this.direccionId;\n    await this.grupoService.createGrupo(this.grupo);\n    await this.sleep(1000);\n    this.grupoService.getGrupoCodigo(this.grupo.codigo.toString()).subscribe(res => {\n      this.grupoId = res;\n    }, err => console.log(err));\n    await this.sleep(1000);\n    this.perteneces.grupoId = this.grupoId;\n    console.log(this.perteneces.grupoId + \" grupo Id\");\n    this.perteneces.usuarioId = this.usuarioService.usuario.id;\n    console.log(this.perteneces.usuarioId + \" usuario Id\");\n    this.pertenecesService.createPerteneces(this.perteneces);\n    await this.sleep(1000);\n  }\n  \n  /**\n   * El usuario se une a un grupo preexistente\n   * @param {NgForm} form Los datos del grupo a unirse\n */\n  async onSubmit2(form: NgForm) {\n    this.addGrupoCodigo = form.value.nombre;\n    this.grupoService.getGrupoCodigo(this.addGrupoCodigo).subscribe(res => {\n      this.addGrupoCodigo = res;\n    }, err => console.log(err));\n    console.log(this.addGrupoCodigo + \" id del grupo a unirse\")\n    await this.sleep(1000);\n    this.pertenecesService.getPerUsuariosGruposBoolean(this.addGrupoCodigo, this.usuarioService.usuario.id).subscribe(res => {\n      this.pertenecesExistente = res;\n    }, err => console.log(err));\n    await this.sleep(1000);\n    console.log(this.pertenecesExistente);\n    if (this.pertenecesExistente) {\n      console.log(\"es cierto\");\n      this.nuevoPerteneces.usuarioId = this.usuarioService.usuario.id;\n      this.nuevoPerteneces.grupoId = this.addGrupoCodigo;\n      console.log(this.nuevoPerteneces.usuarioId + \" id del usuario a unirse\")\n      this.pertenecesService.createPerteneces(this.nuevoPerteneces);\n      await this.sleep(1000);\n    }\n    this.pertenecesExistente=true;\n\n  }\n\n  /**\n   * @ignore\n */\n  Open() {\n    this.isOpen = !this.isOpen;\n  }\n\n   /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms = ms;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n  \n    MetroUber\n  \n  \n    \n    \n    \n  \n  \n    Inicio\n    Perfil\n    Solicitudes\n    Crear Grupo\n    Unirse Grupo\n    Salir\n  \n\n\n\n\n\n  \n    \n      \n        Crear Grupo\n        \n          &times;\n        \n      \n      \n        \n          \n              Nombre del Grupo\n              \n          \n\n                Municipio\n                \n                  Baruta\n                  Sucre\n                  El Hatillo\n                \n      \n                Urbanizacion\n                \n      \n                  Descripcion\n                   \n                  \n                  \n                  \n                    Guardar Cambios\n                    Cancelar\n                  \n                \n          \n\n        \n\n      \n    \n  \n\n\n\n\n  \n    \n      \n        Unirse a Grupo\n        \n          &times;\n        \n      \n      \n        \n          \n              Código del Grupo\n              \n                  \n                  \n                  \n                    Guardar Cambios\n                    Cancelar\n                  \n          \n        \n\n      \n    \n  \n \n    \n\n    \n                \n                    ./navbar.component.css\n                \n                button{\n  display: inline-block;\n  margin: 2px;\n}\n\n.sangria{\n  margin:auto 40px;\n}\n\n.sangriafuerte{\n  margin:auto 80px;\n}\n\nnav {\n  /*Es mucho mas facil posicionr las cosas dentro de un display flex para responsive*/\n  display: flex;\n  /*Esta propiedad permite dividar los elementos dentro de un flex de diferentes maneras, este valor las divide equitativamente con espacio antes, entre y despues*/\n  justify-content: space-around;\n  /*Los centra, a los items dentro de este nav, verticalmente*/\n  align-items: center;\n  height: 8vh;\n  background-color: #5d4954;\n  font-family: 'Poppins', sans-serif;\n}\n\nnav a:hover{\n  background-color: #17b0cf;\n}\n\nul li{\n  /*Para cuando s epara el mouse encima se vea clickeable*/\n  cursor: pointer;\n}\n\n.azul{\n  color: aqua;\n  display: inline-block;\n}\n\n.logo{\n  /*El color del logo es casi blanco*/\n  /* color: rgb(226,226,266); */\n  color: orange;\n  /*Todo el logo sea en mayuscula*/\n  text-transform: uppercase;\n  /*Espacio entre las letras del logo, este si puede ser en px*/\n  letter-spacing: 5px;\n  /*Este tambien puede ser en px, en el caso del nav*/\n  font-size: 20px;\n  display: inline-block;\n}\n\n/*El ul dentro del nav tag*/\n.nav-links {\n  /*Es mucho mas facil posicionr las cosas dentro de un display flex para responsive*/\n  display: flex;\n  /*Ayuda a verificar el tamano del width cuando no se esta seguro de cuanto espacio toma*/\n  /*background-color: red;*/\n  /*Esta propiedad permite dividar los elementos dentro de un flex de diferentes maneras, este valor las divide equitativamente con espacio antes, entre y despues*/\n  justify-content: space-around;\n  /*Cuanto del tamano del nav, excluyento el espacio tomado por el resto de los elementos del nav que no son afectados por este selector, toma*/\n  width: 40%;\n  align-items: center;\n  height: 100%;\n}\n\n/*Todos los li dentro dle ul*/\n.nav-links li {\n  /*Remueve los bullet points que traen los li*/\n  list-style: none;\n}\n\n/*Todos los a tags dentro del ul*/\n.nav-links a {\n  /*El color de los nav links es casi blanco*/\n  color: rgb(226,226,266);\n  /*Quita las decoraciones que trae por ser un a tag*/\n  text-decoration: none;\n  /*Espacio entre las letras del logo, este si puede ser en px*/\n  letter-spacing: 3px;\n  font-weight: bold;\n  /*Este tambien puede ser en px, en el caso del nav*/\n  font-size: 14px;\n}\n\n/*Todo lo posterior a este punto esta relacionado a la vision movil*/\n@media screen and (min-width:769px) {\n  .burger {\n    /*Para evitar que se muestre en tamanos que no sean moviles*/\n    display: none;\n  }\n}\n/*Selecciona las lineas que forman la hamburguesa*/\n.line{\n  width: 25px;\n  height: 3px;\n  /*El color de la hamburguesa es casi blanco*/\n  background-color: rgb(226,226,266);\n  /*Distancia entre las lineas de la hamburguesa*/\n  margin: 5px;\n}\n\n/*Solo actua en tamano movil, menos de 768px*/\n@media screen and (max-width: 768px){\n  /*Hace que la nav cuando es movil se vea completa en la pantalla*/\n  nav{\n    /*Permite mover los elementos dentro de ella*/\n    position: relative;\n  }\n  \n  nav {\n    /*Es mucho mas facil posicionr las cosas dentro de un display flex para responsive*/\n    display: flex;\n    /*Esta propiedad permite dividar los elementos dentro de un flex de diferentes maneras, este valor las divide equitativamente con espacio antes, entre y despues*/\n    justify-content: space-around;\n    /*Los centra, a los items dentro de este nav, verticalmente*/\n    align-items: center;\n    height: 8vh;\n    background-color: #5d4954;\n    font-family: 'Poppins', sans-serif;\n  }\n  \n  nav a:hover{\n    background-color: #17b0cf;\n  }\n  \n  .logo{\n    /*El color del logo es casi blanco*/\n    /* color: rgb(226,226,266); */\n    color: aqua;\n    /*Todo el logo sea en mayuscula*/\n    text-transform: uppercase;\n    /*Espacio entre las letras del logo, este si puede ser en px*/\n    letter-spacing: 5px;\n    /*Este tambien puede ser en px, en el caso del nav*/\n    font-size: 20px;\n  }\n\n  .nav-links {\n    /*Mnatiene el elemento en el mismo lugar aun asi se scroll hacia abajo o arriba*/\n    position: fixed;\n    width: 100%;\n    height: 100vh !important;\n    min-height: 754px;\n    background-color: #5d4954;\n    /*Posociona los navigation links de manera vertical*/\n    flex-direction: column;\n    /*Resolver pequenos errores de css para que ocupe el height correcto*/\n    top: 0;\n    /*Permite la transicion cuando se presione la hamburguesa*/\n    clip-path: circle(100px at 90% -30%);\n    -webkit-clip-path: circle(100px at 90% -30%);\n    transition: all 1s ease-out;\n    /*Para que antes que se abra la hamburguesa los links no funcionen*/\n    pointer-events: none;\n  }\n\n  /*Para cuando se presione la hamburguesa*/\n  .nav-links.open {\n    /*Permite la transicion cuando se presione la hamburguesa*/\n    clip-path: circle(1200px at 90% -10%);\n    -webkit-clip-path: circle(1200px at 90% -10%);\n    /*Para que los links funcionen despues que se abra la hamburguesa*/\n    pointer-events: all;\n  }\n\n  .logo{\n    /*Mnatiene el elemento en el mismo lugar aun asi se scroll hacia abajo o arriba*/\n    position: fixed;\n    /*Pega el logo a arriba y a la izquierda*/\n    top: 1.5%;\n    left: 5%;\n  }\n\n  .burger {\n    /*El elemento se posiciona relativamente correspondiente a su padre en este caso el nav*/\n    position: absolute;\n    /*Para que se vea bien a la misma altura que el logo*/\n    top: 15%;\n    right: 5%;\n    /*Para cuando s epara el mouse encima se vea clickeable*/\n    cursor: pointer;\n    /*La posicion z del elemento, en este caso para que la hamburguesa se vea aun cuando los nav links ocupan el 100% del espacio cubriendo el resto del nav y la pagina*/\n    z-index: 2;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      MetroUber                        Inicio    Perfil    Solicitudes    Crear Grupo    Unirse Grupo    Salir                      Crear Grupo                  ×                                                    Nombre del Grupo                                        Municipio                                  Baruta                  Sucre                  El Hatillo                                      Urbanizacion                                        Descripcion                                                                                             Guardar Cambios                    Cancelar                                                                                    Unirse a Grupo                  ×                                                    Código del Grupo                                                                                        Guardar Cambios                    Cancelar                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GrupoComponent', 'selector': 'app-grupo'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'InvitacionesComponent', 'selector': 'app-invitaciones'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/perfil/perfil.component.ts\n\n\n    \n        Description\n    \n    \n        Perfil Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                styleUrls\n                ./perfil.component.css\n            \n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carro\n                            \n                            \n                                direccion\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                onSubmit2\n                            \n                            \n                                    Async\n                                onSubmit3\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: UsuarioService, carroService: CarroService, direccionService: DireccionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/perfil/perfil.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        UsuarioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para actualizar al usuario\n\n                                                        \n                                                \n                                                \n                                                        carroService\n                                                  \n                                                        \n                                                                        CarroService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para actualizar al carro\n\n                                                        \n                                                \n                                                \n                                                        direccionService\n                                                  \n                                                        \n                                                                        DireccionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio para actualizar la direccion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/perfil/perfil.component.ts:52\n                \n            \n\n\n            \n                \n                    Obtiene la data del usuario, carro y direccion para mostrar en pantalla\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/perfil/perfil.component.ts:74\n                \n            \n\n\n            \n                \n                    Se actualiza el usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La data para actualizar el usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit2(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/perfil/perfil.component.ts:86\n                \n            \n\n\n            \n                \n                    Se actualiza la informacion del vehiculo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La data para actualizar el carro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit3\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit3(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/perfil/perfil.component.ts:115\n                \n            \n\n\n            \n                \n                    Se actualiza la informacion de la direccion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La data para actualizar la direccion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Carro\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/perfil/perfil.component.ts:27\n                            \n                        \n\n                \n                    \n                        El carro a observar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direccion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Direccion\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/perfil/perfil.component.ts:39\n                            \n                        \n\n                \n                    \n                        La direccion a observar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usuario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Usuario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/perfil/perfil.component.ts:23\n                            \n                        \n\n                \n                    \n                        El usuario a observar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Usuario } from 'src/app/shared/models/Usuario';\nimport { UsuarioService } from 'src/app/shared/services/usuario/usuario.service';\nimport { CarroService } from 'src/app/shared/services/carro/carro.service';\nimport { Carro } from 'src/app/shared/models/Carro';\nimport { DireccionService } from 'src/app/shared/services/direccion/direccion.service';\nimport { Direccion} from 'src/app/shared/models/Direccion';\n\n\n/**\n * Perfil Component\n */\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.css']\n})\nexport class PerfilComponent implements OnInit {\n  /**\n  *El usuario a observar\n */\n  usuario: Usuario;\n  /**\n  *El carro a observar\n */\n  carro: Carro;\n  /**\n  *@ignore\n */\n  carroId: any;\n  /**\n  *@ignore\n */\n  direccionId: any;\n  /**\n  *La direccion a observar\n */\n  direccion: Direccion;\n\n/**\n * Constructor\n  * @param {UsuarioService} usuarioService El servicio para actualizar al usuario\n  * @param {CarroService} carroService El servicio para actualizar al carro\n  * @param {DireccionService} direccionService El servicio para actualizar la direccion\n */\n  constructor(private usuarioService: UsuarioService, private carroService: CarroService, private direccionService: DireccionService) { }\n\n  /**\n * Obtiene la data del usuario, carro y direccion para mostrar en pantalla\n */\n  async ngOnInit() {\n    this.usuario = new Usuario();\n    this.carro = new Carro();\n    this.direccion= new Direccion();\n    console.log(this.usuarioService.usuario);\n    this.usuario = this.usuarioService.usuario;\n    if (this.usuarioService.usuario.carroId !== null) {\n      this.carroService.getCarro(this.usuarioService.usuario.carroId);\n      await this.sleep(1000);\n      this.carro = this.carroService.carro;\n    }\n    if(this.usuarioService.usuario.direccionId !== null){\n      this.direccionService.getDireccion(this.usuarioService.usuario.direccionId);\n      await this.sleep(1000);\n      this.direccion=this.direccionService.direccion;\n    }\n  }\n\n  /**\n  * Se actualiza el usuario\n * @param {NgForm} form  La data para actualizar el usuario\n */\n  async onSubmit(form: NgForm) {\n    this.usuarioService.updateUsuario(this.usuario, this.usuarioService.usuario.id);\n    await this.sleep(1000);\n    this.usuarioService.getUsuario(this.usuario.correo);\n    await this.sleep(1000);\n    this.usuario = this.usuarioService.usuario;\n  }\n\n    /**\n   * Se actualiza la informacion del vehiculo\n * @param {NgForm} form  La data para actualizar el carro\n */\n  async onSubmit2(form: NgForm) {\n    if (this.carro.placa !== null) {\n      if (this.usuario.carroId === null) {\n        this.carroService.createCarro(this.carro);\n        await this.sleep(2000);\n        this.carroService.getCarroId(this.carro.placa).subscribe(res => {\n          this.carroId = res;\n\n        }, err => console.log(err));\n        await this.sleep(1000);\n        this.usuario.carroId = this.carroId;\n      }\n      else {\n        this.carroService.updateCarro(this.carro, this.usuario.carroId.toString());\n        await this.sleep(1000);\n      }\n      this.usuarioService.updateUsuario(this.usuario, this.usuarioService.usuario.id);\n      await this.sleep(1000);\n      this.usuarioService.getUsuario(this.usuario.correo);\n      await this.sleep(1000);\n      this.usuario = this.usuarioService.usuario;\n    }\n\n  }\n\n  /**\n   * Se actualiza la informacion de la direccion\n * @param {NgForm} form  La data para actualizar la direccion\n */\n  async onSubmit3(form: NgForm){\n    if(this.direccion.municipio !== null){\n      if(this.usuario.direccionId === null){\n        this.direccionService.createDireccion(this.direccion);\n        await this.sleep(2000);\n        this.direccionService.getDireccionId(this.direccion.municipio, this.direccion.urbanizacion, this.direccion.descripcion).subscribe(res => {\n          this.direccionId = res;\n\n        }, err => console.log(err));\n        await this.sleep(1000);\n        this.usuario.direccionId=this.direccionId;\n      }\n      else{\n        this.direccionService.updateDireccion(this.direccion, this.usuario.direccionId.toString());\n        await this.sleep(1000);\n      }\n      this.usuarioService.updateUsuario(this.usuario, this.usuarioService.usuario.id);\n      await this.sleep(1000);\n      this.usuarioService.getUsuario(this.usuario.correo);\n      await this.sleep(1000);\n      this.usuario = this.usuarioService.usuario;\n    }\n  }\n\n  /**\n   * @ignore\n */\n  async sleep(ms) {\n    ms=ms;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    {{this.usuario.nombre}}\n    Información Personal\n    \n      \n      Edad: {{this.usuario.edad}} \n      Cédula: {{this.usuario.cedula}} \n      Teléfono: {{this.usuario.telefono}} \n      Correo: {{this.usuario.correo}} \n      Editar\n    \n    Información del Vehiculo\n    \n      Placa: {{this.carro.placa}}\n      Marca: {{this.carro.marca}}\n      Modelo: {{this.carro.modelo}}\n      Color: {{this.carro.color}}\n      Año: {{this.carro.ano}}\n      Editar\n    \n    Dirección\n    \n    Municipio: {{this.direccion.municipio}}\n    Urbanizacion: {{this.direccion.urbanizacion}}\n    Descripcion: {{this.direccion.descripcion}}\n    Editar\n    \n  \n\n\n\n  \n    \n      MetroUber\n      \n    \n  \n\n\n\n\n  \n    \n      \n        Editar Información Personal\n        \n          &times;\n        \n      \n      \n        \n          \n            Nombre\n            \n            Edad\n            \n            Cedula\n            \n            Telefono\n            \n            Municipio\n            \n              Baruta\n              Sucre\n              El Hatillo\n            \n            Urbanizacion\n            \n              Descripcion\n               \n            \n            \n            Guardar Cambios\n            Cancelar\n          \n          \n        \n\n      \n    \n  \n\n\n\n\n        \n          \n            \n              Editar Información del Vehículo\n              \n                &times;\n              \n            \n            \n              \n                \n                  Placa\n                  \n                  Marca\n                  \n                  Modelo\n                  \n                  Color\n                  \n                  Año\n                  \n                  \n                  \n                  Guardar Cambios\n                  Cancelar\n                \n                \n              \n      \n            \n          \n        \n      \n\n      \n\n  \n    \n      \n        Editar Dirección\n        \n          &times;\n        \n      \n      \n        \n          \n            Municipio\n            \n              Baruta\n              Sucre\n              El Hatillo\n            \n            Urbanizacion\n            \n              Descripcion\n               \n              \n            \n            \n            Guardar Cambios\n            Cancelar\n          \n          \n        \n\n      \n    \n  \n\n      \n\n    \n\n    \n                \n                    ./perfil.component.css\n                \n                .espacio{\n  padding: 10px;\n  margin: 0px 10px;\n}\n\n.sangria{\n  margin:auto 40px;\n}\n\n.sangriafuerte{\n  margin:auto 80px;\n}\n\nimg{\n  padding: 10px;\n  display: inline-block;\n}\n\n.nombre {\n  color: white;\n  margin: 8px 100px 8px 2px;\n  font-size: 17px;\n  display: inline-block;\n}\n\nblockquote {\n    margin: 40px;\n    width: auto;\n    color: black;\n  }\n  \n  h2 {\n    text-align: center;\n    margin-bottom: 20px;\n    color: white;\n    padding: 20px;\n    text-transform: uppercase;\n  }\n  \n  h3 {\n    text-align: left;\n    margin-bottom: 5px;\n    color: black;\n    padding: 0px 20px;\n    text-transform: uppercase;\n  }\n  \n  button:hover {\n    background: darkred;\n    color: white;\n  }\n  \n  button:active {\n    background: black;\n    color: white;\n  }\n  \n  input {\n    background-color: ghostwhite;\n    display: block;\n    font-size: 15px;\n    margin: 10px 0px;\n  }\n  \n  a {\n    color: black;\n    background-color: darkgrey;\n    font-size: 17px;\n    text-decoration: none;\n    margin-top: 8px;\n    border:1px solid black;\n    border-radius: 3px;\n    padding: 8px;\n  }\n  \n  .centrado {\n    background: #2b2b2a;\n    background-position: center;\n    font-family: 'Poppins', sans-serif;\n    align-content: center;\n    vertical-align: middle;\n  }\n  \n  .formulario {\n    align-items: center;\n    background-color:darkgray;\n    font-family: 'Poppins', sans-serif;\n    border: 1px solid black;\n    max-width: 500px;\n    border-radius: 10px;\n    width: 40%;\n    margin: auto;\n  }\n  \n  footer {\n    background: #2b2b2a;\n    color: rgb(226, 226, 266);\n  }\n  \n  .footer h3 {\n    text-align: left;\n    color: rgb(226, 226, 266);\n    font-weight: normal;\n    font-family: 'Poppins', sans-serif;\n    font-size: 10pt;\n    margin: 30px 0px;\n  }\n  \n  .centro {\n    text-align: center;\n    vertical-align: middle;\n    font-size: 8px;\n  }\n  \n  @media (max-width: 768px) {\n    form {\n      flex-direction: column;\n    }\n  \n    h2 {\n      font-size: 20px;\n    }\n  \n    p {\n      font-size: 13px;\n    }\n  \n    input {\n      font-size: 13px;\n    }\n  \n    button {\n      font-size: 13px;\n    }\n  }\n  \n  @media (max-width: 512px) {\n    form {\n      flex-direction: column;\n    }\n  \n    h2 {\n      font-size: 15px;\n      margin-bottom: 0px;\n    }\n  \n    p {\n      display: none;\n    }\n  \n    input {\n      font-size: 13px;\n      margin: 3px;\n    }\n  \n    button {\n      font-size: 10px;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{this.usuario.nombre}}    Información Personal                Edad: {{this.usuario.edad}}       Cédula: {{this.usuario.cedula}}       Teléfono: {{this.usuario.telefono}}       Correo: {{this.usuario.correo}}       Editar        Información del Vehiculo          Placa: {{this.carro.placa}}      Marca: {{this.carro.marca}}      Modelo: {{this.carro.modelo}}      Color: {{this.carro.color}}      Año: {{this.carro.ano}}      Editar        Dirección        Municipio: {{this.direccion.municipio}}    Urbanizacion: {{this.direccion.urbanizacion}}    Descripcion: {{this.direccion.descripcion}}    Editar                  MetroUber                                Editar Información Personal                  ×                                                  Nombre                        Edad                        Cedula                        Telefono                        Municipio                          Baruta              Sucre              El Hatillo                        Urbanizacion                          Descripcion                                                   Guardar Cambios            Cancelar                                                                                    Editar Información del Vehículo                              ×                                                                                      Placa                                    Marca                                    Modelo                                    Color                                    Año                                                                        Guardar Cambios                  Cancelar                                                                                                                  Editar Dirección                  ×                                                  Municipio                          Baruta              Sucre              El Hatillo                        Urbanizacion                          Descripcion                                                                 Guardar Cambios            Cancelar                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GrupoComponent', 'selector': 'app-grupo'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'InvitacionesComponent', 'selector': 'app-invitaciones'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Perteneces.html":{"url":"classes/Perteneces.html","title":"class - Perteneces","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Perteneces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Perteneces.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de perteneces\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grupoId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                usuarioId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            grupoId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Perteneces.ts:16\n                            \n                        \n\n                \n                    \n                        variable grupoId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Perteneces.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Perteneces.ts:12\n                            \n                        \n\n                \n                    \n                        variable usuarioId de tipo number\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Perteneces {\n    /**\n    * variable id de tipo number\n    */\n    public id: number;\n    /**\n    * variable usuarioId de tipo number\n    */\n    public usuarioId: number;\n    /**\n    * variable grupoId de tipo number\n    */\n    public grupoId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PertenecesController.html":{"url":"classes/PertenecesController.html","title":"class - PertenecesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PertenecesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/PertenecesController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de perteneces\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                getPerGrupos\n                            \n                            \n                                    Public\n                                    Async\n                                getPerUsuarios\n                            \n                            \n                                    Public\n                                    Async\n                                getPerUsuariosGrupos\n                            \n                            \n                                    Public\n                                    Async\n                                getPerUsuariosGruposBoolean\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:34\n                \n            \n\n\n            \n                \n                    Crea un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:43\n                \n            \n\n\n            \n                \n                    Elimina un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todos los perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPerGrupos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerGrupos(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:64\n                \n            \n\n\n            \n                \n                    Obtiene todos los perteneces de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPerUsuarios\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerUsuarios(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:85\n                \n            \n\n\n            \n                \n                    Obtiene todos los usuarios de un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPerUsuariosGrupos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerUsuariosGrupos(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:107\n                \n            \n\n\n            \n                \n                    Obtiene el pertenecs de un usuario en un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPerUsuariosGruposBoolean\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerUsuariosGruposBoolean(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:124\n                \n            \n\n\n            \n                \n                    Revisa si un usaurio pertenece a un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/PertenecesController.ts:54\n                \n            \n\n\n            \n                \n                    Actualiza un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n/**\n   * Controlador de perteneces\n */\nclass PertenecesController{\n\n    /**\n   * Obtiene todos los perteneces\n */\n    public async get (req: Request, res: Response){\n        const perteneces=await pool.query(\"SELECT * FROM perteneces\");\n        res.json(perteneces);\n    }\n   \n    /**\n   * Obtiene un perteneces\n   * @param {string} id El id del perteneces a obtener\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        const perteneces=await pool.query(\"SELECT * FROM perteneces WHERE id = ?\",  [id]);\n        if(perteneces.length>0){\n            return res.json(perteneces[0]);\n        }\n        res.status(404).json({text: \"perteneces no encontrado\"});\n    }\n\n    /**\n   * Crea un perteneces\n   * @param {Perteneces} perteneces El perteneces a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO perteneces set ?\", [req.body]);\n        res.json({message: 'perteneces creado'});\n    }\n\n     /**\n   * Elimina un perteneces\n   * @param {string} id El id del perteneces a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM perteneces WHERE id = ?\", [id]);\n        res.json({text: 'perteneces eliminado'});\n    }\n\n     /**\n   * Actualiza un perteneces\n   * @param {Perteneces} perteneces El perteneces a actualizar\n   * @param {string} id El id del perteneces a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        await pool.query('UPDATE perteneces SET ? WHERE id = ?', [req.body, id]);\n        res.json({text: \"perteneces actualizado\"});\n    }\n  \n    /**\n   * Obtiene todos los perteneces de un usuario\n   * @param {string} usuarioId El id del usuario\n */\n    public async getPerGrupos (req: Request, res: Response): Promise {\n        const {usuarioId}=req.params;\n        \n        const perteneces=await pool.query(\"SELECT * FROM perteneces WHERE usuarioId = ?\", [usuarioId]);\n        const gruposId=[];\n        console.log(perteneces+\" esto es perteneces\")\n        if(perteneces.length>0){\n            for(let pert of perteneces){\n                console.log(pert + \" esto es pert\");\n                gruposId.push(pert.grupoId);\n            }\n            console.log(gruposId+\" esto es grupos id\");\n            return res.json(gruposId);\n        }\n        res.status(404).json({text: \"perteneces no encontrado\"});\n    }\n\n    /**\n   * Obtiene todos los usuarios de un grupo\n   * @param {string} grupoId El id del grupo\n */\n    public async getPerUsuarios (req: Request, res: Response): Promise {\n        const {grupoId}=req.params;\n        console.log(grupoId+\"hiodhioqhdhwhda\");\n        const perteneces=await pool.query(\"SELECT * FROM perteneces WHERE grupoId = ?\", [grupoId]);\n        const usuariosId=[];\n        console.log(perteneces+\" esto es perteneces\")\n        if(perteneces.length>0){\n            for(let pert of perteneces){\n                console.log(pert + \" esto es pert\");\n                usuariosId.push(pert.usuarioId);\n            }\n            console.log(usuariosId+\" esto es usuarios id\");\n            return res.json(usuariosId);\n        }\n        res.status(404).json({text: \"perteneces no encontrado\"});\n    }\n\n    /**\n   * Obtiene el pertenecs de un usuario en un grupo\n   * @param {string} grupoId El id del grupo\n   * @param {string} usuarioId El id del usuario\n */\n    public async getPerUsuariosGrupos (req: Request, res: Response): Promise {\n        const {grupoId}=req.params;\n        const {usuarioId}=req.params;\n        console.log(grupoId+\"hiodhioqhdhwhda\");\n        const perteneces=await pool.query(\"SELECT * FROM perteneces WHERE grupoId = ? AND usuarioId = ?\", [grupoId, usuarioId]);\n        if(perteneces.length>0){\n            return res.json(perteneces[0].id);\n        }\n        res.status(404).json({text: \"perteneces no encontrado\"});\n    }\n\n     /**\n   * Revisa si un usaurio pertenece a un grupo\n   * @param {string} grupoId El id del grupo\n   * @param {string} usuarioId El id del usuario\n   * @return la respuesta del servidor\n */\n    public async getPerUsuariosGruposBoolean (req: Request, res: Response): Promise {\n        const {grupoId}=req.params;\n        const {usuarioId}=req.params;\n        console.log(grupoId+\"hiodhioqhdhwhda\");\n        const perteneces=await pool.query(\"SELECT * FROM perteneces WHERE grupoId = ? AND usuarioId = ?\", [grupoId, usuarioId]);\n        if(perteneces.length>0){\n            return res.json(false);\n        }\n        res.status(404).json({text: \"perteneces no encontrado\"});\n    }\n}\n\n /**\n   * Exporta el controlador\n */\nconst pertenecesController=new PertenecesController();\nexport default pertenecesController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PertenecesRoutes.html":{"url":"classes/PertenecesRoutes.html","title":"class - PertenecesRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PertenecesRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/pertenecesRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas del pertences\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/pertenecesRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/pertenecesRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/pertenecesRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport pertenecesController  from './../controllers/PertenecesController';\n\n/**\n   * Las rutas del pertences\n */\nclass PertenecesRoutes{\n    \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n     /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', pertenecesController.get);\n        this.router.get('/:id', pertenecesController.getOne);\n        this.router.post('/', pertenecesController.create);\n        this.router.delete('/:id', pertenecesController.delete);\n        this.router.put('/:id', pertenecesController.update);\n        this.router.get('/perGrupos/:usuarioId', pertenecesController.getPerGrupos);\n        this.router.get('/perUsuarios/:grupoId', pertenecesController.getPerUsuarios);\n        this.router.get('/perteneces/:grupoId/:usuarioId', pertenecesController.getPerUsuariosGrupos);\n        this.router.get('/perteneces/boolean/:grupoId/:usuarioId', pertenecesController.getPerUsuariosGruposBoolean);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst pertenecesRoute= new PertenecesRoutes();\nexport default pertenecesRoute.router;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PertenecesService.html":{"url":"injectables/PertenecesService.html","title":"injectable - PertenecesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PertenecesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/perteneces/perteneces.service.ts\n        \n\n            \n                Description\n            \n            \n                Perteneces Servicio\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                perteneces\n                            \n                            \n                                URL_API\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPerteneces\n                            \n                            \n                                deletePerteneces\n                            \n                            \n                                getPerGrupos\n                            \n                            \n                                    Async\n                                getPerteneces\n                            \n                            \n                                getPerUsuarios\n                            \n                            \n                                getPerUsuariosGrupos\n                            \n                            \n                                getPerUsuariosGruposBoolean\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                updatePerteneces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/perteneces/perteneces.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPerteneces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPerteneces(perteneces: Perteneces)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:57\n                \n            \n\n\n            \n                \n                    Crea un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    perteneces\n                                    \n                                                Perteneces\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El perteneces a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePerteneces\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePerteneces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:76\n                \n            \n\n\n            \n                \n                    Elimina un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del perteneces a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPerGrupos\n                        \n                        \n                    \n                \n            \n            \n                \ngetPerGrupos(usuarioId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:85\n                \n            \n\n\n            \n                \n                    Obtiene todos los perteneces de un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usuarioId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPerteneces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerteneces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:46\n                \n            \n\n\n            \n                \n                    Obtiene un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del perteneces a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPerUsuarios\n                        \n                        \n                    \n                \n            \n            \n                \ngetPerUsuarios(grupoId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:94\n                \n            \n\n\n            \n                \n                    Obtiene todos los usuarios de un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    grupoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPerUsuariosGrupos\n                        \n                        \n                    \n                \n            \n            \n                \ngetPerUsuariosGrupos(grupoId: string, usuarioId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:104\n                \n            \n\n\n            \n                \n                    Obtiene el pertenecs de un usuario en un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    grupoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo\n\n                                    \n                                \n                                \n                                    usuarioId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPerUsuariosGruposBoolean\n                        \n                        \n                    \n                \n            \n            \n                \ngetPerUsuariosGruposBoolean(grupoId: string, usuarioId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:114\n                \n            \n\n\n            \n                \n                    Revisa si un usaurio pertenece a un grupo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    grupoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del grupo\n\n                                    \n                                \n                                \n                                    usuarioId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsuarios\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:37\n                \n            \n\n\n            \n                \n                    Obtiene todos los perteneces\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePerteneces\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePerteneces(perteneces: Perteneces, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:67\n                \n            \n\n\n            \n                \n                    Actualiza un perteneces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    perteneces\n                                    \n                                                Perteneces\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El perteneces a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del perteneces a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            perteneces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:18\n                            \n                        \n\n                \n                    \n                        Un perteneces\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/perteneces'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/perteneces/perteneces.service.ts:22\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Perteneces} from '../../models/Perteneces';\nimport {Observable} from 'rxjs';\n\n\n/**\n   * Perteneces Servicio\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PertenecesService {\n\n  /**\n   * Un perteneces\n */\n  perteneces: any;\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/perteneces';\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n   \n  }\n\n  /**\n   * Obtiene todos los perteneces\n   * @return la respuesta del servidor\n */\n  getUsuarios() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene un perteneces\n   * @param {string} id El id del perteneces a obtener\n   * @return la respuesta del servidor\n */\n  async getPerteneces(id: string){\n    return this.http.get(`${this.URL_API}/${id}`).subscribe(res => {\n      this.perteneces = res;\n    }, err => console.log(err));\n  }\n\n  /**\n   * Crea un perteneces\n   * @param {Perteneces} perteneces El perteneces a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  async createPerteneces(perteneces: Perteneces) {\n    this.http.post(`${this.URL_API}`, perteneces).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Actualiza un perteneces\n   * @param {Perteneces} perteneces El perteneces a actualizar\n   * @param {string} id El id del perteneces a actualizar\n   * @return la respuesta del servidor\n */\n  updatePerteneces(perteneces: Perteneces, id: string): Observable {\n    return this.http.put(`${this.URL_API}/${id}`, perteneces);\n  }\n\n  /**\n   * Elimina un perteneces\n   * @param {string} id El id del perteneces a eliminar\n   * @return la respuesta del servidor\n */\n  deletePerteneces(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`).subscribe(res => console.log(res), err => console.log(err));;\n  }\n\n  /**\n   * Obtiene todos los perteneces de un usuario\n   * @param {string} usuarioId El id del usuario\n   * @return la respuesta del servidor\n */\n  getPerGrupos(usuarioId: string){\n    return this.http.get(`${this.URL_API}/perGrupos/${usuarioId}`);\n  }\n\n  /**\n   * Obtiene todos los usuarios de un grupo\n   * @param {string} grupoId El id del grupo\n   * @return la respuesta del servidor\n */\n  getPerUsuarios(grupoId: string){\n    return this.http.get(`${this.URL_API}/perUsuarios/${grupoId}`);\n  }\n\n  /**\n   * Obtiene el pertenecs de un usuario en un grupo\n   * @param {string} grupoId El id del grupo\n   * @param {string} usuarioId El id del usuario\n   * @return la respuesta del servidor\n */\n  getPerUsuariosGrupos(grupoId: string, usuarioId: string){\n    return this.http.get(`${this.URL_API}/perteneces/${grupoId}/${usuarioId}`);\n  }\n\n  /**\n   * Revisa si un usaurio pertenece a un grupo\n   * @param {string} grupoId El id del grupo\n   * @param {string} usuarioId El id del usuario\n   * @return la respuesta del servidor\n */\n  getPerUsuariosGruposBoolean(grupoId: string, usuarioId: string){\n    return this.http.get(`${this.URL_API}/perteneces/boolean/${grupoId}/${usuarioId}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistroComponent.html":{"url":"components/RegistroComponent.html","title":"component - RegistroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registro/registro.component.ts\n\n\n    \n        Description\n    \n    \n        Registro Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registro\n            \n\n            \n                styleUrls\n                ./registro.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registro.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registro/registro.component.ts:20\n                            \n                        \n\n                \n                    \n                            Crea un nuevo usuario para ser usado en la aplicacion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El servicio de registro\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registro/registro.component.ts:34\n                \n            \n\n\n            \n                \n                    NgOnInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registro/registro.component.ts:43\n                \n            \n\n\n            \n                \n                    Se registra un nuevo usuario en la aplicacion\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La data del usuario a registrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        El usuario registrado\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usuario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Usuario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/registro/registro.component.ts:20\n                            \n                        \n\n                \n                    \n                        Es el usuario que se va a crear en el componente\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport {Usuario} from '../../shared/models/Usuario';\n\n/**\n * Registro Component\n */\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n   /**\n * Es el usuario que se va a crear en el componente\n */\n usuario: Usuario;\n\n\n   /**\n    * Crea un nuevo usuario para ser usado en la aplicacion\n * @param {AuthService} authService El servicio de registro\n */\n  constructor(protected authService: AuthService) {\n      this.usuario=new Usuario();\n   }\n\n  /**\n * NgOnInit\n */\n  ngOnInit() {\n  }\n\n\n  /**\n   *  Se registra un nuevo usuario en la aplicacion\n * @param {NgForm} form  La data del usuario a registrar\n * @returns El usuario registrado\n */\n  async onSubmit(form: NgForm){\n    const password1=form.value.password;\n    const password2=form.value.password2;\n    this.usuario.correo=form.value.email;\n    const correo=form.value.email;\n    this.usuario.telefono=form.value.phone;\n    this.usuario.nombre=form.value.username;\n    this.usuario.cedula=form.value.cedula;\n    this.usuario.edad=form.value.age;\n    console.log(\"hello\");\n    if(password1 === password2){\n      console.log(\"hello\");\n      await this.authService.signUpUser(this.usuario, password1);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    Regístrate!\n    \n      Ingresa tu Nombre de Usuario\n      \n        Ingresa tu Edad\n      \n        Ingresa tu Cedula\n      \n        Ingresa tu telefono\n        \n      Ingresa tu Correo Electronico\n      \n      Ingresa tu Contraseña\n      \n      Repite tu Contraseña\n      \n    \n    \n      \n        ¿Ya tienes un Usuario?\n        Inicia Sesión!\n        \n      \n      \n      Registrarse\n    \n  \n  \n    \n      \n        MetroUber\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./registro.component.css\n                \n                blockquote {\n  margin: auto;\n  width: auto;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: white;\n  padding: 20px;\n  text-transform: uppercase;\n}\n\np {\n  color: white;\n  width: 90%;\n  margin: 8px auto;\n  font-size: 17px;\n}\n\nbutton {\n    background: darkgrey;\n    color: black;\n    justify-content: center;\n    border-radius: 5px;\n    font-size: 17px;\n    margin: 8px auto;\n  \n  }\n  \n  button:hover {\n    background: darkred;\n    color: white;\n  }\n  \n  button:active {\n    background: black;\n    color: white;\n  }\n\ninput {\n  background-color: white;\n  border: 1px solid black;\n  border-radius: 5px;\n  display: block;\n  width: 90%;\n  margin: 8px auto;\n  font-size: 15px;\n}\n\na {\n  color: aqua;\n  font-size: 17px;\n  margin-bottom: 8px;\n}\n\n.centrado {\n  background: #2b2b2a;\n  background-position: center;\n  font-family: 'Poppins', sans-serif;\n  align-content: center;\n  vertical-align: middle;\n}\n\nform {\n  align-items: center;\n  background-color: #5d4954;\n  font-family: 'Poppins', sans-serif;\n  border: 1px solid black;\n  max-width: 500px;\n  border-radius: 10px;\n  width: 40%;\n  margin: auto;\n}\n\nfooter {\n  background: #2b2b2a;\n  color: rgb(226, 226, 266);\n}\n\n.footer h3 {\n  text-align: left;\n  color: rgb(226, 226, 266);\n  font-weight: normal;\n  font-family: 'Poppins', sans-serif;\n  font-size: 10pt;\n  margin: 30px 0px;\n}\n\n.centro {\n  text-align: center;\n  vertical-align: middle;\n  font-size: 8px;\n}\n\n@media (max-width: 768px) {\n  form {\n    flex-direction: column;\n  }\n\n  h2 {\n    font-size: 20px;\n  }\n\n  p {\n    font-size: 13px;\n  }\n\n  input {\n    font-size: 13px;\n  }\n\n  button {\n    font-size: 13px;\n  }\n}\n\n@media (max-width: 512px) {\n  form {\n    flex-direction: column;\n  }\n\n  h2 {\n    font-size: 15px;\n    margin-bottom: 0px;\n  }\n\n  p {\n    display: none;\n  }\n\n  input {\n    font-size: 13px;\n    margin: 3px;\n  }\n\n  button {\n    font-size: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Regístrate!          Ingresa tu Nombre de Usuario              Ingresa tu Edad              Ingresa tu Cedula              Ingresa tu telefono              Ingresa tu Correo Electronico            Ingresa tu Contraseña            Repite tu Contraseña                            ¿Ya tienes un Usuario?        Inicia Sesión!                          Registrarse                          MetroUber            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GrupoComponent', 'selector': 'app-grupo'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'InvitacionesComponent', 'selector': 'app-invitaciones'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/base.ts\n        \n\n            \n                Description\n            \n            \n                Clase de servidor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                routes\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/base.ts:20\n                            \n                        \n\n                \n                    \n                            Construye el servidor del backend\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Application\n\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/base.ts:20\n                            \n                        \n\n                \n                    \n                        variable app de tipo Application\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/base.ts:34\n                \n            \n\n\n            \n                \n                    Configura el servidor del backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routes\n                        \n                        \n                    \n                \n            \n            \n                \nroutes()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/base.ts:45\n                \n            \n\n\n            \n                \n                    Carga todas las rutas a utilizar por el backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/base.ts:59\n                \n            \n\n\n            \n                \n                    Inicia el servidor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import express from 'express' \nimport morgan from 'morgan';\nimport cors from 'cors';\nimport { Application} from 'express';\nimport baseRoutes from './routes/UsuarioRoutes';\nimport groupRoutes from './routes/groupRoutes';\nimport direccionRoutes from './routes/direccionRoutes';\nimport pertenecesRoutes from './routes/pertenecesRoutes';\nimport carroRoutes from './routes/carroRoutes';\nimport invitacionRoutes from './routes/invitacionRoutes';\n\n/**\n* Clase de servidor\n*/\nclass Server {\n\n    /**\n    * variable app de tipo Application\n    */\n    public app: Application;\n\n    /**\n    * Construye el servidor del backend\n    */\n    constructor(){\n        this.app=express();\n        this.config();\n        this.routes();\n    }\n\n    /**\n    * Configura el servidor del backend\n    */\n    config(): void{\n        this.app.set('port', process.env.PORT || 3000);\n        this.app.use(morgan('dev'));\n        this.app.use(cors());\n        this.app.use(express.json());\n        this.app.use(express.urlencoded({extended: false}));\n    }\n\n    /**\n    * Carga todas las rutas a utilizar por el backend\n    */\n    routes(): void{\n        this.app.use('/api/usuarios', baseRoutes);\n        this.app.use('/api/grupos', groupRoutes);\n        this.app.use('/api/direcciones', direccionRoutes);\n        this.app.use('/api/perteneces', pertenecesRoutes);\n        this.app.use('/api/carros', carroRoutes);\n        this.app.use('/api/invitaciones', invitacionRoutes);\n\n        \n    }\n\n    /**\n    * Inicia el servidor\n    */\n    start(): void{\n        this.app.listen(this.app.get('port'), () => {\n            console.log('hello');\n        });\n    }\n}\n\n/**\n* Crea el servidor y lo inicia\n*/\nconst server=new Server();\nserver.start();\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Solicitud.html":{"url":"classes/Solicitud.html","title":"class - Solicitud","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Solicitud\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Solicitud.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de solicitud\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grupoNombre\n                            \n                            \n                                    Public\n                                invitacionId\n                            \n                            \n                                    Public\n                                invitacionTipo\n                            \n                            \n                                    Public\n                                usuarioCorreo\n                            \n                            \n                                    Public\n                                usuarioNombre\n                            \n                            \n                                    Public\n                                usuarioTelefono\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            grupoNombre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:24\n                            \n                        \n\n                \n                    \n                        variable grupoNombre de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            invitacionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:8\n                            \n                        \n\n                \n                    \n                        variable invitacionId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            invitacionTipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:28\n                            \n                        \n\n                \n                    \n                        variable invitacionTipo de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioCorreo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:20\n                            \n                        \n\n                \n                    \n                        variable usuarioCorreo de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioNombre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:12\n                            \n                        \n\n                \n                    \n                        variable usuarioNombre de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioTelefono\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Solicitud.ts:16\n                            \n                        \n\n                \n                    \n                        variable usuarioTelefono de tipo number\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Solicitud {\n    /**\n    * variable invitacionId de tipo number\n    */\n    public invitacionId: number;\n    /**\n    * variable usuarioNombre de tipo string\n    */\n    public usuarioNombre: string;\n    /**\n    * variable usuarioTelefono de tipo number\n    */\n    public usuarioTelefono: number;\n    /**\n    * variable usuarioCorreo de tipo string\n    */\n    public usuarioCorreo: string;\n    /**\n    * variable grupoNombre de tipo string\n    */\n    public grupoNombre: string;\n    /**\n    * variable invitacionTipo de tipo string\n    */\n    public invitacionTipo: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Usuario.html":{"url":"classes/Usuario.html","title":"class - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/Usuario.ts\n        \n\n            \n                Description\n            \n            \n                Modelo de usuario\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                carroId\n                            \n                            \n                                    Public\n                                cedula\n                            \n                            \n                                    Public\n                                correo\n                            \n                            \n                                    Public\n                                direccionId\n                            \n                            \n                                    Public\n                                edad\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                nombre\n                            \n                            \n                                    Public\n                                telefono\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            carroId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:16\n                            \n                        \n\n                \n                    \n                        variable carroId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cedula\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:24\n                            \n                        \n\n                \n                    \n                        variable cedula de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            correo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:36\n                            \n                        \n\n                \n                    \n                        variable correo de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            direccionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:32\n                            \n                        \n\n                \n                    \n                        variable direccionId de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edad\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:20\n                            \n                        \n\n                \n                    \n                        variable edad de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:8\n                            \n                        \n\n                \n                    \n                        variable id de tipo number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nombre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:12\n                            \n                        \n\n                \n                    \n                        variable nombre de tipo string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            telefono\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/Usuario.ts:28\n                            \n                        \n\n                \n                    \n                        variable telefono de tipo string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Usuario {\n    /**\n    * variable id de tipo number\n    */\n    public id: number;\n    /**\n    * variable nombre de tipo string\n    */\n    public nombre: string;\n    /**\n    * variable carroId de tipo number\n    */\n    public carroId: number;\n    /**\n    * variable edad de tipo string\n    */\n    public edad: string;\n    /**\n    * variable cedula de tipo string\n    */\n    public cedula: string;\n    /**\n    * variable telefono de tipo string\n    */\n    public telefono: string;\n    /**\n    * variable direccionId de tipo number\n    */\n    public direccionId: number;\n    /**\n    * variable correo de tipo string\n    */\n    public correo: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuarioService.html":{"url":"injectables/UsuarioService.html","title":"injectable - UsuarioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsuarioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/usuario/usuario.service.ts\n        \n\n            \n                Description\n            \n            \n                Usuario Servicio\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                URL_API\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUsuario\n                            \n                            \n                                deleteUsuario\n                            \n                            \n                                    Async\n                                getUsuario\n                            \n                            \n                                getUsuarioDetalle\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                updateUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/usuario/usuario.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Conectar con el backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUsuario\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUsuario(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:57\n                \n            \n\n\n            \n                \n                    Crea un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El usuario a crear en la base de datos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUsuario\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUsuario(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:76\n                \n            \n\n\n            \n                \n                    Elimina un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsuario\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsuario(correo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:46\n                \n            \n\n\n            \n                \n                    Obtiene un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El correo dle usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsuarioDetalle\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsuarioDetalle(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:85\n                \n            \n\n\n            \n                \n                    Obtiene un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario a obtener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsuarios\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:37\n                \n            \n\n\n            \n                \n                    Obtiene todos los usuarios\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUsuario\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUsuario(usuario: Usuario, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/usuario/usuario.service.ts:67\n                \n            \n\n\n            \n                \n                    Actualiza un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El usuario a actualizar\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El id del usuario a actualizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        la respuesta del servidor\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            URL_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api/usuarios'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/usuario/usuario.service.ts:22\n                            \n                        \n\n                \n                    \n                        La direccion a donde hacer los pedidos al backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usuario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/usuario/usuario.service.ts:18\n                            \n                        \n\n                \n                    \n                        Un usuario\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Usuario} from '../../models/Usuario';\nimport {Observable} from 'rxjs';\n\n\n/**\n   * Usuario Servicio\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  /**\n   * Un usuario\n */\n  usuario: any;\n  /**\n   * La direccion a donde hacer los pedidos al backend\n */\n  URL_API = 'http://localhost:3000/api/usuarios';\n\n\n   /**\n * Constructor\n  * @param {HttpClient} http Conectar con el backend\n */\n  constructor(private http: HttpClient) { \n   \n  }\n\n  /**\n   * Obtiene todos los usuarios\n   * @return la respuesta del servidor\n */\n  getUsuarios() {\n    return this.http.get(`${this.URL_API}`);\n  }\n\n  /**\n   * Obtiene un usuario\n   * @param {string} correo El correo dle usuario\n   * @return la respuesta del servidor\n */\n  async getUsuario(correo: string){\n    return this.http.get(`${this.URL_API}/${correo}`).subscribe(res => {\n      this.usuario = res;\n    }, err => console.log(err));\n  }\n\n  /**\n   * Crea un usuario\n   * @param {Usuairo} usuario El usuario a crear en la base de datos\n   * @return la respuesta del servidor\n */\n  async createUsuario(usuario: Usuario) {\n    this.http.post(`${this.URL_API}`, usuario).subscribe(res => console.log(res), err => console.log(err));\n  }\n\n  /**\n   * Actualiza un usuario\n   * @param {Usuario} usuario El usuario a actualizar\n   * @param {string} id El id del usuario a actualizar\n   * @return la respuesta del servidor\n */\n  updateUsuario(usuario: Usuario, id: string){\n    return this.http.put(`${this.URL_API}/${id}`, usuario).subscribe(res => console.log(res), err => console.log(err));;\n  }\n\n  /**\n   * Elimina un usuario\n   * @param {string} id El id del usuario a eliminar\n   * @return la respuesta del servidor\n */\n  deleteUsuario(id: string){\n    return this.http.delete(`${this.URL_API}/${id}`);\n  }\n\n  /**\n   * Obtiene un usuario\n   * @param {string} id El id del usuario a obtener\n   * @return la respuesta del servidor\n */\n  getUsuarioDetalle(id: string){\n    return this.http.get(`${this.URL_API}/detalle/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/baseRoutes.html":{"url":"classes/baseRoutes.html","title":"class - baseRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  baseRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/UsuarioRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas del usuario\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/UsuarioRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/UsuarioRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/UsuarioRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport usuariosController  from '../controllers/usuarioController';\n\n/**\n   * Las rutas del usuario\n */\nclass baseRoutes{\n    \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n     /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', usuariosController.get);\n        this.router.get('/:correo', usuariosController.getOne);\n        this.router.post('/', usuariosController.create);\n        this.router.delete('/:id', usuariosController.delete);\n        this.router.put('/:id', usuariosController.update);\n        this.router.get('/detalle/:id', usuariosController.getUsuarioDetalle);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst usuarioRoutes= new baseRoutes();\nexport default usuarioRoutes.router;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/grupo/grupo.component.ts\n            \n            component\n            GrupoComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/inicio/inicio.component.ts\n            \n            component\n            InicioComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/invitaciones/invitaciones.component.ts\n            \n            component\n            InvitacionesComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/registro/registro.component.ts\n            \n            component\n            RegistroComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/Carro.ts\n            \n            class\n            Carro\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/Direccion.ts\n            \n            class\n            Direccion\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/Grupos.ts\n            \n            class\n            Grupo\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/Invitaciones.ts\n            \n            class\n            Invitacion\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/Perteneces.ts\n            \n            class\n            Perteneces\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/Solicitud.ts\n            \n            class\n            Solicitud\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/Usuario.ts\n            \n            class\n            Usuario\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/services/authGuard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/carro/carro.service.ts\n            \n            injectable\n            CarroService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/direccion/direccion.service.ts\n            \n            injectable\n            DireccionService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/grupo/grupo.service.ts\n            \n            injectable\n            GrupoService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/invitacion/invitacion.service.ts\n            \n            injectable\n            InvitacionService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/perteneces/perteneces.service.ts\n            \n            injectable\n            PertenecesService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/usuario/usuario.service.ts\n            \n            injectable\n            UsuarioService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/back-end/base.ts\n            \n            class\n            Server\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/back-end/base.ts\n            \n            variable\n            server\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/CarroController.ts\n            \n            class\n            CarroController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/back-end/controllers/CarroController.ts\n            \n            variable\n            carroController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/DireccionController.ts\n            \n            class\n            DireccionController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/back-end/controllers/DireccionController.ts\n            \n            variable\n            direccionController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/GruposController.ts\n            \n            class\n            GruposController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/back-end/controllers/GruposController.ts\n            \n            variable\n            gruposController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/InvitacionController.ts\n            \n            class\n            InvitacionController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/back-end/controllers/InvitacionController.ts\n            \n            variable\n            invitacionController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/PertenecesController.ts\n            \n            class\n            PertenecesController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/back-end/controllers/PertenecesController.ts\n            \n            variable\n            pertenecesController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/controllers/usuarioController.ts\n            \n            class\n            usuarioController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/back-end/controllers/usuarioController.ts\n            \n            variable\n            usuariosController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/database.ts\n            \n            variable\n            pool\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/UsuarioRoutes.ts\n            \n            class\n            baseRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/UsuarioRoutes.ts\n            \n            variable\n            usuarioRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/carroRoutes.ts\n            \n            class\n            CarroRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/carroRoutes.ts\n            \n            variable\n            carroRoute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/direccionRoutes.ts\n            \n            class\n            DireccionRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/direccionRoutes.ts\n            \n            variable\n            direccionRoute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/groupRoutes.ts\n            \n            class\n            groupRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/groupRoutes.ts\n            \n            variable\n            groupRoute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/invitacionRoutes.ts\n            \n            class\n            InvitacionRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/invitacionRoutes.ts\n            \n            variable\n            invitacionRoute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/back-end/routes/pertenecesRoutes.ts\n            \n            class\n            PertenecesRoutes\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/back-end/routes/pertenecesRoutes.ts\n            \n            variable\n            pertenecesRoute\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/fire : ^5.1.3\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            @types/bootstrap : ^4.3.0\n        \n            @types/cors : ^2.8.5\n        \n            @types/express : ^4.16.1\n        \n            @types/firebase : ^3.2.1\n        \n            @types/morgan : ^1.7.35\n        \n            angularfire2 : ^5.1.3\n        \n            body-parser : ^1.19.0\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            cors : ^2.8.5\n        \n            express : ^4.17.1\n        \n            firebase : ^6.0.2\n        \n            mysql2 : ^1.6.5\n        \n            ngx-bootstrap : ^4.2.0\n        \n            promise-mysql : ^3.3.2\n        \n            rxjs : ~6.3.3\n        \n            sequelize : ^5.8.7\n        \n            sequelize-cli : ^5.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/groupRoutes.html":{"url":"classes/groupRoutes.html","title":"class - groupRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  groupRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/routes/groupRoutes.ts\n        \n\n            \n                Description\n            \n            \n                Las rutas del grupo\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/back-end/routes/groupRoutes.ts:13\n                            \n                        \n\n                \n                    \n                            Corre el metodo config\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                    \n                        \n                            Default value : Router()\n                        \n                    \n                        \n                            \n                                    Defined in src/back-end/routes/groupRoutes.ts:13\n                            \n                        \n\n                \n                    \n                        variable router del tipo Router\npara redirigir al controlador\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig()\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/routes/groupRoutes.ts:25\n                \n            \n\n\n            \n                \n                    Corre el controlador con sus respectivas rutas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router } from 'express';\nimport gruposController  from './../controllers/GruposController';\n\n/**\n   * Las rutas del grupo\n */\nclass groupRoutes{\n   \n    /**\n   * variable router del tipo Router\n   * para redirigir al controlador\n */\n    public router: Router = Router();\n\n    /**\n   * Corre el metodo config\n */\n    constructor(){\n        this.config();\n    }\n\n     /**\n   * Corre el controlador con sus respectivas rutas\n */\n    config(): void{\n        this.router.get('/', gruposController.get);\n        this.router.get('/:id', gruposController.getOne);\n        this.router.post('/', gruposController.create);\n        this.router.delete('/:id', gruposController.delete);\n        this.router.put('/:id', gruposController.update);\n        this.router.get('/:codigo', gruposController.getCodigos);\n        this.router.get('/administrador/:id', gruposController.getGruposAdministrador);\n        this.router.get('/perteneces/:codigo', gruposController.getGrupoCodigo);\n        this.router.get('/detalle/:id', gruposController.getGrupoDetalle);\n    }\n\n}\n\n/**\n   * Exporta las rutas\n */\nconst groupRoute= new groupRoutes();\nexport default groupRoute.router;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMetroUber\nThis project was generated with Angular CLI version 7.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGrupoComponent\n\nGrupoComponent\n\nAppModule -->\n\nGrupoComponent->AppModule\n\n\n\n\n\nInicioComponent\n\nInicioComponent\n\nAppModule -->\n\nInicioComponent->AppModule\n\n\n\n\n\nInvitacionesComponent\n\nInvitacionesComponent\n\nAppModule -->\n\nInvitacionesComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPerfilComponent\n\nPerfilComponent\n\nAppModule -->\n\nPerfilComponent->AppModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nAppModule -->\n\nRegistroComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCarroService\n\nCarroService\n\nAppModule -->\n\nCarroService->AppModule\n\n\n\n\n\nDireccionService\n\nDireccionService\n\nAppModule -->\n\nDireccionService->AppModule\n\n\n\n\n\nGrupoService\n\nGrupoService\n\nAppModule -->\n\nGrupoService->AppModule\n\n\n\n\n\nInvitacionService\n\nInvitacionService\n\nAppModule -->\n\nInvitacionService->AppModule\n\n\n\n\n\nPertenecesService\n\nPertenecesService\n\nAppModule -->\n\nPertenecesService->AppModule\n\n\n\n\n\nUsuarioService\n\nUsuarioService\n\nAppModule -->\n\nUsuarioService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/usuarioController.html":{"url":"classes/usuarioController.html","title":"class - usuarioController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  usuarioController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/back-end/controllers/usuarioController.ts\n        \n\n            \n                Description\n            \n            \n                Controlador de usuario\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                getUsuarioDetalle\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:35\n                \n            \n\n\n            \n                \n                    Crea un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:44\n                \n            \n\n\n            \n                \n                    Elimina un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:12\n                \n            \n\n\n            \n                \n                    Obtiene todos los usuarios\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:21\n                \n            \n\n\n            \n                \n                    Obtiene un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getUsuarioDetalle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsuarioDetalle(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:69\n                \n            \n\n\n            \n                \n                    Obtiene un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/back-end/controllers/usuarioController.ts:55\n                \n            \n\n\n            \n                \n                    Actualiza un usuario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport pool from '../database';\n\n/**\n   * Controlador de usuario\n */\nclass usuarioController{\n\n    /**\n   * Obtiene todos los usuarios\n */\n    public async get (req: Request, res: Response){\n        const usuarios=await pool.query(\"SELECT * FROM usuarios\");\n        res.json(usuarios);\n    }\n    \n    /**\n   * Obtiene un usuario\n   * @param {string} correo El correo dle usuario\n */\n    public async getOne (req: Request, res: Response): Promise {\n        const {correo}=req.params;\n        console.log(correo);\n        const usuarios= await pool.query(\"SELECT * FROM usuarios WHERE correo = ?\",  [correo]);\n        if(usuarios.length>0){\n            return res.json(usuarios[0]);\n        }\n        res.status(404).json({text: \"Usuario no encontrado\"});\n    }\n\n    /**\n   * Crea un usuario\n   * @param {Usuairo} usuario El usuario a crear en la base de datos\n */\n    public async create (req: Request, res: Response): Promise {\n        await pool.query(\"INSERT INTO usuarios set ?\", [req.body]);\n        res.json({message: 'Usuario creado'});\n    }\n\n     /**\n   * Elimina un usuario\n   * @param {string} id El id del usuario a eliminar\n */\n    public async delete (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        await pool.query(\"DELETE FROM usuarios WHERE id = ?\", [id]);\n        res.json({text: 'Usuario eliminado'});\n    }\n\n    /**\n   * Actualiza un usuario\n   * @param {Usuario} usuario El usuario a actualizar\n   * @param {string} id El id del usuario a actualizar\n */\n    public async update (req: Request, res:Response): Promise {\n        const {id}=req.params;\n        /*const {nombre}=req.params;\n        const {edad}=req.params;\n        const {cedula}=req.params;\n        const {telefono}=req.params;*/\n        await pool.query('UPDATE usuarios SET ? WHERE id = ?', [req.body, id]);\n        res.json({message: \"Usuario actualizado\"});\n    } \n\n    /**\n   * Obtiene un usuario\n   * @param {string} id El id del usuario a obtener\n */\n    public async getUsuarioDetalle (req: Request, res: Response): Promise {\n        const {id}=req.params;\n        console.log(id);\n        const usuarios= await pool.query(\"SELECT * FROM usuarios WHERE id = ?\",  [id]);\n        if(usuarios.length>0){\n            return res.json(usuarios[0]);\n        }\n        res.status(404).json({text: \"Usuario no encontrado\"});\n    }\n}\n\n/**\n   * Exporta el controlador\n */\nconst usuariosController=new usuarioController();\nexport default usuariosController;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            carroController   (src/.../CarroController.ts)\n                        \n                        \n                            carroRoute   (src/.../carroRoutes.ts)\n                        \n                        \n                            direccionController   (src/.../DireccionController.ts)\n                        \n                        \n                            direccionRoute   (src/.../direccionRoutes.ts)\n                        \n                        \n                            groupRoute   (src/.../groupRoutes.ts)\n                        \n                        \n                            gruposController   (src/.../GruposController.ts)\n                        \n                        \n                            invitacionController   (src/.../InvitacionController.ts)\n                        \n                        \n                            invitacionRoute   (src/.../invitacionRoutes.ts)\n                        \n                        \n                            pertenecesController   (src/.../PertenecesController.ts)\n                        \n                        \n                            pertenecesRoute   (src/.../pertenecesRoutes.ts)\n                        \n                        \n                            pool   (src/.../database.ts)\n                        \n                        \n                            server   (src/.../base.ts)\n                        \n                        \n                            usuarioRoutes   (src/.../UsuarioRoutes.ts)\n                        \n                        \n                            usuariosController   (src/.../usuarioController.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/back-end/controllers/CarroController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            carroController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new CarroController()\n                        \n                    \n\n                \n                    \n                        Exporta el controlador\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/carroRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            carroRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new CarroRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/controllers/DireccionController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            direccionController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DireccionController()\n                        \n                    \n\n                \n                    \n                        Se exporta el controlador\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/direccionRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            direccionRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DireccionRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/groupRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            groupRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new groupRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/controllers/GruposController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gruposController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new GruposController()\n                        \n                    \n\n                \n                    \n                        Se exporta el controlador\n\n                    \n                \n\n            \n        \n\n    src/back-end/controllers/InvitacionController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            invitacionController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InvitacionController()\n                        \n                    \n\n                \n                    \n                        Se exporta el controlador\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/invitacionRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            invitacionRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InvitacionRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/controllers/PertenecesController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pertenecesController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PertenecesController()\n                        \n                    \n\n                \n                    \n                        Exporta el controlador\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/pertenecesRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pertenecesRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PertenecesRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/database.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pool\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mysql.createPool(keys.database)\n                        \n                    \n\n                \n                    \n                        Crea un pool con la informacion del servidor\n\n                    \n                \n\n            \n        \n\n    src/back-end/base.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Server()\n                        \n                    \n\n                \n                    \n                        Crea el servidor y lo inicia\n\n                    \n                \n\n            \n        \n\n    src/back-end/routes/UsuarioRoutes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usuarioRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new baseRoutes()\n                        \n                    \n\n                \n                    \n                        Exporta las rutas\n\n                    \n                \n\n            \n        \n\n    src/back-end/controllers/usuarioController.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usuariosController\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new usuarioController()\n                        \n                    \n\n                \n                    \n                        Exporta el controlador\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
